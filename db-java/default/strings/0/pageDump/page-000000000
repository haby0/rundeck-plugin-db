float|double|int|boolean|short|byte|char|longClassValue<>$ClassValueMapClassValue<>$IdentityClassValue<>$EntryClassValue<>$Entry<?>ClassValue<>$VersionClassValue<>$Version<?>ClassValue<>$Entry<>ClassValue<>$Entry<T>ClassValue<>$Version<T>ClassValue<>$Version<>ThreadLocal<>$ThreadLocalMapRun<?,?>$Artifact<>Run<?,?>$RunExecution<>Run<?,?>$Runner<>Run<>$Artifact<>Run<>$SummaryRun<>$RunExecution<>Run<>$Runner<>Run<>$RunnerAbortedExceptionSpliterator<>$OfDoubleSpliterator<>$OfLongSpliterator<>$OfIntSpliterator<>$OfPrimitiveSpliterator<>$OfPrimitive<Double,DoubleConsumer,OfDouble>Spliterator<>$OfPrimitive<>Spliterator<>$OfPrimitive<Integer,IntConsumer,OfInt>Spliterator<>$OfPrimitive<Long,LongConsumer,OfLong>Stream<>$BuilderStream<>$Builder<>Stream<>$Builder<T>Map<>$EntryMap<>$Entry<K,V>Map<>$Entry<String,RundeckInstance>Map<>$Entry<>Map<>$Entry<String,Cache<String,RundeckJob>>Map<>$Entry<Object,Object>Map<>$Entry<String,Object>Map<>$Entry<String,Method>Map<>$Entry<String,PropertyInfo>Map<>$Entry<? extends K,? extends V>Map<>$Entry<String,String>Map<>$Entry<K,?>Map<>$Entry<Integer,R>Map<>$Entry<Identity,Entry<?>>Map<>$Entry<String,List<V>>Map<>$Entry<NameAndType,Set<MemberAdapter>>Descriptor<>$FormExceptionDescriptor<>$PropertyTypeHistoryWidget<>$AdapterHistoryWidget<>$Adapter<Run<>>HistoryWidget<>$Adapter<? super T>AbstractBuild<>$DependencyChangeAbstractBuild<>$AbstractBuildExecution<>LazyBuildMixIn<>$LazyLoadingRunLazyBuildMixIn<>$LazyLoadingRun<>LazyBuildMixIn<>$RunMixInLazyBuildMixIn<>$RunMixIn<>LazyBuildMixIn<>$RunMixIn<JobT,RunT>LazyBuildMixIn<>$LazyLoadingJobLazyBuildMixIn<>$LazyLoadingJob<>LazyBuildMixIn<>$LazyLoadingJob<?,?>LazyBuildMixIn<>$LazyLoadingRun<?,?>LazyBuildMixIn<>$RunMixIn<P,R>LazyBuildMixIn<>$RunMixIn<?,?>LazyBuildMixIn<>$LazyLoadingJob<FreeStyleProject,FreeStyleBuild>LazyBuildMixIn<>$LazyLoadingRun<FreeStyleProject,FreeStyleBuild>LazyBuildMixIn<>$RunMixIn<FreeStyleProject,FreeStyleBuild>LazyBuildMixIn<>$LazyLoadingRun<P,R>LazyBuildMixIn<>$LazyLoadingJob<P,R>LazyBuildMixIn<>$LazyLoadingRun<P,B>LazyBuildMixIn<>$RunMixIn<P,B>LazyBuildMixIn<>$LazyLoadingJob<P,B>LazyBuildMixIn<>$LazyLoadingRun<JobT,RunT>LazyBuildMixIn<>$LazyLoadingJob<JobT,RunT>LazyBuildMixIn<>$LazyLoadingJob<J,R>LazyBuildMixIn<>$LazyLoadingRun<J,R>AbstractProject<>$AbstractProjectDescriptorChangeLogSet<>$EntryChangeLogSet<>$AffectedFileFilePath$FileCallable<>FilePath$FileCallable<V>FilePath$FileCallable<T>InMemoryRundeckJobCache$RunMap<>$ConstructorRunMap<>$Constructor<R>RunMap<>$Constructor<>AbstractLazyLoadRunMap<>$DirectionDescribableList<>$OwnerAlternativeUiTextProvider$Message<AbstractProject<>>AlternativeUiTextProvider$Message<AbstractItem>AlternativeUiTextProvider$Message<View>AlternativeUiTextProvider$Message<>AlternativeUiTextProvider$Message<T>AlternativeUiTextProvider$Message<ParameterizedJob>HashMap<>$NodeHashMap<>$Node<K,V>HashMap<>$Node<String,RundeckInstance>HashMap<>$TreeNodeHashMap<>$TreeNode<>HashMap<>$Node<>HashMap<>$TreeNode<K,V>HashMap<>$TreeNode<String,RundeckInstance>HashMap<>$Node<String,Object>HashMap<>$TreeNode<String,Object>HashMap<>$Node<String,List<V>>HashMap<>$TreeNode<String,List<V>>HashMap<>$Node<NameAndType,Set<MemberAdapter>>HashMap<>$TreeNode<NameAndType,Set<MemberAdapter>>LinkedHashMap<>$EntryLinkedHashMap<>$Entry<>LinkedHashMap<>$Entry<K,V>LinkedHashMap<>$Entry<String,RundeckInstance>LinkedHashMap<>$Entry<String,Object>LinkedHashMap<>$Entry<String,List<V>>LinkedHashMap<>$Entry<NameAndType,Set<MemberAdapter>>Equivalence<>$WrapperEquivalence<>$Wrapper<>Equivalence<>$Wrapper<S>ImmutableMap<>$BuilderImmutableMap<>$Builder<>ImmutableMap<>$Builder<K,V>RunDeckLogTailTest$RundeckNotifierTest$Run<FreeStyleProject,FreeStyleBuild>$RunExecution<>Run<FreeStyleProject,FreeStyleBuild>$Runner<>Run<FreeStyleProject,FreeStyleBuild>$Artifact<>AbstractCache<>$StatsCounterAbstractCache<>$SimpleStatsCounterLocalCache<>$StrengthLocalCache<>$EntryFactoryLocalCache<>$ReferenceEntryLocalCache<>$ReferenceEntry<>LocalCache<>$ReferenceEntry<K,V>LocalCache<>$SegmentLocalCache<>$Segment<>LocalCache<>$Segment<K,V>LocalCache<>$LoadingValueReferenceLocalCache<>$ValueReferenceLocalCache<>$ValueReference<K,V>LocalCache<>$ValueReference<>LocalCache<>$LoadingValueReference<K,V>LocalCache<>$LoadingValueReference<>LocalCache<>$ValueReference<Object,Object>ImmutableCollection<>$BuilderImmutableCollection<>$Builder<>ImmutableCollection<>$Builder<E>ImmutableList<>$BuilderImmutableList<>$Builder<>ImmutableList<>$Builder<E>ImmutableSet<>$BuilderImmutableSet<>$Builder<>ImmutableSet<>$Builder<E>ProvisionListener$ProvisionInvocation<>ProvisionListener$ProvisionInvocation<T>Key<>$AnnotationStrategyTreeMap<>$EntryTreeMap<>$Entry<>TreeMap<>$Entry<K,V>TreeMap<>$Entry<String,String>TreeMap<>$Entry<K,?>Run<P,R>$Runner<>Run<P,R>$RunExecution<>Run<P,R>$Artifact<>Run<P,B>$RunExecution<>Run<P,B>$Runner<>Run<P,B>$Artifact<>RetentionStrategy<>$AlwaysMappingWorksheet$ReadOnlyList<ExecutorSlot>MappingWorksheet$ReadOnlyList<SubTask>TagCloud<>$WeightFunctionTagCloud<>$Entry<>TagCloud<>$WeightFunction<T>TagCloud<LabelAtom>$Entry<>AbstractLazyLoadRunMap<R>$Index<>ExportTable$Entry<>WeakHashMap<>$EntryWeakHashMap<>$Entry<>WeakHashMap<>$Entry<K,V>WeakHashMap<>$Entry<Identity,Entry<?>>MethodType$ConcurrentWeakInternSet<MethodType>DirectoryStream<>$FilterDirectoryStream<>$Filter<? super Path>WatchEvent<>$KindWatchEvent<>$Kind<?>WatchEvent<>$ModifierWatchEvent<>$Kind<>WatchEvent<>$Kind<T>PrimitiveIterator<>$OfDoublePrimitiveIterator<>$OfIntPrimitiveIterator<>$OfLongCompletableFuture<>$AltResultCompletableFuture<>$AsynchronousCompletionTaskCompletableFuture<>$BiAcceptCompletableFuture<>$BiCompletionCompletableFuture<>$BiCompletion<T,U,Void>CompletableFuture<>$UniCompletionCompletableFuture<>$UniCompletion<T,Void>CompletableFuture<>$CompletionCompletableFuture<>$BiApplyCompletableFuture<>$BiCompletion<T,U,V>CompletableFuture<>$UniCompletion<T,V>CompletableFuture<>$BiRunCompletableFuture<>$OrAcceptCompletableFuture<>$OrApplyCompletableFuture<>$OrRunCompletableFuture<>$UniAcceptCompletableFuture<>$UniApplyCompletableFuture<>$UniComposeCompletableFuture<>$UniExceptionallyCompletableFuture<>$UniCompletion<T,T>CompletableFuture<>$UniHandleCompletableFuture<>$UniRunCompletableFuture<>$UniWhenCompleteCompletableFuture<>$OrRun<?,?>CompletableFuture<>$BiCompletion<?,?,Void>CompletableFuture<>$UniCompletion<?,Void>CompletableFuture<>$OrAccept<>CompletableFuture<>$BiCompletion<>CompletableFuture<>$UniCompletion<>CompletableFuture<>$OrAccept<R,S>CompletableFuture<>$BiCompletion<R,S,Void>CompletableFuture<>$UniCompletion<R,Void>CompletableFuture<>$OrApply<>CompletableFuture<>$OrApply<R,S,T>CompletableFuture<>$BiCompletion<R,S,T>CompletableFuture<>$UniCompletion<R,T>CompletableFuture<>$BiCompletion<?,?,?>CompletableFuture<>$UniCompletion<?,?>CompletableFuture<>$BiRun<?,?>CompletableFuture<>$BiAccept<>CompletableFuture<>$BiAccept<R,S>CompletableFuture<>$BiApply<>CompletableFuture<>$BiApply<R,S,T>CompletableFuture<>$UniCompose<>CompletableFuture<>$UniCompose<S,T>CompletableFuture<>$UniCompletion<S,T>CompletableFuture<>$UniExceptionally<T>CompletableFuture<>$UniHandle<>CompletableFuture<>$UniHandle<S,T>CompletableFuture<>$UniWhenComplete<T>CompletableFuture<>$UniRun<?>CompletableFuture<>$UniAccept<>CompletableFuture<>$UniAccept<S>CompletableFuture<>$UniCompletion<S,Void>CompletableFuture<>$UniApply<>CompletableFuture<>$UniApply<S,T>ConcurrentHashMap<>$CollectionViewConcurrentHashMap<>$KeySetViewConcurrentHashMap<>$CollectionView<K,V,K>ConcurrentHashMap<>$NodeConcurrentHashMap<>$Node<>ConcurrentHashMap<>$Node<K,V>ConcurrentHashMap<>$KeySetView<>ConcurrentHashMap<>$CollectionView<>ConcurrentHashMap<>$KeySetView<K,V>ConcurrentHashMap<>$KeySetView<K,Boolean>ConcurrentHashMap<>$CollectionView<K,Boolean,K>Collector<>$CharacteristicsDiagnostic<>$KindParameterizedJobMixIn<>$ParameterizedJobRecipe$Runner<>Recipe$Runner<LocalData>JenkinsRecipe$Runner<>JenkinsRecipe$Runner<LocalData>Structure<>$TypeSafetyp0p3p4p5p6p7p8p9p10p11p12p13p14p15p16p17p18p19p20p21p22p23p24p25p26+=-=*=/=%=&=|=^=<<=>>=>>>= *  /  %  +  -  &  |  ^  <  >  <<  >>  &&  ||  <=  >=  ==  !=  >>> ///**  ... */ */case ......+=......-=...... == ...... + ...... || ...... && ...... != ...... >= ...... * ...... < ...... > ...... - ...... <= ...... % ...;null-...+...~...!...{...}break...++...--++...--......[]? ...findProject(...)getParameter(...)findBuild(...)sendError(...)isNotBlank(...)compile(...)getMessage(...)getArtifacts(...)matches(...)matcher(...)getFileName(...)add(...)buildArtifactUrl(...)writeJson(...)getItems(...)getInstance(...)getItemTree(...)append(...)getFullName(...)replaceAll(...)toString(...)getBuilds(...)isBlank(...)parseInt(...)findArtifact(...)getDisplayName(...)size(...)valueOf(...)getLastStableBuild(...)getLastSuccessfulBuild(...)getLastBuild(...)getItemByFullName(...)getBuildByNumber(...)equalsIgnoreCase(...)equals(...)getRootUrl(...)getHref(...)getUrl(...)addAll(...)setContentType(...)getWriter(...)hashCode(...)getClass(...)getLogger(...)getName(...)<obinit>(...)getExecutionOutputState(...)updateIterationState(...)log(...)checkCompletionState(...)addRunDeckOutputEntriesToResults(...)checkExecCompletionState(...)handleSleep(...)sleepOrThrowException(...)warning(...)checkOutputCompletionState(...)isExecCompleted(...)isCompleted(...)sleep(...)getOffset(...)getLogEntries(...)handleMaxlines(...)getId(...)getJob(...)getProject(...)onAddedTo(...)addAction(...)put(...)getGroup(...)getDescription(...)getStatus(...)getStartedBy(...)getStartedAt(...)getEndedAt(...)getAbortedBy(...)getDurationInMillis(...)getDurationInSeconds(...)getDuration(...)getShortDuration(...)isNotEmpty(...)getArgstring(...)split(...)group(...)trim(...)endsWith(...)substring(...)length(...)getPlainText(...)getApiVersion(...)getPassword(...)fromString(...)getToken(...)getLogin(...)isEmpty(...)setUrl(...)setApiVersion(...)setLogin(...)setPassword(...)setToken(...)builder(...)url(...)token(...)login(...)getPasswordPlainText(...)version(...)build(...)getDeclaredMethod(...)setAccessible(...)invoke(...)findJob(...)buildRundeckJobUrl(...)extracttags(...)getRundeckJobInstance(...)getDescriptor(...)getResult(...)println(...)ping(...)shouldNotifyRundeck(...)notifyRundeck(...)getChangeSet(...)createEmpty(...)getRundeckInstance(...)containsIgnoreCase(...)getMsg(...)getAuthor(...)getCauses(...)isInstance(...)getItem(...)getUpstreamProject(...)getUpstreamBuild(...)getFullDisplayName(...)getEnvironment(...)expand(...)findJobId(...)triggerJob(...)setNodeFilters(...)setOptions(...)parseProperties(...)setJobId(...)printf(...)waitTailingRundeckLogsAndReturnExecution(...)waitForRundeckExecutionToFinishAndReturnIt(...)getAndPrintRundeckLogsForExecution(...)getShouldFailTheBuild(...)setResult(...)format(...)getLevel(...)getTime(...)getExecution(...)logExecutionStatus(...)replaceMacro(...)find(...)reset(...)end(...)replace(...)start(...)loadProperties(...)abortExecution(...)getExecutionOutput(...)getSimpleName(...)initializeWithDefaultValues(...)load(...)initializeRundeckJobCache(...)isEnabled(...)info(...)invalidate(...)client(...)setRundeckInstances(...)addCompatibilityAlias(...)getRootDir(...)getActiveInstance(...)optJSONArray(...)optJSONObject(...)getJSONObject(...)getString(...)get(...)optInt(...)getInt(...)configureRundeckJobCache(...)save(...)configure(...)has(...)setEnabled(...)contains(...)findJobUncached(...)fixEmpty(...)getBoolean(...)checkPermission(...)ok(...)logAndGetStats(...)error(...)testAuth(...)fine(...)groupCount(...)getRundeckDescriptor(...)findJobById(...)getRundeckJobCacheConfig(...)getClient(...)createClient(...)asList(...)listIterator(...)hasNext(...)next(...)remove(...)toArray(...)getExtensionList(...)shouldScheduleBuild(...)scheduleBuild(...)identifierMatchesJob(...)bindJSONToList(...)loadDocument(...)getInputStream(...)parseXmlNode(...)closeQuietly(...)setStatus(...)getAllItems(...)getTrigger(...)onNotification(...)requireNonNull(...)getCacheStatsDisplayHitThreshold(...)expireAfterAccess(...)newBuilder(...)createJobCacheForRundeckInstance(...)maximumSize(...)getMaximumSize(...)getAfterAccessExpirationInMinutes(...)findByJobIdInCacheOrAskServer(...)rethrowUnwrappingRundeckApiExceptionIfPossible(...)logStatsAndReturnsAsString(...)entrySet(...)asMap(...)logCacheStats(...)getKey(...)getValue(...)stats(...)invalidateAll(...)logCacheStatsIfAppropriate(...)getCause(...)propagate(...)iterator(...)returns(...)createLogEntries(...)assertTrue(...)assertMessagesPresentInOrder(...)assertFalse(...)fail(...)assertEquals(...)interrupt(...)onInstance(...)currentThread(...)setMessage(...)setId(...)setStartedAt(...)setArgstring(...)buildEnvVars(...)getDescriptorOrDie(...)getRundeckInstances(...)assertNotNull(...)readFileToString(...)getEncryptedValue(...)getPublisher(...)getOldJob(...)getJobId(...)getTag(...)getTags(...)getFile(...)getConfigFile(...)createOptions(...)createFreeStyleProject(...)assertBuildStatusSuccess(...)scheduleBuild2(...)getLogFile(...)setClient(...)setRundeckBuilder(...)addRundeckInstance(...)getBuildersList(...)getPublishersList(...)setScm(...)createScm(...)buildContainsAction(...)addScmCommit(...)getWorkspace(...)assertBuildStatus(...)getOptions(...)getProperty(...)setProperty(...)store(...)allocate(...)getResource(...)getPath(...)toURI(...)createSvnClientManager(...)child(...)getRemote(...)setAuthenticationProvider(...)setAuthenticationManager(...)touch(...)currentTimeMillis(...)doAdd(...)getWCClient(...)doCommit(...)getCommitClient(...)getActions(...)getJobUser(...)initExecution(...)addMinutes(...)addSeconds(...)setEndedAt(...){ ... }try ...<Expr>;...|......&......=......[...]if (...)continuevar ...;(...)......->......::...throw ...class ...this(...)yield ...return ...assert ...super(...)while (...)catch (...)...?...:...switch (...)<Label>: ...for (... : ...)...instanceof...for (...;...;...)do ... while (...)synchronized (...)thisJob<?,?> projectString artifactRegexPattern artifactPatternRun<?,?> buildList<Option> optionsPatternSyntaxException eArtifact<> artifactList<TopLevelItem> topItemsTopLevelItem topItemItemGroup<> groupItemObject anItemItem subItemString artifactNameInteger limitRunList<?> buildsStringBuffer sbString itemTreeNumberFormatException eString buildNameInteger buildNbStringBuilder urlJSONArray arrayString jsonint primeint resultOption otherRundeckOutput rundeckOutputboolean offsetChangedRundeckApiException eInterruptedException eboolean execCompletedboolean outputCompletedint nextOffsetList<RundeckOutputEntry> runDeckOutputEntriesRundeckOutputEntry rundeckOutputEntryStringBuilder descriptionRundeckCause otherString[] argsint iMatcher matcherString keyString valueString apiVersionLoadedRundeckInstance clientRundeckClientBuilder builderMethod methodException eRundeckClient rundeckAbstractBuild<?,?> bString infoEntry changeLogString tagCause causeUpstreamCause upstreamCauseTopLevelItem itemAbstractProject<?,?> upstreamProjectAbstractBuild<?,?> upstreamBuildString runtimeJobIdString foundJobIdEnvVars envIllegalArgumentException eRundeckExecution executionRundeckApiLoginException eRundeckApiTokenException eRunDeckLogTail runDeckLogTailPrintStream printStreamList<RundeckOutputEntry> aRunDeckLogTailint idxEnvVars envVarsString regexPattern patternIOException eRundeckAbort rundeckAbortList<RundeckOutputEntry> logEntriesRuntimeException eStringBuilder builderMap<String,RundeckInstance> instanceXStream2 xsJSONArray instancesMap<String,RundeckInstance> newInstancesJSONObject instanceRundeckInstanceBuilder builderboolean cacheEnabledAsBooleanString rundeckInstanceString jobIdentifierString jobUserString jobPasswordString jobTokenRundeckJob jobSecret passwordSecret tokenRundeckClient clientString userLoginString projectString groupPathString nameRundeckJob foundJobRundeckJobCache rundeckJobCacheRundeckJobCacheConfig rundeckJobCacheConfigRundeckInstance instanceint apiVersionString urlMap<String,RundeckInstance> instancesList<String> listListIterator<String> iteratorString jobReferenceList<String> resultObject elemDocument documentExecutionParser parserAbstractProject<?,?> jobRundeckTrigger triggerStringBuilder sbEntry<String,Cache<String,RundeckJob>> instanceCacheEntriesCache<String,RundeckJob> rundeckJobCacheRundeckJob tmplong executionIdint maxLinesint maxRetrieslong sleepRetrylong sleepUnmodifiedlong sleepModifiedRunDeckLogTailIterator iteratorList<RundeckOutputEntry> resultsString messageRundeckExecutionEnvironmentContributingAction rundeckExecutionEnvironmentContributingActionRundeckDescriptor descriptorString oldStoredConfigString storedConfigString expectedRundeckNotifier notifierFreeStyleProject jobRundeckInstanceBuilder instanceBuilderFreeStyleProject projectFreeStyleBuild buildString sFreeStyleBuild checkBuildString optionStringFreeStyleProject upstreamFreeStyleBuild upstreamBuildString[] tagsProperties optionsStringWriter writerFile emptyRepositorySVNClientManager svnmSVNAuthenticationManager mgrFilePath newFilePathFile newFileAction actionString loginString passwordMockRundeckClient clientDate endedAtMap<String,Object> parameterssupernew ArrayList<Option>(...)new Option(...)new StringBuffer(...)new StringBuilder(...)new JSONArray(...)new RunDeckLogTailIterator(...)new ArrayList<RundeckOutputEntry>(...)new UnsupportedOperationException(...)new RundeckExecutionEnvironmentContributingAction(...)new RundeckInstanceBuilder(...)new RundeckInstance(...)new IllegalArgumentException(...)new AbortException(...)new RundeckExecutionBuildBadgeAction(...)new IllegalStateException(...)new RunDeckLogTail(...)new Properties(...)new RundeckJobProjectLinkerAction(...)new LinkedHashMap<String,RundeckInstance>(...)new DummyRundeckJobCache(...)new InMemoryRundeckJobCache(...)new XStream2(...)new XmlFile(...)new File(...)new FormException(...)new RundeckNotifier(...)new ArrayList<String>(...)new OptionProvider(...)new WebHookListener(...)new RundeckCause(...)new RundeckTrigger(...)new ExecutionParser(...)new (...)new RundeckApiException(...)new RundeckJobCacheConfig(...)new InterruptedException(...)new RundeckOutputEntry(...)new RundeckExecution(...)new EnvVars(...)new Date(...)new RundeckDescriptor(...)new MockRundeckClient(...)new MockBuilder(...)new UpstreamCause(...)new StringWriter(...)new CopyExisting(...)new SubversionSCM(...)new SVNAuthenticationManager(...)new CredentialsSVNAuthenticationProviderImpl(...)new UsernamePasswordCredentialsImpl(...)new RundeckJob(...)new HashMap<String,Object>(...)new Object[]new String[]new File[]import AbstractProjectimport AbstractProject.*import static AbstractProject.*import Hudsonimport Hudson.*import static Hudson.*import Itemimport Item.*import static Item.*import ItemGroupimport ItemGroup.*import static ItemGroup.*import Jobimport Job.*import static Job.*import Runimport Run.*import static Run.*import Artifactimport Artifact.*import static Artifact.*import TopLevelItemimport TopLevelItem.*import static TopLevelItem.*import RunListimport RunList.*import static RunList.*import IOExceptionimport IOException.*import static IOException.*import Serializableimport Serializable.*import static Serializable.*import ArrayListimport ArrayList.*import static ArrayList.*import Listimport List.*import static List.*import Patternimport Pattern.*import static Pattern.*import PatternSyntaxExceptionimport PatternSyntaxException.*import static PatternSyntaxException.*import HttpServletResponseimport HttpServletResponse.*import static HttpServletResponse.*import JSONArrayimport JSONArray.*import static JSONArray.*import StringUtilsimport StringUtils.*import static StringUtils.*import StaplerRequestimport StaplerRequest.*import static StaplerRequest.*import StaplerResponseimport StaplerResponse.*import static StaplerResponse.*import OptionProviderimport OptionProvider.*import static OptionProvider.*import Optionimport Option.*import static Option.*import List<Option>import List<Option>.*import static List<Option>.*import Collectionimport Collection.*import static Collection.*import Collection<Option>import Collection<Option>.*import static Collection<Option>.*import Iterableimport Iterable.*import static Iterable.*import Iterable<Option>import Iterable<Option>.*import static Iterable<Option>.*import Objectimport Object.*import static Object.*import ?import ?.*import static ?.*import Run<?,?>import Run<?,?>.*import static Run<?,?>.*import Actionableimport Actionable.*import static Actionable.*import ExtensionPointimport ExtensionPoint.*import static ExtensionPoint.*import Comparableimport Comparable.*import static Comparable.*import Comparable<?>import Comparable<?>.*import static Comparable<?>.*import AccessControlledimport AccessControlled.*import static AccessControlled.*import PersistenceRootimport PersistenceRoot.*import static PersistenceRoot.*import DescriptorByNameOwnerimport DescriptorByNameOwner.*import static DescriptorByNameOwner.*import OnMasterimport OnMaster.*import static OnMaster.*import ExportedBeanimport ExportedBean.*import static ExportedBean.*import Artifact<>import Artifact<>.*import static Artifact<>.*import Run<>import Run<>.*import static Run<>.*import Comparable<>import Comparable<>.*import static Comparable<>.*import Stringimport String.*import static String.*import static String.formatimport Job<?,?>import Job<?,?>.*import static Job<?,?>.*import AbstractItemimport AbstractItem.*import static AbstractItem.*import StaplerOverridableimport StaplerOverridable.*import static StaplerOverridable.*import ModelObjectWithChildrenimport ModelObjectWithChildren.*import static ModelObjectWithChildren.*import BridgeMethodsAddedimport BridgeMethodsAdded.*import static BridgeMethodsAdded.*import Job<>import Job<>.*import static Job<>.*import StringBufferimport StringBuffer.*import static StringBuffer.*import ServletRequestimport ServletRequest.*import static ServletRequest.*import ArrayList<Option>import ArrayList<Option>.*import static ArrayList<Option>.*import AbstractListimport AbstractList.*import static AbstractList.*import AbstractList<Option>import AbstractList<Option>.*import static AbstractList<Option>.*import AbstractCollectionimport AbstractCollection.*import static AbstractCollection.*import AbstractCollection<Option>import AbstractCollection<Option>.*import static AbstractCollection<Option>.*import RandomAccessimport RandomAccess.*import static RandomAccess.*import Cloneableimport Cloneable.*import static Cloneable.*import Spliteratorimport Spliterator.*import static Spliterator.*import Spliterator<>import Spliterator<>.*import static Spliterator<>.*import Timport T.*import static T.*import Spliterator<T>import Spliterator<T>.*import static Spliterator<T>.*import Spliterator<Option>import Spliterator<Option>.*import static Spliterator<Option>.*import Consumerimport Consumer.*import static Consumer.*import ? super Timport ? super T.*import static ? super T.*import Consumer<? super T>import Consumer<? super T>.*import static Consumer<? super T>.*import FunctionalInterfaceimport FunctionalInterface.*import static FunctionalInterface.*import ? super Optionimport ? super Option.*import static ? super Option.*import Consumer<? super Option>import Consumer<? super Option>.*import static Consumer<? super Option>.*import Iteratorimport Iterator.*import static Iterator.*import Iterator<>import Iterator<>.*import static Iterator<>.*import Iterator<T>import Iterator<T>.*import static Iterator<T>.*import Iterator<Option>import Iterator<Option>.*import static Iterator<Option>.*import Streamimport Stream.*import static Stream.*import Stream<>import Stream<>.*import static Stream<>.*import BaseStreamimport BaseStream.*import static BaseStream.*import BaseStream<>import BaseStream<>.*import static BaseStream<>.*import AutoCloseableimport AutoCloseable.*import static AutoCloseable.*import Eimport E.*import static E.*import Stream<E>import Stream<E>.*import static Stream<E>.*import BaseStream<E,Stream<E>>import BaseStream<E,Stream<E>>.*import static BaseStream<E,Stream<E>>.*import Stream<Option>import Stream<Option>.*import static Stream<Option>.*import BaseStream<Option,Stream<Option>>import BaseStream<Option,Stream<Option>>.*import static BaseStream<Option,Stream<Option>>.*import Spliterator<E>import Spliterator<E>.*import static Spliterator<E>.*import Collection<?>import Collection<?>.*import static Collection<?>.*import Iterable<?>import Iterable<?>.*import static Iterable<?>.*import Predicateimport Predicate.*import static Predicate.*import ? super Eimport ? super E.*import static ? super E.*import Predicate<? super E>import Predicate<? super E>.*import static Predicate<? super E>.*import Predicate<? super Option>import Predicate<? super Option>.*import static Predicate<? super Option>.*import ? extends Eimport ? extends E.*import static ? extends E.*import Collection<? extends E>import Collection<? extends E>.*import static Collection<? extends E>.*import Iterable<? extends E>import Iterable<? extends E>.*import static Iterable<? extends E>.*import ? extends Optionimport ? extends Option.*import static ? extends Option.*import Collection<? extends Option>import Collection<? extends Option>.*import static Collection<? extends Option>.*import Iterable<? extends Option>import Iterable<? extends Option>.*import static Iterable<? extends Option>.*import Object[]import Object[].*import static Object[].*import T[]import T[].*import static T[].*import Iterator<E>import Iterator<E>.*import static Iterator<E>.*import List<>import List<>.*import static List<>.*import Collection<>import Collection<>.*import static Collection<>.*import Iterable<>import Iterable<>.*import static Iterable<>.*import ListIteratorimport ListIterator.*import static ListIterator.*import ListIterator<>import ListIterator<>.*import static ListIterator<>.*import ListIterator<E>import ListIterator<E>.*import static ListIterator<E>.*import ListIterator<Option>import ListIterator<Option>.*import static ListIterator<Option>.*import Comparatorimport Comparator.*import static Comparator.*import Comparator<? super E>import Comparator<? super E>.*import static Comparator<? super E>.*import Comparator<? super Option>import Comparator<? super Option>.*import static Comparator<? super Option>.*import UnaryOperatorimport UnaryOperator.*import static UnaryOperator.*import UnaryOperator<E>import UnaryOperator<E>.*import static UnaryOperator<E>.*import Functionimport Function.*import static Function.*import Function<E,E>import Function<E,E>.*import static Function<E,E>.*import UnaryOperator<Option>import UnaryOperator<Option>.*import static UnaryOperator<Option>.*import Function<Option,Option>import Function<Option,Option>.*import static Function<Option,Option>.*import List<E>import List<E>.*import static List<E>.*import Collection<E>import Collection<E>.*import static Collection<E>.*import Iterable<E>import Iterable<E>.*import static Iterable<E>.*import Consumer<? super E>import Consumer<? super E>.*import static Consumer<? super E>.*import List<Artifact<>>import List<Artifact<>>.*import static List<Artifact<>>.*import Collection<Artifact<>>import Collection<Artifact<>>.*import static Collection<Artifact<>>.*import Iterable<Artifact<>>import Iterable<Artifact<>>.*import static Iterable<Artifact<>>.*import JSONObjectimport JSONObject.*import static JSONObject.*import HttpResponseimport HttpResponse.*import static HttpResponse.*import ServletExceptionimport ServletException.*import static ServletException.*import FormExceptionimport FormException.*import static FormException.*import IllegalArgumentExceptionimport IllegalArgumentException.*import static IllegalArgumentException.*import EnvVarsimport EnvVars.*import static EnvVars.*import TaskListenerimport TaskListener.*import static TaskListener.*import InterruptedExceptionimport InterruptedException.*import static InterruptedException.*import Mapimport Map.*import static Map.*import Map<>import Map<>.*import static Map<>.*import Map<String,String>import Map<String,String>.*import static Map<String,String>.*import DirectoryBrowserSupportimport DirectoryBrowserSupport.*import static DirectoryBrowserSupport.*import Summaryimport Summary.*import static Summary.*import List<String>import List<String>.*import static List<String>.*import Collection<String>import Collection<String>.*import static Collection<String>.*import Iterable<String>import Iterable<String>.*import static Iterable<String>.*import RunExecutionimport RunExecution.*import static RunExecution.*import RunExecution<>import RunExecution<>.*import static RunExecution<>.*import Runnerimport Runner.*import static Runner.*import Runner<>import Runner<>.*import static Runner<>.*import Deprecatedimport Deprecated.*import static Deprecated.*import CheckPointimport CheckPoint.*import static CheckPoint.*import BuildListenerimport BuildListener.*import static BuildListener.*import ACLimport ACL.*import static ACL.*import Permissionimport Permission.*import static Permission.*import Apiimport Api.*import static Api.*import SearchIndexBuilderimport SearchIndexBuilder.*import static SearchIndexBuilder.*import AnnotatedLargeTextimport AnnotatedLargeText.*import static AnnotatedLargeText.*import AnnotatedLargeText<>import AnnotatedLargeText<>.*import static AnnotatedLargeText<>.*import LargeTextimport LargeText.*import static LargeText.*import OutputStreamimport OutputStream.*import static OutputStream.*import XMLOutputimport XMLOutput.*import static XMLOutput.*import Readerimport Reader.*import static Reader.*import InputStreamimport InputStream.*import static InputStream.*import Fileimport File.*import static File.*import List<Artifact>import List<Artifact>.*import static List<Artifact>.*import Collection<Artifact>import Collection<Artifact>.*import static Collection<Artifact>.*import Iterable<Artifact>import Iterable<Artifact>.*import static Iterable<Artifact>.*import ArtifactManagerimport ArtifactManager.*import static ArtifactManager.*import Descriptorimport Descriptor.*import static Descriptor.*import Descriptor<>import Descriptor<>.*import static Descriptor<>.*import Saveableimport Saveable.*import static Saveable.*import RunTimport RunT.*import static RunT.*import Resultimport Result.*import static Result.*import List<RunT>import List<RunT>.*import static List<RunT>.*import Collection<RunT>import Collection<RunT>.*import static Collection<RunT>.*import Iterable<RunT>import Iterable<RunT>.*import static Iterable<RunT>.*import List<?>import List<?>.*import static List<?>.*import BuildReferenceimport BuildReference.*import static BuildReference.*import BuildReference<>import BuildReference<>.*import static BuildReference<>.*import BuildReference<RunT>import BuildReference<RunT>.*import static BuildReference<RunT>.*import BuildReference<?>import BuildReference<?>.*import static BuildReference<?>.*import BallColorimport BallColor.*import static BallColor.*import Dateimport Date.*import static Date.*import Calendarimport Calendar.*import static Calendar.*import JobTimport JobT.*import static JobT.*import Classimport Class.*import static Class.*import Class<>import Class<>.*import static Class<>.*import GenericDeclarationimport GenericDeclaration.*import static GenericDeclaration.*import Typeimport Type.*import static Type.*import AnnotatedElementimport AnnotatedElement.*import static AnnotatedElement.*import Causeimport Cause.*import static Cause.*import Class<T>import Class<T>.*import static Class<T>.*import List<Cause>import List<Cause>.*import static List<Cause>.*import Collection<Cause>import Collection<Cause>.*import static Collection<Cause>.*import Iterable<Cause>import Iterable<Cause>.*import static Iterable<Cause>.*import Charsetimport Charset.*import static Charset.*import Executorimport Executor.*import static Executor.*import BuildBadgeActionimport BuildBadgeAction.*import static BuildBadgeAction.*import List<BuildBadgeAction>import List<BuildBadgeAction>.*import static List<BuildBadgeAction>.*import Collection<BuildBadgeAction>import Collection<BuildBadgeAction>.*import static Collection<BuildBadgeAction>.*import Iterable<BuildBadgeAction>import Iterable<BuildBadgeAction>.*import static Iterable<BuildBadgeAction>.*import Actionimport Action.*import static Action.*import List<Action>import List<Action>.*import static List<Action>.*import Collection<Action>import Collection<Action>.*import static Collection<Action>.*import Iterable<Action>import Iterable<Action>.*import static Iterable<Action>.*import PermissionGroupimport PermissionGroup.*import static PermissionGroup.*import FeedAdapterimport FeedAdapter.*import static FeedAdapter.*import FeedAdapter<Run<>>import FeedAdapter<Run<>>.*import static FeedAdapter<Run<>>.*import Comparator<Run<>>import Comparator<Run<>>.*import static Comparator<Run<>>.*import XStream2import XStream2.*import static XStream2.*import XStreamimport XStream.*import static XStream.*import Restrictedimport Restricted.*import static Restricted.*import Class[]import Class[].*import static Class[].*import Class<>[]import Class<>[].*import static Class<>[].*import AccessRestrictionimport AccessRestriction.*import static AccessRestriction.*import ? extends AccessRestrictionimport ? extends AccessRestriction.*import static ? extends AccessRestriction.*import Class<? extends AccessRestriction>import Class<? extends AccessRestriction>.*import static Class<? extends AccessRestriction>.*import Class<? extends AccessRestriction>[]import Class<? extends AccessRestriction>[].*import static Class<? extends AccessRestriction>[].*import NoExternalUseimport NoExternalUse.*import static NoExternalUse.*import Nonnullimport Nonnull.*import static Nonnull.*import Whenimport When.*import static When.*import Matcherimport Matcher.*import static Matcher.*import CharSequenceimport CharSequence.*import static CharSequence.*import Exportedimport Exported.*import static Exported.*import List<TopLevelItem>import List<TopLevelItem>.*import static List<TopLevelItem>.*import Collection<TopLevelItem>import Collection<TopLevelItem>.*import static Collection<TopLevelItem>.*import Iterable<TopLevelItem>import Iterable<TopLevelItem>.*import static Iterable<TopLevelItem>.*import Jenkinsimport Jenkins.*import static Jenkins.*import ItemGroup<>import ItemGroup<>.*import static ItemGroup<>.*import ModelObjectimport ModelObject.*import static ModelObject.*import AccessDeniedExceptionimport AccessDeniedException.*import static AccessDeniedException.*import Collection<T>import Collection<T>.*import static Collection<T>.*import Iterable<T>import Iterable<T>.*import static Iterable<T>.*import Integerimport Integer.*import static Integer.*import RunList<?>import RunList<?>.*import static RunList<?>.*import AbstractList<?>import AbstractList<?>.*import static AbstractList<?>.*import AbstractCollection<?>import AbstractCollection<?>.*import static AbstractCollection<?>.*import RunList<>import RunList<>.*import static RunList<>.*import AbstractList<>import AbstractList<>.*import static AbstractList<>.*import AbstractCollection<>import AbstractCollection<>.*import static AbstractCollection<>.*import BuildTimelineWidgetimport BuildTimelineWidget.*import static BuildTimelineWidget.*import Graphimport Graph.*import static Graph.*import HealthReportimport HealthReport.*import static HealthReport.*import List<HealthReport>import List<HealthReport>.*import static List<HealthReport>.*import Collection<HealthReport>import Collection<HealthReport>.*import static Collection<HealthReport>.*import Iterable<HealthReport>import Iterable<HealthReport>.*import static Iterable<HealthReport>.*import ContextMenuimport ContextMenu.*import static ContextMenu.*import Exceptionimport Exception.*import static Exception.*import PermalinkListimport PermalinkList.*import static PermalinkList.*import SortedMapimport SortedMap.*import static SortedMap.*import SortedMap<>import SortedMap<>.*import static SortedMap<>.*import ? extends RunTimport ? extends RunT.*import static ? extends RunT.*import SortedMap<Integer,? extends RunT>import SortedMap<Integer,? extends RunT>.*import static SortedMap<Integer,? extends RunT>.*import Map<Integer,? extends RunT>import Map<Integer,? extends RunT>.*import static Map<Integer,? extends RunT>.*import Run<JobT,RunT>import Run<JobT,RunT>.*import static Run<JobT,RunT>.*import Comparable<RunT>import Comparable<RunT>.*import static Comparable<RunT>.*import ? extends Run<JobT,RunT>import ? extends Run<JobT,RunT>.*import static ? extends Run<JobT,RunT>.*import SortedMap<Integer,? extends Run<JobT,RunT>>import SortedMap<Integer,? extends Run<JobT,RunT>>.*import static SortedMap<Integer,? extends Run<JobT,RunT>>.*import Map<Integer,? extends Run<JobT,RunT>>import Map<Integer,? extends Run<JobT,RunT>>.*import static Map<Integer,? extends Run<JobT,RunT>>.*import CmdLineExceptionimport CmdLineException.*import static CmdLineException.*import RunList<RunT>import RunList<RunT>.*import static RunList<RunT>.*import AbstractList<RunT>import AbstractList<RunT>.*import static AbstractList<RunT>.*import AbstractCollection<RunT>import AbstractCollection<RunT>.*import static AbstractCollection<RunT>.*import SortedMap<Integer,RunT>import SortedMap<Integer,RunT>.*import static SortedMap<Integer,RunT>.*import Map<Integer,RunT>import Map<Integer,RunT>.*import static Map<Integer,RunT>.*import SortedMap<Integer,?>import SortedMap<Integer,?>.*import static SortedMap<Integer,?>.*import Map<Integer,?>import Map<Integer,?>.*import static Map<Integer,?>.*import RangeSetimport RangeSet.*import static RangeSet.*import DirectlyModifiableTopLevelItemGroupimport DirectlyModifiableTopLevelItemGroup.*import static DirectlyModifiableTopLevelItemGroup.*import HistoryWidgetimport HistoryWidget.*import static HistoryWidget.*import HistoryWidget<>import HistoryWidget<>.*import static HistoryWidget<>.*import Widgetimport Widget.*import static Widget.*import List<Widget>import List<Widget>.*import static List<Widget>.*import Collection<Widget>import Collection<Widget>.*import static Collection<Widget>.*import Iterable<Widget>import Iterable<Widget>.*import static Iterable<Widget>.*import JobPropertyimport JobProperty.*import static JobProperty.*import JobProperty<>import JobProperty<>.*import static JobProperty<>.*import ReconfigurableDescribableimport ReconfigurableDescribable.*import static ReconfigurableDescribable.*import ReconfigurableDescribable<>import ReconfigurableDescribable<>.*import static ReconfigurableDescribable<>.*import Describableimport Describable.*import static Describable.*import Describable<>import Describable<>.*import static Describable<>.*import BuildStepimport BuildStep.*import static BuildStep.*import ? super JobTimport ? super JobT.*import static ? super JobT.*import JobProperty<? super JobT>import JobProperty<? super JobT>.*import static JobProperty<? super JobT>.*import JobProperty<?>import JobProperty<?>.*import static JobProperty<?>.*import ReconfigurableDescribable<JobProperty<?>>import ReconfigurableDescribable<JobProperty<?>>.*import static ReconfigurableDescribable<JobProperty<?>>.*import Describable<JobProperty<?>>import Describable<JobProperty<?>>.*import static Describable<JobProperty<?>>.*import List<JobProperty<? super JobT>>import List<JobProperty<? super JobT>>.*import static List<JobProperty<? super JobT>>.*import Collection<JobProperty<? super JobT>>import Collection<JobProperty<? super JobT>>.*import static Collection<JobProperty<? super JobT>>.*import Iterable<JobProperty<? super JobT>>import Iterable<JobProperty<? super JobT>>.*import static Iterable<JobProperty<? super JobT>>.*import ? super ?import ? super ?.*import static ? super ?.*import JobProperty<? super ?>import JobProperty<? super ?>.*import static JobProperty<? super ?>.*import List<JobProperty<? super ?>>import List<JobProperty<? super ?>>.*import static List<JobProperty<? super ?>>.*import Collection<JobProperty<? super ?>>import Collection<JobProperty<? super ?>>.*import static Collection<JobProperty<? super ?>>.*import Iterable<JobProperty<? super ?>>import Iterable<JobProperty<? super ?>>.*import static Iterable<JobProperty<? super ?>>.*import JobPropertyDescriptorimport JobPropertyDescriptor.*import static JobPropertyDescriptor.*import Map<JobPropertyDescriptor,JobProperty<? super JobT>>import Map<JobPropertyDescriptor,JobProperty<? super JobT>>.*import static Map<JobPropertyDescriptor,JobProperty<? super JobT>>.*import Map<JobPropertyDescriptor,JobProperty<? super ?>>import Map<JobPropertyDescriptor,JobProperty<? super ?>>.*import static Map<JobPropertyDescriptor,JobProperty<? super ?>>.*import ? extends Job<>import ? extends Job<>.*import static ? extends Job<>.*import Collection<? extends Job<>>import Collection<? extends Job<>>.*import static Collection<? extends Job<>>.*import Iterable<? extends Job<>>import Iterable<? extends Job<>>.*import static Iterable<? extends Job<>>.*import LogRotatorimport LogRotator.*import static LogRotator.*import BuildDiscarderimport BuildDiscarder.*import static BuildDiscarder.*import Nodeimport Node.*import static Node.*import TextFileimport TextFile.*import static TextFile.*import ? extends Itemimport ? extends Item.*import static ? extends Item.*import ItemGroup<? extends Item>import ItemGroup<? extends Item>.*import static ItemGroup<? extends Item>.*import Adapterimport Adapter.*import static Adapter.*import Adapter<Run<>>import Adapter<Run<>>.*import static Adapter<Run<>>.*import RunIdMigratorimport RunIdMigrator.*import static RunIdMigrator.*import CopyOnWriteListimport CopyOnWriteList.*import static CopyOnWriteList.*import CopyOnWriteList<JobProperty<? super JobT>>import CopyOnWriteList<JobProperty<? super JobT>>.*import static CopyOnWriteList<JobProperty<? super JobT>>.*import NumberFormatExceptionimport NumberFormatException.*import static NumberFormatException.*import Booleanimport Boolean.*import static Boolean.*import Class<Job<>>import Class<Job<>>.*import static Class<Job<>>.*import StringBuilderimport StringBuilder.*import static StringBuilder.*import ServletResponseimport ServletResponse.*import static ServletResponse.*import PrintWriterimport PrintWriter.*import static PrintWriter.*import Overrideimport Override.*import static Override.*import Class<? extends Option>import Class<? extends Option>.*import static Class<? extends Option>.*import ? extends Objectimport ? extends Object.*import static ? extends Object.*import Class<? extends Object>import Class<? extends Object>.*import static Class<? extends Object>.*import RundeckApiExceptionimport RundeckApiException.*import static RundeckApiException.*import RundeckClientimport RundeckClient.*import static RundeckClient.*import RundeckOutputimport RundeckOutput.*import static RundeckOutput.*import RundeckOutputEntryimport RundeckOutputEntry.*import static RundeckOutputEntry.*import Levelimport Level.*import static Level.*import Loggerimport Logger.*import static Logger.*import RunDeckLogTailimport RunDeckLogTail.*import static RunDeckLogTail.*import Longimport Long.*import static Long.*import List<RundeckOutputEntry>import List<RundeckOutputEntry>.*import static List<RundeckOutputEntry>.*import Collection<RundeckOutputEntry>import Collection<RundeckOutputEntry>.*import static Collection<RundeckOutputEntry>.*import Iterable<RundeckOutputEntry>import Iterable<RundeckOutputEntry>.*import static Iterable<RundeckOutputEntry>.*import Iterable<List<RundeckOutputEntry>>import Iterable<List<RundeckOutputEntry>>.*import static Iterable<List<RundeckOutputEntry>>.*import Class<RunDeckLogTail>import Class<RunDeckLogTail>.*import static Class<RunDeckLogTail>.*import AnnotatedTypeimport AnnotatedType.*import static AnnotatedType.*import AnnotatedType[]import AnnotatedType[].*import static AnnotatedType[].*import Annotationimport Annotation.*import static Annotation.*import ? extends Annotationimport ? extends Annotation.*import static ? extends Annotation.*import Class<? extends Annotation>import Class<? extends Annotation>.*import static Class<? extends Annotation>.*import Map<Class<? extends Annotation>,Annotation>import Map<Class<? extends Annotation>,Annotation>.*import static Map<Class<? extends Annotation>,Annotation>.*import AnnotationTypeimport AnnotationType.*import static AnnotationType.*import Annotation[]import Annotation[].*import static Annotation[].*import Aimport A.*import static A.*import A[]import A[].*import static A[].*import Class<A>import Class<A>.*import static Class<A>.*import Uimport U.*import static U.*import ? extends Uimport ? extends U.*import static ? extends U.*import Class<? extends U>import Class<? extends U>.*import static Class<? extends U>.*import Class<U>import Class<U>.*import static Class<U>.*import Map<String,T>import Map<String,T>.*import static Map<String,T>.*import Map<String,RunDeckLogTail>import Map<String,RunDeckLogTail>.*import static Map<String,RunDeckLogTail>.*import RunDeckLogTail[]import RunDeckLogTail[].*import static RunDeckLogTail[].*import ConstantPoolimport ConstantPool.*import static ConstantPool.*import Executableimport Executable.*import static Executable.*import byte[]import byte[].*import static byte[].*import Class<?>import Class<?>.*import static Class<?>.*import ProtectionDomainimport ProtectionDomain.*import static ProtectionDomain.*import URLimport URL.*import static URL.*import Class<?>[]import Class<?>[].*import static Class<?>[].*import Constructorimport Constructor.*import static Constructor.*import Constructor<>import Constructor<>.*import static Constructor<>.*import Constructor<T>import Constructor<T>.*import static Constructor<T>.*import NoSuchMethodExceptionimport NoSuchMethodException.*import static NoSuchMethodException.*import SecurityExceptionimport SecurityException.*import static SecurityException.*import Constructor<RunDeckLogTail>import Constructor<RunDeckLogTail>.*import static Constructor<RunDeckLogTail>.*import Methodimport Method.*import static Method.*import Fieldimport Field.*import static Field.*import NoSuchFieldExceptionimport NoSuchFieldException.*import static NoSuchFieldException.*import Constructor[]import Constructor[].*import static Constructor[].*import Constructor<>[]import Constructor<>[].*import static Constructor<>[].*import Constructor<?>import Constructor<?>.*import static Constructor<?>.*import Constructor<?>[]import Constructor<?>[].*import static Constructor<?>[].*import Method[]import Method[].*import static Method[].*import Field[]import Field[].*import static Field[].*import Type[]import Type[].*import static Type[].*import Packageimport Package.*import static Package.*import Class<? super T>import Class<? super T>.*import static Class<? super T>.*import ? super RunDeckLogTailimport ? super RunDeckLogTail.*import static ? super RunDeckLogTail.*import Class<? super RunDeckLogTail>import Class<? super RunDeckLogTail>.*import static Class<? super RunDeckLogTail>.*import TypeVariableimport TypeVariable.*import static TypeVariable.*import TypeVariable[]import TypeVariable[].*import static TypeVariable[].*import TypeVariable<>import TypeVariable<>.*import static TypeVariable<>.*import TypeVariable<>[]import TypeVariable<>[].*import static TypeVariable<>[].*import TypeVariable<Class>import TypeVariable<Class>.*import static TypeVariable<Class>.*import TypeVariable<Class>[]import TypeVariable<Class>[].*import static TypeVariable<Class>[].*import TypeVariable<Class<RunDeckLogTail>>import TypeVariable<Class<RunDeckLogTail>>.*import static TypeVariable<Class<RunDeckLogTail>>.*import TypeVariable<Class<RunDeckLogTail>>[]import TypeVariable<Class<RunDeckLogTail>>[].*import static TypeVariable<Class<RunDeckLogTail>>[].*import ClassLoaderimport ClassLoader.*import static ClassLoader.*import InstantiationExceptionimport InstantiationException.*import static InstantiationException.*import IllegalAccessExceptionimport IllegalAccessException.*import static IllegalAccessException.*import ClassNotFoundExceptionimport ClassNotFoundException.*import static ClassNotFoundException.*import ClassValueMapimport ClassValueMap.*import static ClassValueMap.*import RunDeckLogTailIteratorimport RunDeckLogTailIterator.*import static RunDeckLogTailIterator.*import RuntimeExceptionimport RuntimeException.*import static RuntimeException.*import Iterator<List<RundeckOutputEntry>>import Iterator<List<RundeckOutputEntry>>.*import static Iterator<List<RundeckOutputEntry>>.*import ArrayList<RundeckOutputEntry>import ArrayList<RundeckOutputEntry>.*import static ArrayList<RundeckOutputEntry>.*import AbstractList<RundeckOutputEntry>import AbstractList<RundeckOutputEntry>.*import static AbstractList<RundeckOutputEntry>.*import AbstractCollection<RundeckOutputEntry>import AbstractCollection<RundeckOutputEntry>.*import static AbstractCollection<RundeckOutputEntry>.*import Spliterator<RundeckOutputEntry>import Spliterator<RundeckOutputEntry>.*import static Spliterator<RundeckOutputEntry>.*import ? super RundeckOutputEntryimport ? super RundeckOutputEntry.*import static ? super RundeckOutputEntry.*import Consumer<? super RundeckOutputEntry>import Consumer<? super RundeckOutputEntry>.*import static Consumer<? super RundeckOutputEntry>.*import Iterator<RundeckOutputEntry>import Iterator<RundeckOutputEntry>.*import static Iterator<RundeckOutputEntry>.*import Stream<RundeckOutputEntry>import Stream<RundeckOutputEntry>.*import static Stream<RundeckOutputEntry>.*import BaseStream<RundeckOutputEntry,Stream<RundeckOutputEntry>>import BaseStream<RundeckOutputEntry,Stream<RundeckOutputEntry>>.*import static BaseStream<RundeckOutputEntry,Stream<RundeckOutputEntry>>.*import Predicate<? super RundeckOutputEntry>import Predicate<? super RundeckOutputEntry>.*import static Predicate<? super RundeckOutputEntry>.*import ? extends RundeckOutputEntryimport ? extends RundeckOutputEntry.*import static ? extends RundeckOutputEntry.*import Collection<? extends RundeckOutputEntry>import Collection<? extends RundeckOutputEntry>.*import static Collection<? extends RundeckOutputEntry>.*import Iterable<? extends RundeckOutputEntry>import Iterable<? extends RundeckOutputEntry>.*import static Iterable<? extends RundeckOutputEntry>.*import ListIterator<RundeckOutputEntry>import ListIterator<RundeckOutputEntry>.*import static ListIterator<RundeckOutputEntry>.*import Comparator<? super RundeckOutputEntry>import Comparator<? super RundeckOutputEntry>.*import static Comparator<? super RundeckOutputEntry>.*import UnaryOperator<RundeckOutputEntry>import UnaryOperator<RundeckOutputEntry>.*import static UnaryOperator<RundeckOutputEntry>.*import Function<RundeckOutputEntry,RundeckOutputEntry>import Function<RundeckOutputEntry,RundeckOutputEntry>.*import static Function<RundeckOutputEntry,RundeckOutputEntry>.*import Threadimport Thread.*import static Thread.*import UnsupportedOperationExceptionimport UnsupportedOperationException.*import static UnsupportedOperationException.*import EnvironmentContributingActionimport EnvironmentContributingAction.*import static EnvironmentContributingAction.*import AbstractBuildimport AbstractBuild.*import static AbstractBuild.*import RundeckExecutionimport RundeckExecution.*import static RundeckExecution.*import RundeckCauseimport RundeckCause.*import static RundeckCause.*import RundeckJobimport RundeckJob.*import static RundeckJob.*import AbstractBuild<>import AbstractBuild<>.*import static AbstractBuild<>.*import LazyLoadingRunimport LazyLoadingRun.*import static LazyLoadingRun.*import LazyLoadingRun<>import LazyLoadingRun<>.*import static LazyLoadingRun<>.*import LazyBuildMixInimport LazyBuildMixIn.*import static LazyBuildMixIn.*import LazyBuildMixIn<>import LazyBuildMixIn<>.*import static LazyBuildMixIn<>.*import RunMixInimport RunMixIn.*import static RunMixIn.*import RunMixIn<>import RunMixIn<>.*import static RunMixIn<>.*import RunMixIn<JobT,RunT>import RunMixIn<JobT,RunT>.*import static RunMixIn<JobT,RunT>.*import AbstractProject<>import AbstractProject<>.*import static AbstractProject<>.*import BuildableItemimport BuildableItem.*import static BuildableItem.*import LazyLoadingJobimport LazyLoadingJob.*import static LazyLoadingJob.*import LazyLoadingJob<>import LazyLoadingJob<>.*import static LazyLoadingJob<>.*import ParameterizedJobimport ParameterizedJob.*import static ParameterizedJob.*import DependencyChangeimport DependencyChange.*import static DependencyChange.*import Map<AbstractProject<>,DependencyChange>import Map<AbstractProject<>,DependencyChange>.*import static Map<AbstractProject<>,DependencyChange>.*import Map<AbstractProject<>,Integer>import Map<AbstractProject<>,Integer>.*import static Map<AbstractProject<>,Integer>.*import Map<AbstractProject<>,RangeSet>import Map<AbstractProject<>,RangeSet>.*import static Map<AbstractProject<>,RangeSet>.*import AbstractProject<?,?>import AbstractProject<?,?>.*import static AbstractProject<?,?>.*import LazyLoadingJob<?,?>import LazyLoadingJob<?,?>.*import static LazyLoadingJob<?,?>.*import AbstractBuild<?,?>import AbstractBuild<?,?>.*import static AbstractBuild<?,?>.*import LazyLoadingRun<?,?>import LazyLoadingRun<?,?>.*import static LazyLoadingRun<?,?>.*import Iterable<AbstractBuild<?,?>>import Iterable<AbstractBuild<?,?>>.*import static Iterable<AbstractBuild<?,?>>.*import VariableResolverimport VariableResolver.*import static VariableResolver.*import VariableResolver<>import VariableResolver<>.*import static VariableResolver<>.*import VariableResolver<String>import VariableResolver<String>.*import static VariableResolver<String>.*import Setimport Set.*import static Set.*import Set<>import Set<>.*import static Set<>.*import Set<String>import Set<String>.*import static Set<String>.*import EnvironmentListimport EnvironmentList.*import static EnvironmentList.*import ChangeLogSetimport ChangeLogSet.*import static ChangeLogSet.*import Entryimport Entry.*import static Entry.*import ? extends Entryimport ? extends Entry.*import static ? extends Entry.*import ChangeLogSet<? extends Entry>import ChangeLogSet<? extends Entry>.*import static ChangeLogSet<? extends Entry>.*import Iterable<? extends Entry>import Iterable<? extends Entry>.*import static Iterable<? extends Entry>.*import List<ChangeLogSet<? extends Entry>>import List<ChangeLogSet<? extends Entry>>.*import static List<ChangeLogSet<? extends Entry>>.*import Collection<ChangeLogSet<? extends Entry>>import Collection<ChangeLogSet<? extends Entry>>.*import static Collection<ChangeLogSet<? extends Entry>>.*import Iterable<ChangeLogSet<? extends Entry>>import Iterable<ChangeLogSet<? extends Entry>>.*import static Iterable<ChangeLogSet<? extends Entry>>.*import ChangeLogSet<>import ChangeLogSet<>.*import static ChangeLogSet<>.*import Fingerprintimport Fingerprint.*import static Fingerprint.*import Collection<Fingerprint>import Collection<Fingerprint>.*import static Collection<Fingerprint>.*import Iterable<Fingerprint>import Iterable<Fingerprint>.*import static Iterable<Fingerprint>.*import Userimport User.*import static User.*import Set<User>import Set<User>.*import static Set<User>.*import Collection<User>import Collection<User>.*import static Collection<User>.*import Iterable<User>import Iterable<User>.*import static Iterable<User>.*import FilePathimport FilePath.*import static FilePath.*import FilePath[]import FilePath[].*import static FilePath[].*import Rimport R.*import static R.*import BuildReference<R>import BuildReference<R>.*import static BuildReference<R>.*import Pimport P.*import static P.*import RunMixIn<P,R>import RunMixIn<P,R>.*import static RunMixIn<P,R>.*import Environmentimport Environment.*import static Environment.*import List<Environment>import List<Environment>.*import static List<Environment>.*import Collection<Environment>import Collection<Environment>.*import static Collection<Environment>.*import Iterable<Environment>import Iterable<Environment>.*import static Iterable<Environment>.*import RundeckExecutionEnvironmentContributingActionimport RundeckExecutionEnvironmentContributingAction.*import static RundeckExecutionEnvironmentContributingAction.*import ? extends RundeckCauseimport ? extends RundeckCause.*import static ? extends RundeckCause.*import Class<? extends RundeckCause>import Class<? extends RundeckCause>.*import static Class<? extends RundeckCause>.*import ExecutionStatusimport ExecutionStatus.*import static ExecutionStatus.*import String[]import String[].*import static String[].*import Secretimport Secret.*import static Secret.*import RundeckInstanceimport RundeckInstance.*import static RundeckInstance.*import RundeckInstanceBuilderimport RundeckInstanceBuilder.*import static RundeckInstanceBuilder.*import RundeckClientBuilderimport RundeckClientBuilder.*import static RundeckClientBuilder.*import InvocationTargetExceptionimport InvocationTargetException.*import static InvocationTargetException.*import ? extends RundeckClientimport ? extends RundeckClient.*import static ? extends RundeckClient.*import Class<? extends RundeckClient>import Class<? extends RundeckClient>.*import static Class<? extends RundeckClient>.*import Map<String,? extends RundeckClient>import Map<String,? extends RundeckClient>.*import static Map<String,? extends RundeckClient>.*import RundeckClient[]import RundeckClient[].*import static RundeckClient[].*import ? extends RundeckClient[]import ? extends RundeckClient[].*import static ? extends RundeckClient[].*import Constructor<? extends RundeckClient>import Constructor<? extends RundeckClient>.*import static Constructor<? extends RundeckClient>.*import ? super ? extends RundeckClientimport ? super ? extends RundeckClient.*import static ? super ? extends RundeckClient.*import Class<? super ? extends RundeckClient>import Class<? super ? extends RundeckClient>.*import static Class<? super ? extends RundeckClient>.*import TypeVariable<Class<? extends RundeckClient>>import TypeVariable<Class<? extends RundeckClient>>.*import static TypeVariable<Class<? extends RundeckClient>>.*import TypeVariable<Class<? extends RundeckClient>>[]import TypeVariable<Class<? extends RundeckClient>>[].*import static TypeVariable<Class<? extends RundeckClient>>[].*import AccessibleObjectimport AccessibleObject.*import static AccessibleObject.*import RundeckJobProjectLinkerActionimport RundeckJobProjectLinkerAction.*import static RundeckJobProjectLinkerAction.*import RundeckDescriptorimport RundeckDescriptor.*import static RundeckDescriptor.*import RundeckNotifierimport RundeckNotifier.*import static RundeckNotifier.*import InitMilestoneimport InitMilestone.*import static InitMilestone.*import Initializerimport Initializer.*import static Initializer.*import UpstreamCauseimport UpstreamCause.*import static UpstreamCause.*import BuildStepDescriptorimport BuildStepDescriptor.*import static BuildStepDescriptor.*import BuildStepMonitorimport BuildStepMonitor.*import static BuildStepMonitor.*import Notifierimport Notifier.*import static Notifier.*import Publisherimport Publisher.*import static Publisher.*import FormValidationimport FormValidation.*import static FormValidation.*import SimpleBuildStepimport SimpleBuildStep.*import static SimpleBuildStep.*import DummyRundeckJobCacheimport DummyRundeckJobCache.*import static DummyRundeckJobCache.*import InMemoryRundeckJobCacheimport InMemoryRundeckJobCache.*import static InMemoryRundeckJobCache.*import RundeckJobCacheimport RundeckJobCache.*import static RundeckJobCache.*import RundeckJobCacheConfigimport RundeckJobCacheConfig.*import static RundeckJobCacheConfig.*import AncestorInPathimport AncestorInPath.*import static AncestorInPath.*import DataBoundConstructorimport DataBoundConstructor.*import static DataBoundConstructor.*import QueryParameterimport QueryParameter.*import static QueryParameter.*import RequirePOSTimport RequirePOST.*import static RequirePOST.*import RunJobBuilderimport RunJobBuilder.*import static RunJobBuilder.*import RundeckApiLoginExceptionimport RundeckApiLoginException.*import static RundeckApiLoginException.*import PrintStreamimport PrintStream.*import static PrintStream.*import Propertiesimport Properties.*import static Properties.*import AbortExceptionimport AbortException.*import static AbortException.*import Class<RundeckNotifier>import Class<RundeckNotifier>.*import static Class<RundeckNotifier>.*import Map<String,RundeckNotifier>import Map<String,RundeckNotifier>.*import static Map<String,RundeckNotifier>.*import RundeckNotifier[]import RundeckNotifier[].*import static RundeckNotifier[].*import Constructor<RundeckNotifier>import Constructor<RundeckNotifier>.*import static Constructor<RundeckNotifier>.*import ? super RundeckNotifierimport ? super RundeckNotifier.*import static ? super RundeckNotifier.*import Class<? super RundeckNotifier>import Class<? super RundeckNotifier>.*import static Class<? super RundeckNotifier>.*import TypeVariable<Class<RundeckNotifier>>import TypeVariable<Class<RundeckNotifier>>.*import static TypeVariable<Class<RundeckNotifier>>.*import TypeVariable<Class<RundeckNotifier>>[]import TypeVariable<Class<RundeckNotifier>>[].*import static TypeVariable<Class<RundeckNotifier>>[].*import Launcherimport Launcher.*import static Launcher.*import RunMixIn<?,?>import RunMixIn<?,?>.*import static RunMixIn<?,?>.*import Consumer<>import Consumer<>.*import static Consumer<>.*import RepositoryBrowserimport RepositoryBrowser.*import static RepositoryBrowser.*import RepositoryBrowser<>import RepositoryBrowser<>.*import static RepositoryBrowser<>.*import AbstractDescribableImplimport AbstractDescribableImpl.*import static AbstractDescribableImpl.*import AbstractDescribableImpl<>import AbstractDescribableImpl<>.*import static AbstractDescribableImpl<>.*import RepositoryBrowser<?>import RepositoryBrowser<?>.*import static RepositoryBrowser<?>.*import AbstractDescribableImpl<RepositoryBrowser<?>>import AbstractDescribableImpl<RepositoryBrowser<?>>.*import static AbstractDescribableImpl<RepositoryBrowser<?>>.*import Describable<RepositoryBrowser<?>>import Describable<RepositoryBrowser<?>>.*import static Describable<RepositoryBrowser<?>>.*import Class<UpstreamCause>import Class<UpstreamCause>.*import static Class<UpstreamCause>.*import Map<String,UpstreamCause>import Map<String,UpstreamCause>.*import static Map<String,UpstreamCause>.*import UpstreamCause[]import UpstreamCause[].*import static UpstreamCause[].*import Constructor<UpstreamCause>import Constructor<UpstreamCause>.*import static Constructor<UpstreamCause>.*import ? super UpstreamCauseimport ? super UpstreamCause.*import static ? super UpstreamCause.*import Class<? super UpstreamCause>import Class<? super UpstreamCause>.*import static Class<? super UpstreamCause>.*import TypeVariable<Class<UpstreamCause>>import TypeVariable<Class<UpstreamCause>>.*import static TypeVariable<Class<UpstreamCause>>.*import TypeVariable<Class<UpstreamCause>>[]import TypeVariable<Class<UpstreamCause>>[].*import static TypeVariable<Class<UpstreamCause>>[].*import Class<AbstractProject<>>import Class<AbstractProject<>>.*import static Class<AbstractProject<>>.*import Map<String,AbstractProject<>>import Map<String,AbstractProject<>>.*import static Map<String,AbstractProject<>>.*import AbstractProject[]import AbstractProject[].*import static AbstractProject[].*import AbstractProject<>[]import AbstractProject<>[].*import static AbstractProject<>[].*import Constructor<AbstractProject<>>import Constructor<AbstractProject<>>.*import static Constructor<AbstractProject<>>.*import ? super AbstractProject<>import ? super AbstractProject<>.*import static ? super AbstractProject<>.*import Class<? super AbstractProject<>>import Class<? super AbstractProject<>>.*import static Class<? super AbstractProject<>>.*import TypeVariable<Class<AbstractProject<>>>import TypeVariable<Class<AbstractProject<>>>.*import static TypeVariable<Class<AbstractProject<>>>.*import TypeVariable<Class<AbstractProject<>>>[]import TypeVariable<Class<AbstractProject<>>>[].*import static TypeVariable<Class<AbstractProject<>>>[].*import LazyBuildMixIn<JobT,RunT>import LazyBuildMixIn<JobT,RunT>.*import static LazyBuildMixIn<JobT,RunT>.*import LazyBuildMixIn<?,?>import LazyBuildMixIn<?,?>.*import static LazyBuildMixIn<?,?>.*import Describable<T>import Describable<T>.*import static Describable<T>.*import List<T>import List<T>.*import static List<T>.*import Descriptor<T>import Descriptor<T>.*import static Descriptor<T>.*import ? extends Descriptor<T>import ? extends Descriptor<T>.*import static ? extends Descriptor<T>.*import List<? extends Descriptor<T>>import List<? extends Descriptor<T>>.*import static List<? extends Descriptor<T>>.*import Collection<? extends Descriptor<T>>import Collection<? extends Descriptor<T>>.*import static Collection<? extends Descriptor<T>>.*import Iterable<? extends Descriptor<T>>import Iterable<? extends Descriptor<T>>.*import static Iterable<? extends Descriptor<T>>.*import TimeDurationimport TimeDuration.*import static TimeDuration.*import DependencyGraphimport DependencyGraph.*import static DependencyGraph.*import SortedMap<Integer,RangeSet>import SortedMap<Integer,RangeSet>.*import static SortedMap<Integer,RangeSet>.*import Map<Integer,RangeSet>import Map<Integer,RangeSet>.*import static Map<Integer,RangeSet>.*import Set<AbstractProject<>>import Set<AbstractProject<>>.*import static Set<AbstractProject<>>.*import Collection<AbstractProject<>>import Collection<AbstractProject<>>.*import static Collection<AbstractProject<>>.*import Iterable<AbstractProject<>>import Iterable<AbstractProject<>>.*import static Iterable<AbstractProject<>>.*import List<AbstractProject<>>import List<AbstractProject<>>.*import static List<AbstractProject<>>.*import Triggerimport Trigger.*import static Trigger.*import Trigger<>import Trigger<>.*import static Trigger<>.*import TriggerDescriptorimport TriggerDescriptor.*import static TriggerDescriptor.*import Trigger<?>import Trigger<?>.*import static Trigger<?>.*import Describable<Trigger<?>>import Describable<Trigger<?>>.*import static Describable<Trigger<?>>.*import Map<TriggerDescriptor,Trigger<?>>import Map<TriggerDescriptor,Trigger<?>>.*import static Map<TriggerDescriptor,Trigger<?>>.*import SCMimport SCM.*import static SCM.*import PollingResultimport PollingResult.*import static PollingResult.*import ResourceActivityimport ResourceActivity.*import static ResourceActivity.*import Set<ResourceActivity>import Set<ResourceActivity>.*import static Set<ResourceActivity>.*import Collection<ResourceActivity>import Collection<ResourceActivity>.*import static Collection<ResourceActivity>.*import Iterable<ResourceActivity>import Iterable<ResourceActivity>.*import static Iterable<ResourceActivity>.*import ResourceListimport ResourceList.*import static ResourceList.*import Resourceimport Resource.*import static Resource.*import SubTaskimport SubTask.*import static SubTask.*import List<SubTask>import List<SubTask>.*import static List<SubTask>.*import Collection<SubTask>import Collection<SubTask>.*import static Collection<SubTask>.*import Iterable<SubTask>import Iterable<SubTask>.*import static Iterable<SubTask>.*import CauseOfBlockageimport CauseOfBlockage.*import static CauseOfBlockage.*import Authenticationimport Authentication.*import static Authentication.*import Taskimport Task.*import static Task.*import Class<R>import Class<R>.*import static Class<R>.*import RunMapimport RunMap.*import static RunMap.*import RunMap<>import RunMap<>.*import static RunMap<>.*import AbstractLazyLoadRunMapimport AbstractLazyLoadRunMap.*import static AbstractLazyLoadRunMap.*import AbstractLazyLoadRunMap<>import AbstractLazyLoadRunMap<>.*import static AbstractLazyLoadRunMap<>.*import AbstractMapimport AbstractMap.*import static AbstractMap.*import AbstractMap<>import AbstractMap<>.*import static AbstractMap<>.*import RunMap<R>import RunMap<R>.*import static RunMap<R>.*import AbstractLazyLoadRunMap<R>import AbstractLazyLoadRunMap<R>.*import static AbstractLazyLoadRunMap<R>.*import AbstractMap<Integer,R>import AbstractMap<Integer,R>.*import static AbstractMap<Integer,R>.*import Map<Integer,R>import Map<Integer,R>.*import static Map<Integer,R>.*import SortedMap<Integer,R>import SortedMap<Integer,R>.*import static SortedMap<Integer,R>.*import Iterable<R>import Iterable<R>.*import static Iterable<R>.*import RunMap<?>import RunMap<?>.*import static RunMap<?>.*import AbstractLazyLoadRunMap<?>import AbstractLazyLoadRunMap<?>.*import static AbstractLazyLoadRunMap<?>.*import AbstractMap<Integer,?>import AbstractMap<Integer,?>.*import static AbstractMap<Integer,?>.*import BuildAuthorizationTokenimport BuildAuthorizationToken.*import static BuildAuthorizationToken.*import JDKimport JDK.*import static JDK.*import QueueTaskFutureimport QueueTaskFuture.*import static QueueTaskFuture.*import QueueTaskFuture<>import QueueTaskFuture<>.*import static QueueTaskFuture<>.*import Futureimport Future.*import static Future.*import Future<>import Future<>.*import static Future<>.*import QueueTaskFuture<R>import QueueTaskFuture<R>.*import static QueueTaskFuture<R>.*import Future<R>import Future<R>.*import static Future<R>.*import QueueTaskFuture<?>import QueueTaskFuture<?>.*import static QueueTaskFuture<?>.*import Future<?>import Future<?>.*import static Future<?>.*import ? extends Actionimport ? extends Action.*import static ? extends Action.*import Collection<? extends Action>import Collection<? extends Action>.*import static Collection<? extends Action>.*import Iterable<? extends Action>import Iterable<? extends Action>.*import static Iterable<? extends Action>.*import Action[]import Action[].*import static Action[].*import ProminentProjectActionimport ProminentProjectAction.*import static ProminentProjectAction.*import List<ProminentProjectAction>import List<ProminentProjectAction>.*import static List<ProminentProjectAction>.*import Collection<ProminentProjectAction>import Collection<ProminentProjectAction>.*import static Collection<ProminentProjectAction>.*import Iterable<ProminentProjectAction>import Iterable<ProminentProjectAction>.*import static Iterable<ProminentProjectAction>.*import ? super Pimport ? super P.*import static ? super P.*import JobProperty<? super P>import JobProperty<? super P>.*import static JobProperty<? super P>.*import DescribableListimport DescribableList.*import static DescribableList.*import DescribableList<>import DescribableList<>.*import static DescribableList<>.*import PersistedListimport PersistedList.*import static PersistedList.*import PersistedList<>import PersistedList<>.*import static PersistedList<>.*import Descriptor<Publisher>import Descriptor<Publisher>.*import static Descriptor<Publisher>.*import DescribableList<Publisher,Descriptor<Publisher>>import DescribableList<Publisher,Descriptor<Publisher>>.*import static DescribableList<Publisher,Descriptor<Publisher>>.*import PersistedList<Publisher>import PersistedList<Publisher>.*import static PersistedList<Publisher>.*import AbstractList<Publisher>import AbstractList<Publisher>.*import static AbstractList<Publisher>.*import AbstractCollection<Publisher>import AbstractCollection<Publisher>.*import static AbstractCollection<Publisher>.*import Collection<Publisher>import Collection<Publisher>.*import static Collection<Publisher>.*import Iterable<Publisher>import Iterable<Publisher>.*import static Iterable<Publisher>.*import List<Publisher>import List<Publisher>.*import static List<Publisher>.*import SCMCheckoutStrategyimport SCMCheckoutStrategy.*import static SCMCheckoutStrategy.*import Labelimport Label.*import static Label.*import Set<Label>import Set<Label>.*import static Set<Label>.*import Collection<Label>import Collection<Label>.*import static Collection<Label>.*import Iterable<Label>import Iterable<Label>.*import static Iterable<Label>.*import DescribableList<Trigger<?>,TriggerDescriptor>import DescribableList<Trigger<?>,TriggerDescriptor>.*import static DescribableList<Trigger<?>,TriggerDescriptor>.*import PersistedList<Trigger<?>>import PersistedList<Trigger<?>>.*import static PersistedList<Trigger<?>>.*import AbstractList<Trigger<?>>import AbstractList<Trigger<?>>.*import static AbstractList<Trigger<?>>.*import AbstractCollection<Trigger<?>>import AbstractCollection<Trigger<?>>.*import static AbstractCollection<Trigger<?>>.*import Collection<Trigger<?>>import Collection<Trigger<?>>.*import static Collection<Trigger<?>>.*import Iterable<Trigger<?>>import Iterable<Trigger<?>>.*import static Iterable<Trigger<?>>.*import List<Trigger<?>>import List<Trigger<?>>.*import static List<Trigger<?>>.*import LazyBuildMixIn<P,R>import LazyBuildMixIn<P,R>.*import static LazyBuildMixIn<P,R>.*import Messageimport Message.*import static Message.*import Message<AbstractProject<>>import Message<AbstractProject<>>.*import static Message<AbstractProject<>>.*import AlternativeUiTextProviderimport AlternativeUiTextProvider.*import static AlternativeUiTextProvider.*import AdaptFieldimport AdaptField.*import static AdaptField.*import IllegalStateExceptionimport IllegalStateException.*import static IllegalStateException.*import Throwableimport Throwable.*import static Throwable.*import RunJobimport RunJob.*import static RunJob.*import RundeckExecutionBuildBadgeActionimport RundeckExecutionBuildBadgeAction.*import static RundeckExecutionBuildBadgeAction.*import RundeckApiTokenExceptionimport RundeckApiTokenException.*import static RundeckApiTokenException.*import RundeckLogLevelimport RundeckLogLevel.*import static RundeckLogLevel.*import Utilimport Util.*import static Util.*import SuppressWarningsimport SuppressWarnings.*import static SuppressWarnings.*import Enumimport Enum.*import static Enum.*import Enum<ExecutionStatus>import Enum<ExecutionStatus>.*import static Enum<ExecutionStatus>.*import Comparable<ExecutionStatus>import Comparable<ExecutionStatus>.*import static Comparable<ExecutionStatus>.*import Enum<>import Enum<>.*import static Enum<>.*import Enum<T>import Enum<T>.*import static Enum<T>.*import Comparable<T>import Comparable<T>.*import static Comparable<T>.*import Class<E>import Class<E>.*import static Class<E>.*import Class<ExecutionStatus>import Class<ExecutionStatus>.*import static Class<ExecutionStatus>.*import CloneNotSupportedExceptionimport CloneNotSupportedException.*import static CloneNotSupportedException.*import RundeckAbortimport RundeckAbort.*import static RundeckAbort.*import AbortStatusimport AbortStatus.*import static AbortStatus.*import ? extends RuntimeExceptionimport ? extends RuntimeException.*import static ? extends RuntimeException.*import Class<? extends RuntimeException>import Class<? extends RuntimeException>.*import static Class<? extends RuntimeException>.*import Map<String,? extends RuntimeException>import Map<String,? extends RuntimeException>.*import static Map<String,? extends RuntimeException>.*import RuntimeException[]import RuntimeException[].*import static RuntimeException[].*import ? extends RuntimeException[]import ? extends RuntimeException[].*import static ? extends RuntimeException[].*import Constructor<? extends RuntimeException>import Constructor<? extends RuntimeException>.*import static Constructor<? extends RuntimeException>.*import ? super ? extends RuntimeExceptionimport ? super ? extends RuntimeException.*import static ? super ? extends RuntimeException.*import Class<? super ? extends RuntimeException>import Class<? super ? extends RuntimeException>.*import static Class<? super ? extends RuntimeException>.*import TypeVariable<Class<? extends RuntimeException>>import TypeVariable<Class<? extends RuntimeException>>.*import static TypeVariable<Class<? extends RuntimeException>>.*import TypeVariable<Class<? extends RuntimeException>>[]import TypeVariable<Class<? extends RuntimeException>>[].*import static TypeVariable<Class<? extends RuntimeException>>[].*import BuildStepDescriptor<>import BuildStepDescriptor<>.*import static BuildStepDescriptor<>.*import Map<String,RundeckInstance>import Map<String,RundeckInstance>.*import static Map<String,RundeckInstance>.*import CopyOnWriteimport CopyOnWrite.*import static CopyOnWrite.*import BuildStepDescriptor<Publisher>import BuildStepDescriptor<Publisher>.*import static BuildStepDescriptor<Publisher>.*import Extensionimport Extension.*import static Extension.*import LinkedHashMapimport LinkedHashMap.*import static LinkedHashMap.*import LinkedHashMap<String,RundeckInstance>import LinkedHashMap<String,RundeckInstance>.*import static LinkedHashMap<String,RundeckInstance>.*import HashMapimport HashMap.*import static HashMap.*import HashMap<String,RundeckInstance>import HashMap<String,RundeckInstance>.*import static HashMap<String,RundeckInstance>.*import AbstractMap<String,RundeckInstance>import AbstractMap<String,RundeckInstance>.*import static AbstractMap<String,RundeckInstance>.*import Kimport K.*import static K.*import Vimport V.*import static V.*import BiFunctionimport BiFunction.*import static BiFunction.*import ? super Vimport ? super V.*import static ? super V.*import ? extends Vimport ? extends V.*import static ? extends V.*import BiFunction<? super V,? super V,? extends V>import BiFunction<? super V,? super V,? extends V>.*import static BiFunction<? super V,? super V,? extends V>.*import ? super RundeckInstanceimport ? super RundeckInstance.*import static ? super RundeckInstance.*import ? extends RundeckInstanceimport ? extends RundeckInstance.*import static ? extends RundeckInstance.*import BiFunction<? super RundeckInstance,? super RundeckInstance,? extends RundeckInstance>import BiFunction<? super RundeckInstance,? super RundeckInstance,? extends RundeckInstance>.*import static BiFunction<? super RundeckInstance,? super RundeckInstance,? extends RundeckInstance>.*import ? super Kimport ? super K.*import static ? super K.*import BiFunction<? super K,? super V,? extends V>import BiFunction<? super K,? super V,? extends V>.*import static BiFunction<? super K,? super V,? extends V>.*import ? super Stringimport ? super String.*import static ? super String.*import BiFunction<? super String,? super RundeckInstance,? extends RundeckInstance>import BiFunction<? super String,? super RundeckInstance,? extends RundeckInstance>.*import static BiFunction<? super String,? super RundeckInstance,? extends RundeckInstance>.*import Function<? super K,? extends V>import Function<? super K,? extends V>.*import static Function<? super K,? extends V>.*import Function<? super String,? extends RundeckInstance>import Function<? super String,? extends RundeckInstance>.*import static Function<? super String,? extends RundeckInstance>.*import BiConsumerimport BiConsumer.*import static BiConsumer.*import BiConsumer<? super K,? super V>import BiConsumer<? super K,? super V>.*import static BiConsumer<? super K,? super V>.*import BiConsumer<? super String,? super RundeckInstance>import BiConsumer<? super String,? super RundeckInstance>.*import static BiConsumer<? super String,? super RundeckInstance>.*import Entry<K,V>import Entry<K,V>.*import static Entry<K,V>.*import Set<Entry<K,V>>import Set<Entry<K,V>>.*import static Set<Entry<K,V>>.*import Collection<Entry<K,V>>import Collection<Entry<K,V>>.*import static Collection<Entry<K,V>>.*import Iterable<Entry<K,V>>import Iterable<Entry<K,V>>.*import static Iterable<Entry<K,V>>.*import Entry<String,RundeckInstance>import Entry<String,RundeckInstance>.*import static Entry<String,RundeckInstance>.*import Set<Entry<String,RundeckInstance>>import Set<Entry<String,RundeckInstance>>.*import static Set<Entry<String,RundeckInstance>>.*import Collection<Entry<String,RundeckInstance>>import Collection<Entry<String,RundeckInstance>>.*import static Collection<Entry<String,RundeckInstance>>.*import Iterable<Entry<String,RundeckInstance>>import Iterable<Entry<String,RundeckInstance>>.*import static Iterable<Entry<String,RundeckInstance>>.*import Collection<V>import Collection<V>.*import static Collection<V>.*import Iterable<V>import Iterable<V>.*import static Iterable<V>.*import Collection<RundeckInstance>import Collection<RundeckInstance>.*import static Collection<RundeckInstance>.*import Iterable<RundeckInstance>import Iterable<RundeckInstance>.*import static Iterable<RundeckInstance>.*import Set<K>import Set<K>.*import static Set<K>.*import Collection<K>import Collection<K>.*import static Collection<K>.*import Iterable<K>import Iterable<K>.*import static Iterable<K>.*import ? extends Kimport ? extends K.*import static ? extends K.*import Map<? extends K,? extends V>import Map<? extends K,? extends V>.*import static Map<? extends K,? extends V>.*import ? extends Stringimport ? extends String.*import static ? extends String.*import Map<? extends String,? extends RundeckInstance>import Map<? extends String,? extends RundeckInstance>.*import static Map<? extends String,? extends RundeckInstance>.*import ObjectOutputStreamimport ObjectOutputStream.*import static ObjectOutputStream.*import Node<K,V>import Node<K,V>.*import static Node<K,V>.*import HashMap<>import HashMap<>.*import static HashMap<>.*import Node<String,RundeckInstance>import Node<String,RundeckInstance>.*import static Node<String,RundeckInstance>.*import TreeNodeimport TreeNode.*import static TreeNode.*import TreeNode<>import TreeNode<>.*import static TreeNode<>.*import Entry<>import Entry<>.*import static Entry<>.*import Node<>import Node<>.*import static Node<>.*import LinkedHashMap<>import LinkedHashMap<>.*import static LinkedHashMap<>.*import TreeNode<K,V>import TreeNode<K,V>.*import static TreeNode<K,V>.*import TreeNode<String,RundeckInstance>import TreeNode<String,RundeckInstance>.*import static TreeNode<String,RundeckInstance>.*import Node[]import Node[].*import static Node[].*import Node<K,V>[]import Node<K,V>[].*import static Node<K,V>[].*import Node<String,RundeckInstance>[]import Node<String,RundeckInstance>[].*import static Node<String,RundeckInstance>[].*import Node<>[]import Node<>[].*import static Node<>[].*import ? extends Timport ? extends T.*import static ? extends T.*import Collection<? extends T>import Collection<? extends T>.*import static Collection<? extends T>.*import Iterable<? extends T>import Iterable<? extends T>.*import static Iterable<? extends T>.*import Map<Descriptor<T>,T>import Map<Descriptor<T>,T>.*import static Map<Descriptor<T>,T>.*import PluginWrapperimport PluginWrapper.*import static PluginWrapper.*import XmlFileimport XmlFile.*import static XmlFile.*import ? extends Describable<>import ? extends Describable<>.*import static ? extends Describable<>.*import Class<? extends Describable<>>import Class<? extends Describable<>>.*import static Class<? extends Describable<>>.*import Klassimport Klass.*import static Klass.*import Klass<?>import Klass<?>.*import static Klass<?>.*import Klass<>import Klass<>.*import static Klass<>.*import PropertyTypeimport PropertyType.*import static PropertyType.*import Map<String,Object>import Map<String,Object>.*import static Map<String,Object>.*import CheckMethodimport CheckMethod.*import static CheckMethod.*import Class<Publisher>import Class<Publisher>.*import static Class<Publisher>.*import Class<? extends T>import Class<? extends T>.*import static Class<? extends T>.*import ? extends Publisherimport ? extends Publisher.*import static ? extends Publisher.*import Class<? extends Publisher>import Class<? extends Publisher>.*import static Class<? extends Publisher>.*import Class<RundeckInstance>import Class<RundeckInstance>.*import static Class<RundeckInstance>.*import ? extends IllegalArgumentExceptionimport ? extends IllegalArgumentException.*import static ? extends IllegalArgumentException.*import Class<? extends IllegalArgumentException>import Class<? extends IllegalArgumentException>.*import static Class<? extends IllegalArgumentException>.*import Map<String,? extends IllegalArgumentException>import Map<String,? extends IllegalArgumentException>.*import static Map<String,? extends IllegalArgumentException>.*import IllegalArgumentException[]import IllegalArgumentException[].*import static IllegalArgumentException[].*import ? extends IllegalArgumentException[]import ? extends IllegalArgumentException[].*import static ? extends IllegalArgumentException[].*import Constructor<? extends IllegalArgumentException>import Constructor<? extends IllegalArgumentException>.*import static Constructor<? extends IllegalArgumentException>.*import ? super ? extends IllegalArgumentExceptionimport ? super ? extends IllegalArgumentException.*import static ? super ? extends IllegalArgumentException.*import Class<? super ? extends IllegalArgumentException>import Class<? super ? extends IllegalArgumentException>.*import static Class<? super ? extends IllegalArgumentException>.*import TypeVariable<Class<? extends IllegalArgumentException>>import TypeVariable<Class<? extends IllegalArgumentException>>.*import static TypeVariable<Class<? extends IllegalArgumentException>>.*import TypeVariable<Class<? extends IllegalArgumentException>>[]import TypeVariable<Class<? extends IllegalArgumentException>>[].*import static TypeVariable<Class<? extends IllegalArgumentException>>[].*import ? extends AbstractProject<>import ? extends AbstractProject<>.*import static ? extends AbstractProject<>.*import Class<? extends AbstractProject<>>import Class<? extends AbstractProject<>>.*import static Class<? extends AbstractProject<>>.*import ArrayList<String>import ArrayList<String>.*import static ArrayList<String>.*import AbstractList<String>import AbstractList<String>.*import static AbstractList<String>.*import AbstractCollection<String>import AbstractCollection<String>.*import static AbstractCollection<String>.*import Collection<? extends String>import Collection<? extends String>.*import static Collection<? extends String>.*import Iterable<? extends String>import Iterable<? extends String>.*import static Iterable<? extends String>.*import Spliterator<String>import Spliterator<String>.*import static Spliterator<String>.*import Consumer<? super String>import Consumer<? super String>.*import static Consumer<? super String>.*import Iterator<String>import Iterator<String>.*import static Iterator<String>.*import Stream<String>import Stream<String>.*import static Stream<String>.*import BaseStream<String,Stream<String>>import BaseStream<String,Stream<String>>.*import static BaseStream<String,Stream<String>>.*import Predicate<? super String>import Predicate<? super String>.*import static Predicate<? super String>.*import ListIterator<String>import ListIterator<String>.*import static ListIterator<String>.*import Comparator<? super String>import Comparator<? super String>.*import static Comparator<? super String>.*import UnaryOperator<String>import UnaryOperator<String>.*import static UnaryOperator<String>.*import Function<String,String>import Function<String,String>.*import static Function<String,String>.*import Arraysimport Arrays.*import static Arrays.*import ExtensionListimport ExtensionList.*import static ExtensionList.*import ExtensionList<RundeckDescriptor>import ExtensionList<RundeckDescriptor>.*import static ExtensionList<RundeckDescriptor>.*import AbstractList<RundeckDescriptor>import AbstractList<RundeckDescriptor>.*import static AbstractList<RundeckDescriptor>.*import AbstractCollection<RundeckDescriptor>import AbstractCollection<RundeckDescriptor>.*import static AbstractCollection<RundeckDescriptor>.*import Collection<RundeckDescriptor>import Collection<RundeckDescriptor>.*import static Collection<RundeckDescriptor>.*import Iterable<RundeckDescriptor>import Iterable<RundeckDescriptor>.*import static Iterable<RundeckDescriptor>.*import List<RundeckDescriptor>import List<RundeckDescriptor>.*import static List<RundeckDescriptor>.*import Spliterator<RundeckDescriptor>import Spliterator<RundeckDescriptor>.*import static Spliterator<RundeckDescriptor>.*import ? super RundeckDescriptorimport ? super RundeckDescriptor.*import static ? super RundeckDescriptor.*import Consumer<? super RundeckDescriptor>import Consumer<? super RundeckDescriptor>.*import static Consumer<? super RundeckDescriptor>.*import Iterator<RundeckDescriptor>import Iterator<RundeckDescriptor>.*import static Iterator<RundeckDescriptor>.*import Stream<RundeckDescriptor>import Stream<RundeckDescriptor>.*import static Stream<RundeckDescriptor>.*import BaseStream<RundeckDescriptor,Stream<RundeckDescriptor>>import BaseStream<RundeckDescriptor,Stream<RundeckDescriptor>>.*import static BaseStream<RundeckDescriptor,Stream<RundeckDescriptor>>.*import Predicate<? super RundeckDescriptor>import Predicate<? super RundeckDescriptor>.*import static Predicate<? super RundeckDescriptor>.*import ? extends RundeckDescriptorimport ? extends RundeckDescriptor.*import static ? extends RundeckDescriptor.*import Collection<? extends RundeckDescriptor>import Collection<? extends RundeckDescriptor>.*import static Collection<? extends RundeckDescriptor>.*import Iterable<? extends RundeckDescriptor>import Iterable<? extends RundeckDescriptor>.*import static Iterable<? extends RundeckDescriptor>.*import ListIterator<RundeckDescriptor>import ListIterator<RundeckDescriptor>.*import static ListIterator<RundeckDescriptor>.*import Comparator<? super RundeckDescriptor>import Comparator<? super RundeckDescriptor>.*import static Comparator<? super RundeckDescriptor>.*import UnaryOperator<RundeckDescriptor>import UnaryOperator<RundeckDescriptor>.*import static UnaryOperator<RundeckDescriptor>.*import Function<RundeckDescriptor,RundeckDescriptor>import Function<RundeckDescriptor,RundeckDescriptor>.*import static Function<RundeckDescriptor,RundeckDescriptor>.*import ExtensionList<>import ExtensionList<>.*import static ExtensionList<>.*import ExtensionList<T>import ExtensionList<T>.*import static ExtensionList<T>.*import AbstractList<T>import AbstractList<T>.*import static AbstractList<T>.*import AbstractCollection<T>import AbstractCollection<T>.*import static AbstractCollection<T>.*import ExtensionComponentimport ExtensionComponent.*import static ExtensionComponent.*import ExtensionComponent<T>import ExtensionComponent<T>.*import static ExtensionComponent<T>.*import Comparable<ExtensionComponent<T>>import Comparable<ExtensionComponent<T>>.*import static Comparable<ExtensionComponent<T>>.*import List<ExtensionComponent<T>>import List<ExtensionComponent<T>>.*import static List<ExtensionComponent<T>>.*import Collection<ExtensionComponent<T>>import Collection<ExtensionComponent<T>>.*import static Collection<ExtensionComponent<T>>.*import Iterable<ExtensionComponent<T>>import Iterable<ExtensionComponent<T>>.*import static Iterable<ExtensionComponent<T>>.*import ExtensionComponent<RundeckDescriptor>import ExtensionComponent<RundeckDescriptor>.*import static ExtensionComponent<RundeckDescriptor>.*import Comparable<ExtensionComponent<RundeckDescriptor>>import Comparable<ExtensionComponent<RundeckDescriptor>>.*import static Comparable<ExtensionComponent<RundeckDescriptor>>.*import List<ExtensionComponent<RundeckDescriptor>>import List<ExtensionComponent<RundeckDescriptor>>.*import static List<ExtensionComponent<RundeckDescriptor>>.*import Collection<ExtensionComponent<RundeckDescriptor>>import Collection<ExtensionComponent<RundeckDescriptor>>.*import static Collection<ExtensionComponent<RundeckDescriptor>>.*import Iterable<ExtensionComponent<RundeckDescriptor>>import Iterable<ExtensionComponent<RundeckDescriptor>>.*import static Iterable<ExtensionComponent<RundeckDescriptor>>.*import ExtensionComponentSetimport ExtensionComponentSet.*import static ExtensionComponentSet.*import ExtensionListListenerimport ExtensionListListener.*import static ExtensionListListener.*import CopyOnWriteArrayListimport CopyOnWriteArrayList.*import static CopyOnWriteArrayList.*import CopyOnWriteArrayList<ExtensionComponent<T>>import CopyOnWriteArrayList<ExtensionComponent<T>>.*import static CopyOnWriteArrayList<ExtensionComponent<T>>.*import Class<RundeckDescriptor>import Class<RundeckDescriptor>.*import static Class<RundeckDescriptor>.*import CopyOnWriteArrayList<ExtensionComponent<RundeckDescriptor>>import CopyOnWriteArrayList<ExtensionComponent<RundeckDescriptor>>.*import static CopyOnWriteArrayList<ExtensionComponent<RundeckDescriptor>>.*import CheckForNullimport CheckForNull.*import static CheckForNull.*import Pluginimport Plugin.*import static Plugin.*import RundeckPluginimport RundeckPlugin.*import static RundeckPlugin.*import WebHookListenerimport WebHookListener.*import static WebHookListener.*import RundeckTriggerimport RundeckTrigger.*import static RundeckTrigger.*import Trigger<AbstractProject<?,?>>import Trigger<AbstractProject<?,?>>.*import static Trigger<AbstractProject<?,?>>.*import Descriptor<Trigger<?>>import Descriptor<Trigger<?>>.*import static Descriptor<Trigger<?>>.*import List<TriggerDescriptor>import List<TriggerDescriptor>.*import static List<TriggerDescriptor>.*import Collection<TriggerDescriptor>import Collection<TriggerDescriptor>.*import static Collection<TriggerDescriptor>.*import Iterable<TriggerDescriptor>import Iterable<TriggerDescriptor>.*import static Iterable<TriggerDescriptor>.*import DescriptorExtensionListimport DescriptorExtensionList.*import static DescriptorExtensionList.*import DescriptorExtensionList<>import DescriptorExtensionList<>.*import static DescriptorExtensionList<>.*import DescriptorExtensionList<Trigger<?>,TriggerDescriptor>import DescriptorExtensionList<Trigger<?>,TriggerDescriptor>.*import static DescriptorExtensionList<Trigger<?>,TriggerDescriptor>.*import ExtensionList<TriggerDescriptor>import ExtensionList<TriggerDescriptor>.*import static ExtensionList<TriggerDescriptor>.*import AbstractList<TriggerDescriptor>import AbstractList<TriggerDescriptor>.*import static AbstractList<TriggerDescriptor>.*import AbstractCollection<TriggerDescriptor>import AbstractCollection<TriggerDescriptor>.*import static AbstractCollection<TriggerDescriptor>.*import ObjectStreamExceptionimport ObjectStreamException.*import static ObjectStreamException.*import ANTLRExceptionimport ANTLRException.*import static ANTLRException.*import Jimport J.*import static J.*import Timerimport Timer.*import static Timer.*import CronTabListimport CronTabList.*import static CronTabList.*import IOUtilsimport IOUtils.*import static IOUtils.*import Documentimport Document.*import static Document.*import ExecutionParserimport ExecutionParser.*import static ExecutionParser.*import ParserHelperimport ParserHelper.*import static ParserHelper.*import ServletInputStreamimport ServletInputStream.*import static ServletInputStream.*import BaseXpathParserimport BaseXpathParser.*import static BaseXpathParser.*import BaseXpathParser<RundeckExecution>import BaseXpathParser<RundeckExecution>.*import static BaseXpathParser<RundeckExecution>.*import XmlNodeParserimport XmlNodeParser.*import static XmlNodeParser.*import XmlNodeParser<RundeckExecution>import XmlNodeParser<RundeckExecution>.*import static XmlNodeParser<RundeckExecution>.*import Class<RundeckTrigger>import Class<RundeckTrigger>.*import static Class<RundeckTrigger>.*import Class<DummyRundeckJobCache>import Class<DummyRundeckJobCache>.*import static Class<DummyRundeckJobCache>.*import Map<String,DummyRundeckJobCache>import Map<String,DummyRundeckJobCache>.*import static Map<String,DummyRundeckJobCache>.*import DummyRundeckJobCache[]import DummyRundeckJobCache[].*import static DummyRundeckJobCache[].*import Constructor<DummyRundeckJobCache>import Constructor<DummyRundeckJobCache>.*import static Constructor<DummyRundeckJobCache>.*import ? super DummyRundeckJobCacheimport ? super DummyRundeckJobCache.*import static ? super DummyRundeckJobCache.*import Class<? super DummyRundeckJobCache>import Class<? super DummyRundeckJobCache>.*import static Class<? super DummyRundeckJobCache>.*import TypeVariable<Class<DummyRundeckJobCache>>import TypeVariable<Class<DummyRundeckJobCache>>.*import static TypeVariable<Class<DummyRundeckJobCache>>.*import TypeVariable<Class<DummyRundeckJobCache>>[]import TypeVariable<Class<DummyRundeckJobCache>>[].*import static TypeVariable<Class<DummyRundeckJobCache>>[].*import Objectsimport Objects.*import static Objects.*import Callableimport Callable.*import static Callable.*import ExecutionExceptionimport ExecutionException.*import static ExecutionException.*import TimeUnitimport TimeUnit.*import static TimeUnit.*import Throwablesimport Throwables.*import static Throwables.*import Cacheimport Cache.*import static Cache.*import CacheBuilderimport CacheBuilder.*import static CacheBuilder.*import CacheLoaderimport CacheLoader.*import static CacheLoader.*import LoadingCacheimport LoadingCache.*import static LoadingCache.*import UncheckedExecutionExceptionimport UncheckedExecutionException.*import static UncheckedExecutionException.*import Cache<String,?>import Cache<String,?>.*import static Cache<String,?>.*import Function<String,?>import Function<String,?>.*import static Function<String,?>.*import GwtCompatibleimport GwtCompatible.*import static GwtCompatible.*import Betaimport Beta.*import static Beta.*import Cache<String,RundeckJob>import Cache<String,RundeckJob>.*import static Cache<String,RundeckJob>.*import Function<String,RundeckJob>import Function<String,RundeckJob>.*import static Function<String,RundeckJob>.*import Cache<>import Cache<>.*import static Cache<>.*import Function<>import Function<>.*import static Function<>.*import LoadingCache<String,Cache<String,RundeckJob>>import LoadingCache<String,Cache<String,RundeckJob>>.*import static LoadingCache<String,Cache<String,RundeckJob>>.*import Cache<String,Cache<String,RundeckJob>>import Cache<String,Cache<String,RundeckJob>>.*import static Cache<String,Cache<String,RundeckJob>>.*import Function<String,Cache<String,RundeckJob>>import Function<String,Cache<String,RundeckJob>>.*import static Function<String,Cache<String,RundeckJob>>.*import Class<InMemoryRundeckJobCache>import Class<InMemoryRundeckJobCache>.*import static Class<InMemoryRundeckJobCache>.*import Map<String,InMemoryRundeckJobCache>import Map<String,InMemoryRundeckJobCache>.*import static Map<String,InMemoryRundeckJobCache>.*import InMemoryRundeckJobCache[]import InMemoryRundeckJobCache[].*import static InMemoryRundeckJobCache[].*import Constructor<InMemoryRundeckJobCache>import Constructor<InMemoryRundeckJobCache>.*import static Constructor<InMemoryRundeckJobCache>.*import ? super InMemoryRundeckJobCacheimport ? super InMemoryRundeckJobCache.*import static ? super InMemoryRundeckJobCache.*import Class<? super InMemoryRundeckJobCache>import Class<? super InMemoryRundeckJobCache>.*import static Class<? super InMemoryRundeckJobCache>.*import TypeVariable<Class<InMemoryRundeckJobCache>>import TypeVariable<Class<InMemoryRundeckJobCache>>.*import static TypeVariable<Class<InMemoryRundeckJobCache>>.*import TypeVariable<Class<InMemoryRundeckJobCache>>[]import TypeVariable<Class<InMemoryRundeckJobCache>>[].*import static TypeVariable<Class<InMemoryRundeckJobCache>>[].*import CacheBuilder<Object,Object>import CacheBuilder<Object,Object>.*import static CacheBuilder<Object,Object>.*import CacheLoader<>import CacheLoader<>.*import static CacheLoader<>.*import LoadingCache<>import LoadingCache<>.*import static LoadingCache<>.*import K1import K1.*import static K1.*import V1import V1.*import static V1.*import LoadingCache<K1,V1>import LoadingCache<K1,V1>.*import static LoadingCache<K1,V1>.*import Cache<K1,V1>import Cache<K1,V1>.*import static Cache<K1,V1>.*import Function<K1,V1>import Function<K1,V1>.*import static Function<K1,V1>.*import ? super K1import ? super K1.*import static ? super K1.*import CacheLoader<? super K1,V1>import CacheLoader<? super K1,V1>.*import static CacheLoader<? super K1,V1>.*import Supplierimport Supplier.*import static Supplier.*import Supplier<>import Supplier<>.*import static Supplier<>.*import StatsCounterimport StatsCounter.*import static StatsCounter.*import ? extends StatsCounterimport ? extends StatsCounter.*import static ? extends StatsCounter.*import Supplier<? extends StatsCounter>import Supplier<? extends StatsCounter>.*import static Supplier<? extends StatsCounter>.*import CacheBuilder<>import CacheBuilder<>.*import static CacheBuilder<>.*import RemovalListenerimport RemovalListener.*import static RemovalListener.*import RemovalListener<>import RemovalListener<>.*import static RemovalListener<>.*import RemovalListener<K1,V1>import RemovalListener<K1,V1>.*import static RemovalListener<K1,V1>.*import CacheBuilder<K1,V1>import CacheBuilder<K1,V1>.*import static CacheBuilder<K1,V1>.*import ? super V1import ? super V1.*import static ? super V1.*import RemovalListener<? super K1,? super V1>import RemovalListener<? super K1,? super V1>.*import static RemovalListener<? super K1,? super V1>.*import Tickerimport Ticker.*import static Ticker.*import Strengthimport Strength.*import static Strength.*import Weigherimport Weigher.*import static Weigher.*import Weigher<>import Weigher<>.*import static Weigher<>.*import Weigher<K1,V1>import Weigher<K1,V1>.*import static Weigher<K1,V1>.*import Weigher<? super K1,? super V1>import Weigher<? super K1,? super V1>.*import static Weigher<? super K1,? super V1>.*import Equivalenceimport Equivalence.*import static Equivalence.*import Equivalence<>import Equivalence<>.*import static Equivalence<>.*import Equivalence<Object>import Equivalence<Object>.*import static Equivalence<Object>.*import RemovalListener<? super K,? super V>import RemovalListener<? super K,? super V>.*import static RemovalListener<? super K,? super V>.*import Weigher<? super K,? super V>import Weigher<? super K,? super V>.*import static Weigher<? super K,? super V>.*import SimpleStatsCounterimport SimpleStatsCounter.*import static SimpleStatsCounter.*import Supplier<SimpleStatsCounter>import Supplier<SimpleStatsCounter>.*import static Supplier<SimpleStatsCounter>.*import CacheStatsimport CacheStats.*import static CacheStats.*import CacheLoader<String,Cache<String,RundeckJob>>import CacheLoader<String,Cache<String,RundeckJob>>.*import static CacheLoader<String,Cache<String,RundeckJob>>.*import CacheLoader<Object,V>import CacheLoader<Object,V>.*import static CacheLoader<Object,V>.*import Supplier<V>import Supplier<V>.*import static Supplier<V>.*import CacheLoader<K,V>import CacheLoader<K,V>.*import static CacheLoader<K,V>.*import Function<K,V>import Function<K,V>.*import static Function<K,V>.*import Iterable<? extends K>import Iterable<? extends K>.*import static Iterable<? extends K>.*import Map<K,V>import Map<K,V>.*import static Map<K,V>.*import Map<String,Cache<String,RundeckJob>>import Map<String,Cache<String,RundeckJob>>.*import static Map<String,Cache<String,RundeckJob>>.*import ListenableFutureimport ListenableFuture.*import static ListenableFuture.*import ListenableFuture<>import ListenableFuture<>.*import static ListenableFuture<>.*import ListenableFuture<V>import ListenableFuture<V>.*import static ListenableFuture<V>.*import Future<V>import Future<V>.*import static Future<V>.*import ListenableFuture<Cache<String,RundeckJob>>import ListenableFuture<Cache<String,RundeckJob>>.*import static ListenableFuture<Cache<String,RundeckJob>>.*import Future<Cache<String,RundeckJob>>import Future<Cache<String,RundeckJob>>.*import static Future<Cache<String,RundeckJob>>.*import Fimport F.*import static F.*import ConcurrentMapimport ConcurrentMap.*import static ConcurrentMap.*import ConcurrentMap<>import ConcurrentMap<>.*import static ConcurrentMap<>.*import ConcurrentMap<K,V>import ConcurrentMap<K,V>.*import static ConcurrentMap<K,V>.*import ConcurrentMap<String,Cache<String,RundeckJob>>import ConcurrentMap<String,Cache<String,RundeckJob>>.*import static ConcurrentMap<String,Cache<String,RundeckJob>>.*import ImmutableMapimport ImmutableMap.*import static ImmutableMap.*import ImmutableMap<>import ImmutableMap<>.*import static ImmutableMap<>.*import ImmutableMap<K,V>import ImmutableMap<K,V>.*import static ImmutableMap<K,V>.*import ImmutableMap<String,Cache<String,RundeckJob>>import ImmutableMap<String,Cache<String,RundeckJob>>.*import static ImmutableMap<String,Cache<String,RundeckJob>>.*import Callable<? extends V>import Callable<? extends V>.*import static Callable<? extends V>.*import ? extends Cache<String,RundeckJob>import ? extends Cache<String,RundeckJob>.*import static ? extends Cache<String,RundeckJob>.*import Callable<? extends Cache<String,RundeckJob>>import Callable<? extends Cache<String,RundeckJob>>.*import static Callable<? extends Cache<String,RundeckJob>>.*import Entry<String,Cache<String,RundeckJob>>import Entry<String,Cache<String,RundeckJob>>.*import static Entry<String,Cache<String,RundeckJob>>.*import Set<Entry<String,Cache<String,RundeckJob>>>import Set<Entry<String,Cache<String,RundeckJob>>>.*import static Set<Entry<String,Cache<String,RundeckJob>>>.*import Collection<Entry<String,Cache<String,RundeckJob>>>import Collection<Entry<String,Cache<String,RundeckJob>>>.*import static Collection<Entry<String,Cache<String,RundeckJob>>>.*import Iterable<Entry<String,Cache<String,RundeckJob>>>import Iterable<Entry<String,Cache<String,RundeckJob>>>.*import static Iterable<Entry<String,Cache<String,RundeckJob>>>.*import ? super Cache<String,RundeckJob>import ? super Cache<String,RundeckJob>.*import static ? super Cache<String,RundeckJob>.*import BiFunction<? super Cache<String,RundeckJob>,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>import BiFunction<? super Cache<String,RundeckJob>,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>.*import static BiFunction<? super Cache<String,RundeckJob>,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>.*import BiFunction<? super String,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>import BiFunction<? super String,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>.*import static BiFunction<? super String,? super Cache<String,RundeckJob>,? extends Cache<String,RundeckJob>>.*import Function<? super String,? extends Cache<String,RundeckJob>>import Function<? super String,? extends Cache<String,RundeckJob>>.*import static Function<? super String,? extends Cache<String,RundeckJob>>.*import BiConsumer<? super String,? super Cache<String,RundeckJob>>import BiConsumer<? super String,? super Cache<String,RundeckJob>>.*import static BiConsumer<? super String,? super Cache<String,RundeckJob>>.*import Collection<Cache<String,RundeckJob>>import Collection<Cache<String,RundeckJob>>.*import static Collection<Cache<String,RundeckJob>>.*import Iterable<Cache<String,RundeckJob>>import Iterable<Cache<String,RundeckJob>>.*import static Iterable<Cache<String,RundeckJob>>.*import Map<? extends String,? extends Cache<String,RundeckJob>>import Map<? extends String,? extends Cache<String,RundeckJob>>.*import static Map<? extends String,? extends Cache<String,RundeckJob>>.*import Comparator<>import Comparator<>.*import static Comparator<>.*import Comparator<Entry<K,V>>import Comparator<Entry<K,V>>.*import static Comparator<Entry<K,V>>.*import Comparator<? super V>import Comparator<? super V>.*import static Comparator<? super V>.*import Comparator<? super K>import Comparator<? super K>.*import static Comparator<? super K>.*import Comparable<? super V>import Comparable<? super V>.*import static Comparable<? super V>.*import Comparable<? super K>import Comparable<? super K>.*import static Comparable<? super K>.*import ConcurrentMap<String,RundeckJob>import ConcurrentMap<String,RundeckJob>.*import static ConcurrentMap<String,RundeckJob>.*import Map<String,RundeckJob>import Map<String,RundeckJob>.*import static Map<String,RundeckJob>.*import ImmutableMap<String,RundeckJob>import ImmutableMap<String,RundeckJob>.*import static ImmutableMap<String,RundeckJob>.*import ? extends RundeckJobimport ? extends RundeckJob.*import static ? extends RundeckJob.*import Callable<? extends RundeckJob>import Callable<? extends RundeckJob>.*import static Callable<? extends RundeckJob>.*import Callable<RundeckJob>import Callable<RundeckJob>.*import static Callable<RundeckJob>.*import ConcurrentMap<String,?>import ConcurrentMap<String,?>.*import static ConcurrentMap<String,?>.*import Map<String,?>import Map<String,?>.*import static Map<String,?>.*import ImmutableMap<String,?>import ImmutableMap<String,?>.*import static ImmutableMap<String,?>.*import Callable<? extends Object>import Callable<? extends Object>.*import static Callable<? extends Object>.*import Expectationsimport Expectations.*import static Expectations.*import Mockedimport Mocked.*import static Mocked.*import NonStrictExpectationsimport NonStrictExpectations.*import static NonStrictExpectations.*import Beforeimport Before.*import static Before.*import Testimport Test.*import static Test.*import Assertimport Assert.*import static Assert.*import RunDeckLogTailTestimport RunDeckLogTailTest.*import static RunDeckLogTailTest.*import Invocationsimport Invocations.*import static Invocations.*import HudsonTestCaseimport HudsonTestCase.*import static HudsonTestCase.*import RundeckCauseTestimport RundeckCauseTest.*import static RundeckCauseTest.*import FreeStyleProjectimport FreeStyleProject.*import static FreeStyleProject.*import FileUtilsimport FileUtils.*import static FileUtils.*import LocalDataimport LocalData.*import static LocalData.*import RundeckNotifierBackwardCompatibilityTestimport RundeckNotifierBackwardCompatibilityTest.*import static RundeckNotifierBackwardCompatibilityTest.*import TestCaseimport TestCase.*import static TestCase.*import Projectimport Project.*import static Project.*import FreeStyleBuildimport FreeStyleBuild.*import static FreeStyleBuild.*import Project<FreeStyleProject,FreeStyleBuild>import Project<FreeStyleProject,FreeStyleBuild>.*import static Project<FreeStyleProject,FreeStyleBuild>.*import AbstractProject<FreeStyleProject,FreeStyleBuild>import AbstractProject<FreeStyleProject,FreeStyleBuild>.*import static AbstractProject<FreeStyleProject,FreeStyleBuild>.*import Job<FreeStyleProject,FreeStyleBuild>import Job<FreeStyleProject,FreeStyleBuild>.*import static Job<FreeStyleProject,FreeStyleBuild>.*import LazyLoadingJob<FreeStyleProject,FreeStyleBuild>import LazyLoadingJob<FreeStyleProject,FreeStyleBuild>.*import static LazyLoadingJob<FreeStyleProject,FreeStyleBuild>.*import SCMTriggerItemimport SCMTriggerItem.*import static SCMTriggerItem.*import ProjectWithMavenimport ProjectWithMaven.*import static ProjectWithMaven.*import BuildableItemWithBuildWrappersimport BuildableItemWithBuildWrappers.*import static BuildableItemWithBuildWrappers.*import List<FreeStyleBuild>import List<FreeStyleBuild>.*import static List<FreeStyleBuild>.*import Collection<FreeStyleBuild>import Collection<FreeStyleBuild>.*import static Collection<FreeStyleBuild>.*import Iterable<FreeStyleBuild>import Iterable<FreeStyleBuild>.*import static Iterable<FreeStyleBuild>.*import ? extends FreeStyleBuildimport ? extends FreeStyleBuild.*import static ? extends FreeStyleBuild.*import SortedMap<Integer,? extends FreeStyleBuild>import SortedMap<Integer,? extends FreeStyleBuild>.*import static SortedMap<Integer,? extends FreeStyleBuild>.*import Map<Integer,? extends FreeStyleBuild>import Map<Integer,? extends FreeStyleBuild>.*import static Map<Integer,? extends FreeStyleBuild>.*import RunList<FreeStyleBuild>import RunList<FreeStyleBuild>.*import static RunList<FreeStyleBuild>.*import AbstractList<FreeStyleBuild>import AbstractList<FreeStyleBuild>.*import static AbstractList<FreeStyleBuild>.*import AbstractCollection<FreeStyleBuild>import AbstractCollection<FreeStyleBuild>.*import static AbstractCollection<FreeStyleBuild>.*import SortedMap<Integer,FreeStyleBuild>import SortedMap<Integer,FreeStyleBuild>.*import static SortedMap<Integer,FreeStyleBuild>.*import Map<Integer,FreeStyleBuild>import Map<Integer,FreeStyleBuild>.*import static Map<Integer,FreeStyleBuild>.*import ? super FreeStyleProjectimport ? super FreeStyleProject.*import static ? super FreeStyleProject.*import JobProperty<? super FreeStyleProject>import JobProperty<? super FreeStyleProject>.*import static JobProperty<? super FreeStyleProject>.*import List<JobProperty<? super FreeStyleProject>>import List<JobProperty<? super FreeStyleProject>>.*import static List<JobProperty<? super FreeStyleProject>>.*import Collection<JobProperty<? super FreeStyleProject>>import Collection<JobProperty<? super FreeStyleProject>>.*import static Collection<JobProperty<? super FreeStyleProject>>.*import Iterable<JobProperty<? super FreeStyleProject>>import Iterable<JobProperty<? super FreeStyleProject>>.*import static Iterable<JobProperty<? super FreeStyleProject>>.*import Map<JobPropertyDescriptor,JobProperty<? super FreeStyleProject>>import Map<JobPropertyDescriptor,JobProperty<? super FreeStyleProject>>.*import static Map<JobPropertyDescriptor,JobProperty<? super FreeStyleProject>>.*import LazyBuildMixIn<FreeStyleProject,FreeStyleBuild>import LazyBuildMixIn<FreeStyleProject,FreeStyleBuild>.*import static LazyBuildMixIn<FreeStyleProject,FreeStyleBuild>.*import Class<FreeStyleBuild>import Class<FreeStyleBuild>.*import static Class<FreeStyleBuild>.*import RunMap<FreeStyleBuild>import RunMap<FreeStyleBuild>.*import static RunMap<FreeStyleBuild>.*import AbstractLazyLoadRunMap<FreeStyleBuild>import AbstractLazyLoadRunMap<FreeStyleBuild>.*import static AbstractLazyLoadRunMap<FreeStyleBuild>.*import AbstractMap<Integer,FreeStyleBuild>import AbstractMap<Integer,FreeStyleBuild>.*import static AbstractMap<Integer,FreeStyleBuild>.*import QueueTaskFuture<FreeStyleBuild>import QueueTaskFuture<FreeStyleBuild>.*import static QueueTaskFuture<FreeStyleBuild>.*import Future<FreeStyleBuild>import Future<FreeStyleBuild>.*import static Future<FreeStyleBuild>.*import MavenInstallationimport MavenInstallation.*import static MavenInstallation.*import BuildWrapperimport BuildWrapper.*import static BuildWrapper.*import Descriptor<BuildWrapper>import Descriptor<BuildWrapper>.*import static Descriptor<BuildWrapper>.*import DescribableList<BuildWrapper,Descriptor<BuildWrapper>>import DescribableList<BuildWrapper,Descriptor<BuildWrapper>>.*import static DescribableList<BuildWrapper,Descriptor<BuildWrapper>>.*import PersistedList<BuildWrapper>import PersistedList<BuildWrapper>.*import static PersistedList<BuildWrapper>.*import AbstractList<BuildWrapper>import AbstractList<BuildWrapper>.*import static AbstractList<BuildWrapper>.*import AbstractCollection<BuildWrapper>import AbstractCollection<BuildWrapper>.*import static AbstractCollection<BuildWrapper>.*import Collection<BuildWrapper>import Collection<BuildWrapper>.*import static Collection<BuildWrapper>.*import Iterable<BuildWrapper>import Iterable<BuildWrapper>.*import static Iterable<BuildWrapper>.*import List<BuildWrapper>import List<BuildWrapper>.*import static List<BuildWrapper>.*import Map<Descriptor<BuildWrapper>,BuildWrapper>import Map<Descriptor<BuildWrapper>,BuildWrapper>.*import static Map<Descriptor<BuildWrapper>,BuildWrapper>.*import Builderimport Builder.*import static Builder.*import Descriptor<Builder>import Descriptor<Builder>.*import static Descriptor<Builder>.*import DescribableList<Builder,Descriptor<Builder>>import DescribableList<Builder,Descriptor<Builder>>.*import static DescribableList<Builder,Descriptor<Builder>>.*import PersistedList<Builder>import PersistedList<Builder>.*import static PersistedList<Builder>.*import AbstractList<Builder>import AbstractList<Builder>.*import static AbstractList<Builder>.*import AbstractCollection<Builder>import AbstractCollection<Builder>.*import static AbstractCollection<Builder>.*import Collection<Builder>import Collection<Builder>.*import static Collection<Builder>.*import Iterable<Builder>import Iterable<Builder>.*import static Iterable<Builder>.*import List<Builder>import List<Builder>.*import static List<Builder>.*import Map<Descriptor<Publisher>,Publisher>import Map<Descriptor<Publisher>,Publisher>.*import static Map<Descriptor<Publisher>,Publisher>.*import ? extends SCMimport ? extends SCM.*import static ? extends SCM.*import Collection<? extends SCM>import Collection<? extends SCM>.*import static Collection<? extends SCM>.*import Iterable<? extends SCM>import Iterable<? extends SCM>.*import static Iterable<? extends SCM>.*import SCMTriggerimport SCMTrigger.*import static SCMTrigger.*import CredentialsDescriptorimport CredentialsDescriptor.*import static CredentialsDescriptor.*import CredentialsScopeimport CredentialsScope.*import static CredentialsScope.*import StandardUsernameCredentialsimport StandardUsernameCredentials.*import static StandardUsernameCredentials.*import StandardUsernamePasswordCredentialsimport StandardUsernamePasswordCredentials.*import static StandardUsernamePasswordCredentials.*import UsernamePasswordCredentialsimport UsernamePasswordCredentials.*import static UsernamePasswordCredentials.*import UsernamePasswordCredentialsImplimport UsernamePasswordCredentialsImpl.*import static UsernamePasswordCredentialsImpl.*import NonNullimport NonNull.*import static NonNull.*import CredentialsSVNAuthenticationProviderImplimport CredentialsSVNAuthenticationProviderImpl.*import static CredentialsSVNAuthenticationProviderImpl.*import SVNAuthenticationManagerimport SVNAuthenticationManager.*import static SVNAuthenticationManager.*import SubversionSCMimport SubversionSCM.*import static SubversionSCM.*import StringWriterimport StringWriter.*import static StringWriter.*import DateUtilsimport DateUtils.*import static DateUtils.*import CopyExistingimport CopyExisting.*import static CopyExisting.*import MockBuilderimport MockBuilder.*import static MockBuilder.*import SVNDepthimport SVNDepth.*import static SVNDepth.*import SVNErrorMessageimport SVNErrorMessage.*import static SVNErrorMessage.*import SVNURLimport SVNURL.*import static SVNURL.*import ISVNAuthenticationProviderimport ISVNAuthenticationProvider.*import static ISVNAuthenticationProvider.*import SVNAuthenticationimport SVNAuthentication.*import static SVNAuthentication.*import DefaultSVNAuthenticationManagerimport DefaultSVNAuthenticationManager.*import static DefaultSVNAuthenticationManager.*import SVNClientManagerimport SVNClientManager.*import static SVNClientManager.*import RundeckNotifierTestimport RundeckNotifierTest.*import static RundeckNotifierTest.*import Buildimport Build.*import static Build.*import Build<?,?>import Build<?,?>.*import static Build<?,?>.*import MockRundeckClientimport MockRundeckClient.*import static MockRundeckClient.*import TimeoutExceptionimport TimeoutException.*import static TimeoutException.*import Run<FreeStyleProject,FreeStyleBuild>import Run<FreeStyleProject,FreeStyleBuild>.*import static Run<FreeStyleProject,FreeStyleBuild>.*import Comparable<FreeStyleBuild>import Comparable<FreeStyleBuild>.*import static Comparable<FreeStyleBuild>.*import BuildReference<FreeStyleBuild>import BuildReference<FreeStyleBuild>.*import static BuildReference<FreeStyleBuild>.*import Spliterator<Builder>import Spliterator<Builder>.*import static Spliterator<Builder>.*import ? super Builderimport ? super Builder.*import static ? super Builder.*import Consumer<? super Builder>import Consumer<? super Builder>.*import static Consumer<? super Builder>.*import Iterator<Builder>import Iterator<Builder>.*import static Iterator<Builder>.*import Stream<Builder>import Stream<Builder>.*import static Stream<Builder>.*import BaseStream<Builder,Stream<Builder>>import BaseStream<Builder,Stream<Builder>>.*import static BaseStream<Builder,Stream<Builder>>.*import Predicate<? super Builder>import Predicate<? super Builder>.*import static Predicate<? super Builder>.*import ? extends Builderimport ? extends Builder.*import static ? extends Builder.*import Collection<? extends Builder>import Collection<? extends Builder>.*import static Collection<? extends Builder>.*import Iterable<? extends Builder>import Iterable<? extends Builder>.*import static Iterable<? extends Builder>.*import ListIterator<Builder>import ListIterator<Builder>.*import static ListIterator<Builder>.*import Comparator<? super Builder>import Comparator<? super Builder>.*import static Comparator<? super Builder>.*import UnaryOperator<Builder>import UnaryOperator<Builder>.*import static UnaryOperator<Builder>.*import Function<Builder,Builder>import Function<Builder,Builder>.*import static Function<Builder,Builder>.*import Collection<? super T>import Collection<? super T>.*import static Collection<? super T>.*import Iterable<? super T>import Iterable<? super T>.*import static Iterable<? super T>.*import Collection<? super Builder>import Collection<? super Builder>.*import static Collection<? super Builder>.*import Iterable<? super Builder>import Iterable<? super Builder>.*import static Iterable<? super Builder>.*import Class<? extends Builder>import Class<? extends Builder>.*import static Class<? extends Builder>.*import List<U>import List<U>.*import static List<U>.*import Collection<U>import Collection<U>.*import static Collection<U>.*import Iterable<U>import Iterable<U>.*import static Iterable<U>.*import CopyOnWriteList<T>import CopyOnWriteList<T>.*import static CopyOnWriteList<T>.*import Spliterator<Publisher>import Spliterator<Publisher>.*import static Spliterator<Publisher>.*import ? super Publisherimport ? super Publisher.*import static ? super Publisher.*import Consumer<? super Publisher>import Consumer<? super Publisher>.*import static Consumer<? super Publisher>.*import Iterator<Publisher>import Iterator<Publisher>.*import static Iterator<Publisher>.*import Stream<Publisher>import Stream<Publisher>.*import static Stream<Publisher>.*import BaseStream<Publisher,Stream<Publisher>>import BaseStream<Publisher,Stream<Publisher>>.*import static BaseStream<Publisher,Stream<Publisher>>.*import Predicate<? super Publisher>import Predicate<? super Publisher>.*import static Predicate<? super Publisher>.*import Collection<? extends Publisher>import Collection<? extends Publisher>.*import static Collection<? extends Publisher>.*import Iterable<? extends Publisher>import Iterable<? extends Publisher>.*import static Iterable<? extends Publisher>.*import ListIterator<Publisher>import ListIterator<Publisher>.*import static ListIterator<Publisher>.*import Comparator<? super Publisher>import Comparator<? super Publisher>.*import static Comparator<? super Publisher>.*import UnaryOperator<Publisher>import UnaryOperator<Publisher>.*import static UnaryOperator<Publisher>.*import Function<Publisher,Publisher>import Function<Publisher,Publisher>.*import static Function<Publisher,Publisher>.*import Collection<? super Publisher>import Collection<? super Publisher>.*import static Collection<? super Publisher>.*import Iterable<? super Publisher>import Iterable<? super Publisher>.*import static Iterable<? super Publisher>.*import Class<RundeckExecutionBuildBadgeAction>import Class<RundeckExecutionBuildBadgeAction>.*import static Class<RundeckExecutionBuildBadgeAction>.*import AbstractBuild<FreeStyleProject,FreeStyleBuild>import AbstractBuild<FreeStyleProject,FreeStyleBuild>.*import static AbstractBuild<FreeStyleProject,FreeStyleBuild>.*import LazyLoadingRun<FreeStyleProject,FreeStyleBuild>import LazyLoadingRun<FreeStyleProject,FreeStyleBuild>.*import static LazyLoadingRun<FreeStyleProject,FreeStyleBuild>.*import RunMixIn<FreeStyleProject,FreeStyleBuild>import RunMixIn<FreeStyleProject,FreeStyleBuild>.*import static RunMixIn<FreeStyleProject,FreeStyleBuild>.*import Hashtableimport Hashtable.*import static Hashtable.*import Hashtable<Object,Object>import Hashtable<Object,Object>.*import static Hashtable<Object,Object>.*import Dictionaryimport Dictionary.*import static Dictionary.*import Dictionary<Object,Object>import Dictionary<Object,Object>.*import static Dictionary<Object,Object>.*import Map<Object,Object>import Map<Object,Object>.*import static Map<Object,Object>.*import Enumerationimport Enumeration.*import static Enumeration.*import Enumeration<>import Enumeration<>.*import static Enumeration<>.*import Enumeration<V>import Enumeration<V>.*import static Enumeration<V>.*import Enumeration<Object>import Enumeration<Object>.*import static Enumeration<Object>.*import Enumeration<K>import Enumeration<K>.*import static Enumeration<K>.*import ? super Objectimport ? super Object.*import static ? super Object.*import BiFunction<? super Object,? super Object,? extends Object>import BiFunction<? super Object,? super Object,? extends Object>.*import static BiFunction<? super Object,? super Object,? extends Object>.*import Function<? super Object,? extends Object>import Function<? super Object,? extends Object>.*import static Function<? super Object,? extends Object>.*import BiConsumer<? super Object,? super Object>import BiConsumer<? super Object,? super Object>.*import static BiConsumer<? super Object,? super Object>.*import Entry<Object,Object>import Entry<Object,Object>.*import static Entry<Object,Object>.*import Set<Entry<Object,Object>>import Set<Entry<Object,Object>>.*import static Set<Entry<Object,Object>>.*import Collection<Entry<Object,Object>>import Collection<Entry<Object,Object>>.*import static Collection<Entry<Object,Object>>.*import Iterable<Entry<Object,Object>>import Iterable<Entry<Object,Object>>.*import static Iterable<Entry<Object,Object>>.*import Collection<Object>import Collection<Object>.*import static Collection<Object>.*import Iterable<Object>import Iterable<Object>.*import static Iterable<Object>.*import Set<Object>import Set<Object>.*import static Set<Object>.*import Map<? extends Object,? extends Object>import Map<? extends Object,? extends Object>.*import static Map<? extends Object,? extends Object>.*import Writerimport Writer.*import static Writer.*import ? extends RundeckNotifierTestimport ? extends RundeckNotifierTest.*import static ? extends RundeckNotifierTest.*import Class<? extends RundeckNotifierTest>import Class<? extends RundeckNotifierTest>.*import static Class<? extends RundeckNotifierTest>.*import Map<String,? extends RundeckNotifierTest>import Map<String,? extends RundeckNotifierTest>.*import static Map<String,? extends RundeckNotifierTest>.*import RundeckNotifierTest[]import RundeckNotifierTest[].*import static RundeckNotifierTest[].*import ? extends RundeckNotifierTest[]import ? extends RundeckNotifierTest[].*import static ? extends RundeckNotifierTest[].*import Constructor<? extends RundeckNotifierTest>import Constructor<? extends RundeckNotifierTest>.*import static Constructor<? extends RundeckNotifierTest>.*import ? super ? extends RundeckNotifierTestimport ? super ? extends RundeckNotifierTest.*import static ? super ? extends RundeckNotifierTest.*import Class<? super ? extends RundeckNotifierTest>import Class<? super ? extends RundeckNotifierTest>.*import static Class<? super ? extends RundeckNotifierTest>.*import TypeVariable<Class<? extends RundeckNotifierTest>>import TypeVariable<Class<? extends RundeckNotifierTest>>.*import static TypeVariable<Class<? extends RundeckNotifierTest>>.*import TypeVariable<Class<? extends RundeckNotifierTest>>[]import TypeVariable<Class<? extends RundeckNotifierTest>>[].*import static TypeVariable<Class<? extends RundeckNotifierTest>>[].*import URIimport URI.*import static URI.*import Credentialsimport Credentials.*import static Credentials.*import ISVNAuthenticationManagerimport ISVNAuthenticationManager.*import static ISVNAuthenticationManager.*import Systemimport System.*import static System.*import SVNWCClientimport SVNWCClient.*import static SVNWCClient.*import SVNCommitInfoimport SVNCommitInfo.*import static SVNCommitInfo.*import SVNCommitClientimport SVNCommitClient.*import static SVNCommitClient.*import File[]import File[].*import static File[].*import SVNPropertiesimport SVNProperties.*import static SVNProperties.*import ?[]import ?[].*import static ?[].*import Class<? super ?>import Class<? super ?>.*import static Class<? super ?>.*import TypeVariable<Class<?>>import TypeVariable<Class<?>>.*import static TypeVariable<Class<?>>.*import TypeVariable<Class<?>>[]import TypeVariable<Class<?>>[].*import static TypeVariable<Class<?>>[].*import MockRundeckInstanceBuilderimport MockRundeckInstanceBuilder.*import static MockRundeckInstanceBuilder.*import InjectedTestimport InjectedTest.*import static InjectedTest.*import HashMap<String,Object>import HashMap<String,Object>.*import static HashMap<String,Object>.*import AbstractMap<String,Object>import AbstractMap<String,Object>.*import static AbstractMap<String,Object>.*import BiFunction<? super String,? super Object,? extends Object>import BiFunction<? super String,? super Object,? extends Object>.*import static BiFunction<? super String,? super Object,? extends Object>.*import Function<? super String,? extends Object>import Function<? super String,? extends Object>.*import static Function<? super String,? extends Object>.*import BiConsumer<? super String,? super Object>import BiConsumer<? super String,? super Object>.*import static BiConsumer<? super String,? super Object>.*import Entry<String,Object>import Entry<String,Object>.*import static Entry<String,Object>.*import Set<Entry<String,Object>>import Set<Entry<String,Object>>.*import static Set<Entry<String,Object>>.*import Collection<Entry<String,Object>>import Collection<Entry<String,Object>>.*import static Collection<Entry<String,Object>>.*import Iterable<Entry<String,Object>>import Iterable<Entry<String,Object>>.*import static Iterable<Entry<String,Object>>.*import Map<? extends String,? extends Object>import Map<? extends String,? extends Object>.*import static Map<? extends String,? extends Object>.*import Node<String,Object>import Node<String,Object>.*import static Node<String,Object>.*import TreeNode<String,Object>import TreeNode<String,Object>.*import static TreeNode<String,Object>.*import Node<String,Object>[]import Node<String,Object>[].*import static Node<String,Object>[].*import TestSuiteimport TestSuite.*import static TestSuite.*import PluginAutomaticTestBuilderimport PluginAutomaticTestBuilder.*import static PluginAutomaticTestBuilder.*import BaseCredentialsimport BaseCredentials.*import static BaseCredentials.*import Describable<Credentials>import Describable<Credentials>.*import static Describable<Credentials>.*import Descriptor<Credentials>import Descriptor<Credentials>.*import static Descriptor<Credentials>.*import Class<Credentials>import Class<Credentials>.*import static Class<Credentials>.*import ? extends Credentialsimport ? extends Credentials.*import static ? extends Credentials.*import Class<? extends Credentials>import Class<? extends Credentials>.*import static Class<? extends Credentials>.*import IconSpecimport IconSpec.*import static IconSpec.*import CredentialsProviderimport CredentialsProvider.*import static CredentialsProvider.*import CredentialsWrapperimport CredentialsWrapper.*import static CredentialsWrapper.*import DomainWrapperimport DomainWrapper.*import static DomainWrapper.*import ListBoxModelimport ListBoxModel.*import static ListBoxModel.*import CredentialsMatcherimport CredentialsMatcher.*import static CredentialsMatcher.*import CredentialsNameProviderimport CredentialsNameProvider.*import static CredentialsNameProvider.*import Cimport C.*import static C.*import Descriptor<CredentialsProvider>import Descriptor<CredentialsProvider>.*import static Descriptor<CredentialsProvider>.*import Class<CredentialsProvider>import Class<CredentialsProvider>.*import static Class<CredentialsProvider>.*import ? extends CredentialsProviderimport ? extends CredentialsProvider.*import static ? extends CredentialsProvider.*import Class<? extends CredentialsProvider>import Class<? extends CredentialsProvider>.*import static Class<? extends CredentialsProvider>.*import Describable<CredentialsProvider>import Describable<CredentialsProvider>.*import static Describable<CredentialsProvider>.*import List<C>import List<C>.*import static List<C>.*import Collection<C>import Collection<C>.*import static Collection<C>.*import Iterable<C>import Iterable<C>.*import static Iterable<C>.*import Credentials[]import Credentials[].*import static Credentials[].*import C[]import C[].*import static C[].*import List<CredentialsDescriptor>import List<CredentialsDescriptor>.*import static List<CredentialsDescriptor>.*import Collection<CredentialsDescriptor>import Collection<CredentialsDescriptor>.*import static Collection<CredentialsDescriptor>.*import Iterable<CredentialsDescriptor>import Iterable<CredentialsDescriptor>.*import static Iterable<CredentialsDescriptor>.*import Descriptor<?>import Descriptor<?>.*import static Descriptor<?>.*import IdCredentialsimport IdCredentials.*import static IdCredentials.*import Class<C>import Class<C>.*import static Class<C>.*import DomainRequirementimport DomainRequirement.*import static DomainRequirement.*import List<DomainRequirement>import List<DomainRequirement>.*import static List<DomainRequirement>.*import Collection<DomainRequirement>import Collection<DomainRequirement>.*import static Collection<DomainRequirement>.*import Iterable<DomainRequirement>import Iterable<DomainRequirement>.*import static Iterable<DomainRequirement>.*import Nullableimport Nullable.*import static Nullable.*import CredentialsStoreimport CredentialsStore.*import static CredentialsStore.*import Set<CredentialsScope>import Set<CredentialsScope>.*import static Set<CredentialsScope>.*import Collection<CredentialsScope>import Collection<CredentialsScope>.*import static Collection<CredentialsScope>.*import Iterable<CredentialsScope>import Iterable<CredentialsScope>.*import static Iterable<CredentialsScope>.*import List<CredentialsProvider>import List<CredentialsProvider>.*import static List<CredentialsProvider>.*import Collection<CredentialsProvider>import Collection<CredentialsProvider>.*import static Collection<CredentialsProvider>.*import Iterable<CredentialsProvider>import Iterable<CredentialsProvider>.*import static Iterable<CredentialsProvider>.*import ExtensionList<CredentialsProvider>import ExtensionList<CredentialsProvider>.*import static ExtensionList<CredentialsProvider>.*import AbstractList<CredentialsProvider>import AbstractList<CredentialsProvider>.*import static AbstractList<CredentialsProvider>.*import AbstractCollection<CredentialsProvider>import AbstractCollection<CredentialsProvider>.*import static AbstractCollection<CredentialsProvider>.*import DomainRequirement[]import DomainRequirement[].*import static DomainRequirement[].*import Iterable<CredentialsStore>import Iterable<CredentialsStore>.*import static Iterable<CredentialsStore>.*import DescriptorExtensionList<Credentials,CredentialsDescriptor>import DescriptorExtensionList<Credentials,CredentialsDescriptor>.*import static DescriptorExtensionList<Credentials,CredentialsDescriptor>.*import ExtensionList<CredentialsDescriptor>import ExtensionList<CredentialsDescriptor>.*import static ExtensionList<CredentialsDescriptor>.*import AbstractList<CredentialsDescriptor>import AbstractList<CredentialsDescriptor>.*import static AbstractList<CredentialsDescriptor>.*import AbstractCollection<CredentialsDescriptor>import AbstractCollection<CredentialsDescriptor>.*import static AbstractCollection<CredentialsDescriptor>.*import Enum<CredentialsScope>import Enum<CredentialsScope>.*import static Enum<CredentialsScope>.*import Comparable<CredentialsScope>import Comparable<CredentialsScope>.*import static Comparable<CredentialsScope>.*import Class<CredentialsScope>import Class<CredentialsScope>.*import static Class<CredentialsScope>.*import CredentialsScope[]import CredentialsScope[].*import static CredentialsScope[].*import CredentialsStoreActionimport CredentialsStoreAction.*import static CredentialsStoreAction.*import Domainimport Domain.*import static Domain.*import List<Credentials>import List<Credentials>.*import static List<Credentials>.*import Collection<Credentials>import Collection<Credentials>.*import static Collection<Credentials>.*import Iterable<Credentials>import Iterable<Credentials>.*import static Iterable<Credentials>.*import List<Domain>import List<Domain>.*import static List<Domain>.*import Collection<Domain>import Collection<Domain>.*import static Collection<Domain>.*import Iterable<Domain>import Iterable<Domain>.*import static Iterable<Domain>.*import DescriptorImplimport DescriptorImpl.*import static DescriptorImpl.*import Descriptor<CredentialsWrapper>import Descriptor<CredentialsWrapper>.*import static Descriptor<CredentialsWrapper>.*import Class<CredentialsWrapper>import Class<CredentialsWrapper>.*import static Class<CredentialsWrapper>.*import ? extends CredentialsWrapperimport ? extends CredentialsWrapper.*import static ? extends CredentialsWrapper.*import Class<? extends CredentialsWrapper>import Class<? extends CredentialsWrapper>.*import static Class<? extends CredentialsWrapper>.*import YesNoMaybeimport YesNoMaybe.*import static YesNoMaybe.*import AbstractDescribableImpl<CredentialsWrapper>import AbstractDescribableImpl<CredentialsWrapper>.*import static AbstractDescribableImpl<CredentialsWrapper>.*import Describable<CredentialsWrapper>import Describable<CredentialsWrapper>.*import static Describable<CredentialsWrapper>.*import ModelObjectWithContextMenuimport ModelObjectWithContextMenu.*import static ModelObjectWithContextMenu.*import Sourceimport Source.*import static Source.*import WebMethodimport WebMethod.*import static WebMethod.*import Descriptor<DomainWrapper>import Descriptor<DomainWrapper>.*import static Descriptor<DomainWrapper>.*import Class<DomainWrapper>import Class<DomainWrapper>.*import static Class<DomainWrapper>.*import ? extends DomainWrapperimport ? extends DomainWrapper.*import static ? extends DomainWrapper.*import Class<? extends DomainWrapper>import Class<? extends DomainWrapper>.*import static Class<? extends DomainWrapper>.*import AbstractDescribableImpl<DomainWrapper>import AbstractDescribableImpl<DomainWrapper>.*import static AbstractDescribableImpl<DomainWrapper>.*import Describable<DomainWrapper>import Describable<DomainWrapper>.*import static Describable<DomainWrapper>.*import List<CredentialsWrapper>import List<CredentialsWrapper>.*import static List<CredentialsWrapper>.*import Collection<CredentialsWrapper>import Collection<CredentialsWrapper>.*import static Collection<CredentialsWrapper>.*import Iterable<CredentialsWrapper>import Iterable<CredentialsWrapper>.*import static Iterable<CredentialsWrapper>.*import Map<String,CredentialsWrapper>import Map<String,CredentialsWrapper>.*import static Map<String,CredentialsWrapper>.*import SuppressFBWarningsimport SuppressFBWarnings.*import static SuppressFBWarnings.*import DomainSpecificationimport DomainSpecification.*import static DomainSpecification.*import Descriptor<DomainSpecification>import Descriptor<DomainSpecification>.*import static Descriptor<DomainSpecification>.*import DescriptorExtensionList<DomainSpecification,Descriptor<DomainSpecification>>import DescriptorExtensionList<DomainSpecification,Descriptor<DomainSpecification>>.*import static DescriptorExtensionList<DomainSpecification,Descriptor<DomainSpecification>>.*import ExtensionList<Descriptor<DomainSpecification>>import ExtensionList<Descriptor<DomainSpecification>>.*import static ExtensionList<Descriptor<DomainSpecification>>.*import AbstractList<Descriptor<DomainSpecification>>import AbstractList<Descriptor<DomainSpecification>>.*import static AbstractList<Descriptor<DomainSpecification>>.*import AbstractCollection<Descriptor<DomainSpecification>>import AbstractCollection<Descriptor<DomainSpecification>>.*import static AbstractCollection<Descriptor<DomainSpecification>>.*import Collection<Descriptor<DomainSpecification>>import Collection<Descriptor<DomainSpecification>>.*import static Collection<Descriptor<DomainSpecification>>.*import Iterable<Descriptor<DomainSpecification>>import Iterable<Descriptor<DomainSpecification>>.*import static Iterable<Descriptor<DomainSpecification>>.*import List<Descriptor<DomainSpecification>>import List<Descriptor<DomainSpecification>>.*import static List<Descriptor<DomainSpecification>>.*import Map<String,DomainWrapper>import Map<String,DomainWrapper>.*import static Map<String,DomainWrapper>.*import NameWithimport NameWith.*import static NameWith.*import Documentedimport Documented.*import static Documented.*import Inheritedimport Inherited.*import static Inherited.*import Retentionimport Retention.*import static Retention.*import RetentionPolicyimport RetentionPolicy.*import static RetentionPolicy.*import Targetimport Target.*import static Target.*import ElementTypeimport ElementType.*import static ElementType.*import ElementType[]import ElementType[].*import static ElementType[].*import CredentialsNameProvider<? extends Credentials>import CredentialsNameProvider<? extends Credentials>.*import static CredentialsNameProvider<? extends Credentials>.*import ? extends CredentialsNameProvider<? extends Credentials>import ? extends CredentialsNameProvider<? extends Credentials>.*import static ? extends CredentialsNameProvider<? extends Credentials>.*import Class<? extends CredentialsNameProvider<? extends Credentials>>import Class<? extends CredentialsNameProvider<? extends Credentials>>.*import static Class<? extends CredentialsNameProvider<? extends Credentials>>.*import PasswordCredentialsimport PasswordCredentials.*import static PasswordCredentials.*import NameProviderimport NameProvider.*import static NameProvider.*import StandardCredentialsimport StandardCredentials.*import static StandardCredentials.*import CredentialsNameProvider<StandardCredentials>import CredentialsNameProvider<StandardCredentials>.*import static CredentialsNameProvider<StandardCredentials>.*import CredentialsNameProvider<StandardUsernameCredentials>import CredentialsNameProvider<StandardUsernameCredentials>.*import static CredentialsNameProvider<StandardUsernameCredentials>.*import UsernameCredentialsimport UsernameCredentials.*import static UsernameCredentials.*import CredentialsNameProvider<UsernameCredentials>import CredentialsNameProvider<UsernameCredentials>.*import static CredentialsNameProvider<UsernameCredentials>.*import CredentialsNameProvider<UsernamePasswordCredentials>import CredentialsNameProvider<UsernamePasswordCredentials>.*import static CredentialsNameProvider<UsernamePasswordCredentials>.*import List<DomainSpecification>import List<DomainSpecification>.*import static List<DomainSpecification>.*import Collection<DomainSpecification>import Collection<DomainSpecification>.*import static Collection<DomainSpecification>.*import Iterable<DomainSpecification>import Iterable<DomainSpecification>.*import static Iterable<DomainSpecification>.*import Enum<Result>import Enum<Result>.*import static Enum<Result>.*import Comparable<Result>import Comparable<Result>.*import static Comparable<Result>.*import Class<Result>import Class<Result>.*import static Class<Result>.*import Result[]import Result[].*import static Result[].*import AbstractDescribableImpl<DomainSpecification>import AbstractDescribableImpl<DomainSpecification>.*import static AbstractDescribableImpl<DomainSpecification>.*import Describable<DomainSpecification>import Describable<DomainSpecification>.*import static Describable<DomainSpecification>.*import BaseStandardCredentialsimport BaseStandardCredentials.*import static BaseStandardCredentials.*import AjaxControllerimport AjaxController.*import static AjaxController.*import HtmlPageimport HtmlPage.*import static HtmlPage.*import WebRequestimport WebRequest.*import static WebRequest.*import AlertHandlerimport AlertHandler.*import static AlertHandler.*import Pageimport Page.*import static Page.*import AppletConfirmHandlerimport AppletConfirmHandler.*import static AppletConfirmHandler.*import HtmlAppletimport HtmlApplet.*import static HtmlApplet.*import BrowserVersionimport BrowserVersion.*import static BrowserVersion.*import BrowserVersionFeaturesimport BrowserVersionFeatures.*import static BrowserVersionFeatures.*import PluginConfigurationimport PluginConfiguration.*import static PluginConfiguration.*import Set<PluginConfiguration>import Set<PluginConfiguration>.*import static Set<PluginConfiguration>.*import Collection<PluginConfiguration>import Collection<PluginConfiguration>.*import static Collection<PluginConfiguration>.*import Iterable<PluginConfiguration>import Iterable<PluginConfiguration>.*import static Iterable<PluginConfiguration>.*import BrowserVersionFeatures[]import BrowserVersionFeatures[].*import static BrowserVersionFeatures[].*import Enum<BrowserVersionFeatures>import Enum<BrowserVersionFeatures>.*import static Enum<BrowserVersionFeatures>.*import Comparable<BrowserVersionFeatures>import Comparable<BrowserVersionFeatures>.*import static Comparable<BrowserVersionFeatures>.*import Class<BrowserVersionFeatures>import Class<BrowserVersionFeatures>.*import static Class<BrowserVersionFeatures>.*import BrowserFeatureimport BrowserFeature.*import static BrowserFeature.*import WebBrowserimport WebBrowser.*import static WebBrowser.*import WebBrowser[]import WebBrowser[].*import static WebBrowser[].*import BrowserNameimport BrowserName.*import static BrowserName.*import CSSStyleSheetimport CSSStyleSheet.*import static CSSStyleSheet.*import WebResponseimport WebResponse.*import static WebResponse.*import ConfirmHandlerimport ConfirmHandler.*import static ConfirmHandler.*import CookieManagerimport CookieManager.*import static CookieManager.*import Cookieimport Cookie.*import static Cookie.*import CookieOriginimport CookieOrigin.*import static CookieOrigin.*import Set<Cookie>import Set<Cookie>.*import static Set<Cookie>.*import Collection<Cookie>import Collection<Cookie>.*import static Collection<Cookie>.*import Iterable<Cookie>import Iterable<Cookie>.*import static Iterable<Cookie>.*import DialogWindowimport DialogWindow.*import static DialogWindow.*import WebWindowImplimport WebWindowImpl.*import static WebWindowImpl.*import WebWindowimport WebWindow.*import static WebWindow.*import WebClientimport WebClient.*import static WebClient.*import DownloadedContentimport DownloadedContent.*import static DownloadedContent.*import ElementNotFoundExceptionimport ElementNotFoundException.*import static ElementNotFoundException.*import FailingHttpStatusCodeExceptionimport FailingHttpStatusCodeException.*import static FailingHttpStatusCodeException.*import FormEncodingTypeimport FormEncodingType.*import static FormEncodingType.*import Historyimport History.*import static History.*import HttpMethodimport HttpMethod.*import static HttpMethod.*import Enum<HttpMethod>import Enum<HttpMethod>.*import static Enum<HttpMethod>.*import Comparable<HttpMethod>import Comparable<HttpMethod>.*import static Comparable<HttpMethod>.*import Class<HttpMethod>import Class<HttpMethod>.*import static Class<HttpMethod>.*import HttpMethod[]import HttpMethod[].*import static HttpMethod[].*import IncorrectnessListenerimport IncorrectnessListener.*import static IncorrectnessListener.*import InteractivePageimport InteractivePage.*import static InteractivePage.*import SgmlPageimport SgmlPage.*import static SgmlPage.*import Scriptableimport Scriptable.*import static Scriptable.*import DomNodeimport DomNode.*import static DomNode.*import ScriptResultimport ScriptResult.*import static ScriptResult.*import Rangeimport Range.*import static Range.*import List<Range>import List<Range>.*import static List<Range>.*import Collection<Range>import Collection<Range>.*import static Collection<Range>.*import Iterable<Range>import Iterable<Range>.*import static Iterable<Range>.*import DomElementimport DomElement.*import static DomElement.*import OnbeforeunloadHandlerimport OnbeforeunloadHandler.*import static OnbeforeunloadHandler.*import PageCreatorimport PageCreator.*import static PageCreator.*import MimeTypeimport MimeType.*import static MimeType.*import Set<MimeType>import Set<MimeType>.*import static Set<MimeType>.*import Collection<MimeType>import Collection<MimeType>.*import static Collection<MimeType>.*import Iterable<MimeType>import Iterable<MimeType>.*import static Iterable<MimeType>.*import PromptHandlerimport PromptHandler.*import static PromptHandler.*import ProxyConfigimport ProxyConfig.*import static ProxyConfig.*import RefreshHandlerimport RefreshHandler.*import static RefreshHandler.*import ScriptExceptionimport ScriptException.*import static ScriptException.*import ScriptPreProcessorimport ScriptPreProcessor.*import static ScriptPreProcessor.*import HtmlElementimport HtmlElement.*import static HtmlElement.*import Commentimport Comment.*import static Comment.*import Textimport Text.*import static Text.*import CDATASectionimport CDATASection.*import static CDATASection.*import DomNodeListimport DomNodeList.*import static DomNodeList.*import DomNodeList<>import DomNodeList<>.*import static DomNodeList<>.*import NodeListimport NodeList.*import static NodeList.*import DomNodeList<DomElement>import DomNodeList<DomElement>.*import static DomNodeList<DomElement>.*import List<DomElement>import List<DomElement>.*import static List<DomElement>.*import Collection<DomElement>import Collection<DomElement>.*import static Collection<DomElement>.*import Iterable<DomElement>import Iterable<DomElement>.*import static Iterable<DomElement>.*import DomAttrimport DomAttr.*import static DomAttr.*import Elementimport Element.*import static Element.*import DocumentTypeimport DocumentType.*import static DocumentType.*import DomDocumentFragmentimport DomDocumentFragment.*import static DomDocumentFragment.*import StatusHandlerimport StatusHandler.*import static StatusHandler.*import Enum<Type>import Enum<Type>.*import static Enum<Type>.*import Comparable<Type>import Comparable<Type>.*import static Comparable<Type>.*import Class<Type>import Class<Type>.*import static Class<Type>.*import StorageHolderimport StorageHolder.*import static StorageHolder.*import TopLevelWindowimport TopLevelWindow.*import static TopLevelWindow.*import WebClientOptionsimport WebClientOptions.*import static WebClientOptions.*import AttachmentHandlerimport AttachmentHandler.*import static AttachmentHandler.*import WebConsoleimport WebConsole.*import static WebConsole.*import ErrorHandlerimport ErrorHandler.*import static ErrorHandler.*import HTMLParserListenerimport HTMLParserListener.*import static HTMLParserListener.*import MSXMLActiveXObjectFactoryimport MSXMLActiveXObjectFactory.*import static MSXMLActiveXObjectFactory.*import List<TopLevelWindow>import List<TopLevelWindow>.*import static List<TopLevelWindow>.*import Collection<TopLevelWindow>import Collection<TopLevelWindow>.*import static Collection<TopLevelWindow>.*import Iterable<TopLevelWindow>import Iterable<TopLevelWindow>.*import static Iterable<TopLevelWindow>.*import List<WebWindow>import List<WebWindow>.*import static List<WebWindow>.*import Collection<WebWindow>import Collection<WebWindow>.*import static Collection<WebWindow>.*import Iterable<WebWindow>import Iterable<WebWindow>.*import static Iterable<WebWindow>.*import MalformedURLExceptionimport MalformedURLException.*import static MalformedURLException.*import WebWindowNotFoundExceptionimport WebWindowNotFoundException.*import static WebWindowNotFoundException.*import WebWindowListenerimport WebWindowListener.*import static WebWindowListener.*import JavaScriptErrorListenerimport JavaScriptErrorListener.*import static JavaScriptErrorListener.*import JavaScriptEngineimport JavaScriptEngine.*import static JavaScriptEngine.*import WebConnectionimport WebConnection.*import static WebConnection.*import KeyStoreimport KeyStore.*import static KeyStore.*import char[]import char[].*import static char[].*import Formatterimport Formatter.*import static Formatter.*import NameValuePairimport NameValuePair.*import static NameValuePair.*import List<NameValuePair>import List<NameValuePair>.*import static List<NameValuePair>.*import Collection<NameValuePair>import Collection<NameValuePair>.*import static Collection<NameValuePair>.*import Iterable<NameValuePair>import Iterable<NameValuePair>.*import static Iterable<NameValuePair>.*import WebResponseDataimport WebResponseData.*import static WebResponseData.*import WebResponseListenerimport WebResponseListener.*import static WebResponseListener.*import JavaScriptJobManagerimport JavaScriptJobManager.*import static JavaScriptJobManager.*import WebWindowEventimport WebWindowEvent.*import static WebWindowEvent.*import EventObjectimport EventObject.*import static EventObject.*import FrameWindowimport FrameWindow.*import static FrameWindow.*import BaseFrameElementimport BaseFrameElement.*import static BaseFrameElement.*import Attrimport Attr.*import static Attr.*import Map<String,DomAttr>import Map<String,DomAttr>.*import static Map<String,DomAttr>.*import CharacterDataChangeEventimport CharacterDataChangeEvent.*import static CharacterDataChangeEvent.*import DomCharacterDataimport DomCharacterData.*import static DomCharacterData.*import CharacterDataChangeListenerimport CharacterDataChangeListener.*import static CharacterDataChangeListener.*import DisabledElementimport DisabledElement.*import static DisabledElement.*import DomNamespaceNodeimport DomNamespaceNode.*import static DomNamespaceNode.*import TypeInfoimport TypeInfo.*import static TypeInfo.*import DomChangeEventimport DomChangeEvent.*import static DomChangeEvent.*import DomChangeListenerimport DomChangeListener.*import static DomChangeListener.*import CharacterDataimport CharacterData.*import static CharacterData.*import DocumentFragmentimport DocumentFragment.*import static DocumentFragment.*import ElementTraversalimport ElementTraversal.*import static ElementTraversal.*import Eventimport Event.*import static Event.*import DomNodeList<HtmlElement>import DomNodeList<HtmlElement>.*import static DomNodeList<HtmlElement>.*import List<HtmlElement>import List<HtmlElement>.*import static List<HtmlElement>.*import Collection<HtmlElement>import Collection<HtmlElement>.*import static Collection<HtmlElement>.*import Iterable<HtmlElement>import Iterable<HtmlElement>.*import static Iterable<HtmlElement>.*import NamedNodeMapimport NamedNodeMap.*import static NamedNodeMap.*import Nimport N.*import static N.*import DomNodeList<DomNode>import DomNodeList<DomNode>.*import static DomNodeList<DomNode>.*import List<DomNode>import List<DomNode>.*import static List<DomNode>.*import Collection<DomNode>import Collection<DomNode>.*import static Collection<DomNode>.*import Iterable<DomNode>import Iterable<DomNode>.*import static Iterable<DomNode>.*import PrefixResolverimport PrefixResolver.*import static PrefixResolver.*import Ximport X.*import static X.*import DOMExceptionimport DOMException.*import static DOMException.*import ScriptableObjectimport ScriptableObject.*import static ScriptableObject.*import UserDataHandlerimport UserDataHandler.*import static UserDataHandler.*import List<Node>import List<Node>.*import static List<Node>.*import Collection<Node>import Collection<Node>.*import static Collection<Node>.*import Iterable<Node>import Iterable<Node>.*import static Iterable<Node>.*import DomNode[]import DomNode[].*import static DomNode[].*import DomProcessingInstructionimport DomProcessingInstruction.*import static DomProcessingInstruction.*import ProcessingInstructionimport ProcessingInstruction.*import static ProcessingInstruction.*import ElementFactoryimport ElementFactory.*import static ElementFactory.*import Attributesimport Attributes.*import static Attributes.*import FormFieldWithNameHistoryimport FormFieldWithNameHistory.*import static FormFieldWithNameHistory.*import HtmlUnitDOMBuilderimport HtmlUnitDOMBuilder.*import static HtmlUnitDOMBuilder.*import AbstractSAXParserimport AbstractSAXParser.*import static AbstractSAXParser.*import ContentHandlerimport ContentHandler.*import static ContentHandler.*import LexicalHandlerimport LexicalHandler.*import static LexicalHandler.*import HTMLTagBalancingListenerimport HTMLTagBalancingListener.*import static HTMLTagBalancingListener.*import HTMLParserimport HTMLParser.*import static HTMLParser.*import XMLInputSourceimport XMLInputSource.*import static XMLInputSource.*import XNIExceptionimport XNIException.*import static XNIException.*import QNameimport QName.*import static QName.*import XMLAttributesimport XMLAttributes.*import static XMLAttributes.*import Augmentationsimport Augmentations.*import static Augmentations.*import SAXExceptionimport SAXException.*import static SAXException.*import Locatorimport Locator.*import static Locator.*import XHtmlPageimport XHtmlPage.*import static XHtmlPage.*import HtmlAbbreviatedimport HtmlAbbreviated.*import static HtmlAbbreviated.*import DisplayStyleimport DisplayStyle.*import static DisplayStyle.*import HtmlAcronymimport HtmlAcronym.*import static HtmlAcronym.*import HtmlAddressimport HtmlAddress.*import static HtmlAddress.*import HtmlAnchorimport HtmlAnchor.*import static HtmlAnchor.*import List<URL>import List<URL>.*import static List<URL>.*import Collection<URL>import Collection<URL>.*import static Collection<URL>.*import Iterable<URL>import Iterable<URL>.*import static Iterable<URL>.*import Appletimport Applet.*import static Applet.*import HtmlArticleimport HtmlArticle.*import static HtmlArticle.*import HtmlAsideimport HtmlAside.*import static HtmlAside.*import HtmlAttributeChangeEventimport HtmlAttributeChangeEvent.*import static HtmlAttributeChangeEvent.*import HtmlAttributeChangeListenerimport HtmlAttributeChangeListener.*import static HtmlAttributeChangeListener.*import HtmlBaseFontimport HtmlBaseFont.*import static HtmlBaseFont.*import HtmlBidirectionalIsolationimport HtmlBidirectionalIsolation.*import static HtmlBidirectionalIsolation.*import HtmlBidirectionalOverrideimport HtmlBidirectionalOverride.*import static HtmlBidirectionalOverride.*import HtmlBigimport HtmlBig.*import static HtmlBig.*import HtmlBoldimport HtmlBold.*import static HtmlBold.*import HtmlButtonimport HtmlButton.*import static HtmlButton.*import SubmittableElementimport SubmittableElement.*import static SubmittableElement.*import NameValuePair[]import NameValuePair[].*import static NameValuePair[].*import HtmlCenterimport HtmlCenter.*import static HtmlCenter.*import HtmlCitationimport HtmlCitation.*import static HtmlCitation.*import HtmlCodeimport HtmlCode.*import static HtmlCode.*import HtmlCommandimport HtmlCommand.*import static HtmlCommand.*import HtmlDefinitionimport HtmlDefinition.*import static HtmlDefinition.*import HtmlDefinitionDescriptionimport HtmlDefinitionDescription.*import static HtmlDefinitionDescription.*import HtmlDefinitionTermimport HtmlDefinitionTerm.*import static HtmlDefinitionTerm.*import Enum<DisplayStyle>import Enum<DisplayStyle>.*import static Enum<DisplayStyle>.*import Comparable<DisplayStyle>import Comparable<DisplayStyle>.*import static Comparable<DisplayStyle>.*import Class<DisplayStyle>import Class<DisplayStyle>.*import static Class<DisplayStyle>.*import DisplayStyle[]import DisplayStyle[].*import static DisplayStyle[].*import HtmlFormimport HtmlForm.*import static HtmlForm.*import Keyboardimport Keyboard.*import static Keyboard.*import Shortimport Short.*import static Short.*import HtmlEmphasisimport HtmlEmphasis.*import static HtmlEmphasis.*import HtmlExampleimport HtmlExample.*import static HtmlExample.*import HtmlFigureimport HtmlFigure.*import static HtmlFigure.*import HtmlFigureCaptionimport HtmlFigureCaption.*import static HtmlFigureCaption.*import HtmlFooterimport HtmlFooter.*import static HtmlFooter.*import HtmlInputimport HtmlInput.*import static HtmlInput.*import List<HtmlInput>import List<HtmlInput>.*import static List<HtmlInput>.*import Collection<HtmlInput>import Collection<HtmlInput>.*import static Collection<HtmlInput>.*import Iterable<HtmlInput>import Iterable<HtmlInput>.*import static Iterable<HtmlInput>.*import Iimport I.*import static I.*import HtmlRadioButtonInputimport HtmlRadioButtonInput.*import static HtmlRadioButtonInput.*import List<HtmlRadioButtonInput>import List<HtmlRadioButtonInput>.*import static List<HtmlRadioButtonInput>.*import Collection<HtmlRadioButtonInput>import Collection<HtmlRadioButtonInput>.*import static Collection<HtmlRadioButtonInput>.*import Iterable<HtmlRadioButtonInput>import Iterable<HtmlRadioButtonInput>.*import static Iterable<HtmlRadioButtonInput>.*import HtmlTextAreaimport HtmlTextArea.*import static HtmlTextArea.*import List<HtmlTextArea>import List<HtmlTextArea>.*import static List<HtmlTextArea>.*import Collection<HtmlTextArea>import Collection<HtmlTextArea>.*import static Collection<HtmlTextArea>.*import Iterable<HtmlTextArea>import Iterable<HtmlTextArea>.*import static Iterable<HtmlTextArea>.*import List<HtmlButton>import List<HtmlButton>.*import static List<HtmlButton>.*import Collection<HtmlButton>import Collection<HtmlButton>.*import static Collection<HtmlButton>.*import Iterable<HtmlButton>import Iterable<HtmlButton>.*import static Iterable<HtmlButton>.*import HtmlSelectimport HtmlSelect.*import static HtmlSelect.*import List<HtmlSelect>import List<HtmlSelect>.*import static List<HtmlSelect>.*import Collection<HtmlSelect>import Collection<HtmlSelect>.*import static Collection<HtmlSelect>.*import Iterable<HtmlSelect>import Iterable<HtmlSelect>.*import static Iterable<HtmlSelect>.*import Collection<SubmittableElement>import Collection<SubmittableElement>.*import static Collection<SubmittableElement>.*import Iterable<SubmittableElement>import Iterable<SubmittableElement>.*import static Iterable<SubmittableElement>.*import HtmlHeaderimport HtmlHeader.*import static HtmlHeader.*import JsxSetterimport JsxSetter.*import static JsxSetter.*import JsxGetterimport JsxGetter.*import static JsxGetter.*import HtmlItalicimport HtmlItalic.*import static HtmlItalic.*import HtmlKeyboardimport HtmlKeyboard.*import static HtmlKeyboard.*import HtmlLayerimport HtmlLayer.*import static HtmlLayer.*import HtmlLinkimport HtmlLink.*import static HtmlLink.*import HtmlListingimport HtmlListing.*import static HtmlListing.*import HtmlMainimport HtmlMain.*import static HtmlMain.*import HtmlMarkimport HtmlMark.*import static HtmlMark.*import HtmlMetaimport HtmlMeta.*import static HtmlMeta.*import HtmlNavimport HtmlNav.*import static HtmlNav.*import HtmlNoBreakimport HtmlNoBreak.*import static HtmlNoBreak.*import HtmlNoEmbedimport HtmlNoEmbed.*import static HtmlNoEmbed.*import HtmlNoFramesimport HtmlNoFrames.*import static HtmlNoFrames.*import HtmlNoLayerimport HtmlNoLayer.*import static HtmlNoLayer.*import HtmlNoScriptimport HtmlNoScript.*import static HtmlNoScript.*import HtmlOptionimport HtmlOption.*import static HtmlOption.*import JavaScriptLoadResultimport JavaScriptLoadResult.*import static JavaScriptLoadResult.*import Enum<JavaScriptLoadResult>import Enum<JavaScriptLoadResult>.*import static Enum<JavaScriptLoadResult>.*import Comparable<JavaScriptLoadResult>import Comparable<JavaScriptLoadResult>.*import static Comparable<JavaScriptLoadResult>.*import Class<JavaScriptLoadResult>import Class<JavaScriptLoadResult>.*import static Class<JavaScriptLoadResult>.*import JavaScriptLoadResult[]import JavaScriptLoadResult[].*import static JavaScriptLoadResult[].*import List<HtmlMeta>import List<HtmlMeta>.*import static List<HtmlMeta>.*import Collection<HtmlMeta>import Collection<HtmlMeta>.*import static Collection<HtmlMeta>.*import Iterable<HtmlMeta>import Iterable<HtmlMeta>.*import static Iterable<HtmlMeta>.*import List<FrameWindow>import List<FrameWindow>.*import static List<FrameWindow>.*import Collection<FrameWindow>import Collection<FrameWindow>.*import static Collection<FrameWindow>.*import Iterable<FrameWindow>import Iterable<FrameWindow>.*import static Iterable<FrameWindow>.*import List<HtmlForm>import List<HtmlForm>.*import static List<HtmlForm>.*import Collection<HtmlForm>import Collection<HtmlForm>.*import static Collection<HtmlForm>.*import Iterable<HtmlForm>import Iterable<HtmlForm>.*import static Iterable<HtmlForm>.*import List<HtmlAnchor>import List<HtmlAnchor>.*import static List<HtmlAnchor>.*import Collection<HtmlAnchor>import Collection<HtmlAnchor>.*import static Collection<HtmlAnchor>.*import Iterable<HtmlAnchor>import Iterable<HtmlAnchor>.*import static Iterable<HtmlAnchor>.*import EntityReferenceimport EntityReference.*import static EntityReference.*import DOMImplementationimport DOMImplementation.*import static DOMImplementation.*import DOMConfigurationimport DOMConfiguration.*import static DOMConfiguration.*import PostponedActionimport PostponedAction.*import static PostponedAction.*import HtmlPlainTextimport HtmlPlainText.*import static HtmlPlainText.*import HtmlRpimport HtmlRp.*import static HtmlRp.*import HtmlRtimport HtmlRt.*import static HtmlRt.*import HtmlRubyimport HtmlRuby.*import static HtmlRuby.*import HtmlSimport HtmlS.*import static HtmlS.*import HtmlSampleimport HtmlSample.*import static HtmlSample.*import HtmlSectionimport HtmlSection.*import static HtmlSection.*import List<HtmlOption>import List<HtmlOption>.*import static List<HtmlOption>.*import Collection<HtmlOption>import Collection<HtmlOption>.*import static Collection<HtmlOption>.*import Iterable<HtmlOption>import Iterable<HtmlOption>.*import static Iterable<HtmlOption>.*import HtmlSmallimport HtmlSmall.*import static HtmlSmall.*import HtmlStrikeimport HtmlStrike.*import static HtmlStrike.*import HtmlStrongimport HtmlStrong.*import static HtmlStrong.*import HtmlSubscriptimport HtmlSubscript.*import static HtmlSubscript.*import HtmlSummaryimport HtmlSummary.*import static HtmlSummary.*import HtmlSuperscriptimport HtmlSuperscript.*import static HtmlSuperscript.*import HtmlTeletypeimport HtmlTeletype.*import static HtmlTeletype.*import SelectableTextInputimport SelectableTextInput.*import static SelectableTextInput.*import HtmlUnderlinedimport HtmlUnderlined.*import static HtmlUnderlined.*import HtmlVariableimport HtmlVariable.*import static HtmlVariable.*import HtmlWordBreakimport HtmlWordBreak.*import static HtmlWordBreak.*import List<Object[]>import List<Object[]>.*import static List<Object[]>.*import Collection<Object[]>import Collection<Object[]>.*import static Collection<Object[]>.*import Iterable<Object[]>import Iterable<Object[]>.*import static Iterable<Object[]>.*import SimpleRangeimport SimpleRange.*import static SimpleRange.*import RangeExceptionimport RangeException.*import static RangeException.*import HtmlUnitContextFactoryimport HtmlUnitContextFactory.*import static HtmlUnitContextFactory.*import ContextFactoryimport ContextFactory.*import static ContextFactory.*import Contextimport Context.*import static Context.*import Debuggerimport Debugger.*import static Debugger.*import JavaScriptConfigurationimport JavaScriptConfiguration.*import static JavaScriptConfiguration.*import SimpleScriptableimport SimpleScriptable.*import static SimpleScriptable.*import ? extends SimpleScriptableimport ? extends SimpleScriptable.*import static ? extends SimpleScriptable.*import Class<? extends SimpleScriptable>import Class<? extends SimpleScriptable>.*import static Class<? extends SimpleScriptable>.*import Scriptimport Script.*import static Script.*import ClassConfigurationimport ClassConfiguration.*import static ClassConfiguration.*import JavaScriptExecutorimport JavaScriptExecutor.*import static JavaScriptExecutor.*import ScriptableWithFallbackGetterimport ScriptableWithFallbackGetter.*import static ScriptableWithFallbackGetter.*import JsxClassesimport JsxClasses.*import static JsxClasses.*import JsxClassimport JsxClass.*import static JsxClass.*import JsxClass[]import JsxClass[].*import static JsxClass[].*import JsxFunctionimport JsxFunction.*import static JsxFunction.*import JsxConstructorimport JsxConstructor.*import static JsxConstructor.*import Windowimport Window.*import static Window.*import Transformerimport Transformer.*import static Transformer.*import SimpleScriptableProxyimport SimpleScriptableProxy.*import static SimpleScriptableProxy.*import Delegatorimport Delegator.*import static Delegator.*import Runnableimport Runnable.*import static Runnable.*import JavaScriptJobimport JavaScriptJob.*import static JavaScriptJob.*import Comparable<JavaScriptJob>import Comparable<JavaScriptJob>.*import static Comparable<JavaScriptJob>.*import JavaScriptJobFilterimport JavaScriptJobFilter.*import static JavaScriptJobFilter.*import AbstractJavaScriptConfigurationimport AbstractJavaScriptConfiguration.*import static AbstractJavaScriptConfiguration.*import Map<Class<?>,Class<? extends SimpleScriptable>>import Map<Class<?>,Class<? extends SimpleScriptable>>.*import static Map<Class<?>,Class<? extends SimpleScriptable>>.*import Iterable<ClassConfiguration>import Iterable<ClassConfiguration>.*import static Iterable<ClassConfiguration>.*import Class<? extends SimpleScriptable>[]import Class<? extends SimpleScriptable>[].*import static Class<? extends SimpleScriptable>[].*import Enum<BrowserName>import Enum<BrowserName>.*import static Enum<BrowserName>.*import Comparable<BrowserName>import Comparable<BrowserName>.*import static Comparable<BrowserName>.*import Class<BrowserName>import Class<BrowserName>.*import static Class<BrowserName>.*import BrowserName[]import BrowserName[].*import static BrowserName[].*import CanSetReadOnlyimport CanSetReadOnly.*import static CanSetReadOnly.*import CanSetReadOnlyStatusimport CanSetReadOnlyStatus.*import static CanSetReadOnlyStatus.*import Enum<CanSetReadOnlyStatus>import Enum<CanSetReadOnlyStatus>.*import static Enum<CanSetReadOnlyStatus>.*import Comparable<CanSetReadOnlyStatus>import Comparable<CanSetReadOnlyStatus>.*import static Comparable<CanSetReadOnlyStatus>.*import Class<CanSetReadOnlyStatus>import Class<CanSetReadOnlyStatus>.*import static Class<CanSetReadOnlyStatus>.*import CanSetReadOnlyStatus[]import CanSetReadOnlyStatus[].*import static CanSetReadOnlyStatus[].*import PropertyInfoimport PropertyInfo.*import static PropertyInfo.*import Memberimport Member.*import static Member.*import Entry<String,Method>import Entry<String,Method>.*import static Entry<String,Method>.*import Set<Entry<String,Method>>import Set<Entry<String,Method>>.*import static Set<Entry<String,Method>>.*import Collection<Entry<String,Method>>import Collection<Entry<String,Method>>.*import static Collection<Entry<String,Method>>.*import Iterable<Entry<String,Method>>import Iterable<Entry<String,Method>>.*import static Iterable<Entry<String,Method>>.*import Entry<String,PropertyInfo>import Entry<String,PropertyInfo>.*import static Entry<String,PropertyInfo>.*import Set<Entry<String,PropertyInfo>>import Set<Entry<String,PropertyInfo>>.*import static Set<Entry<String,PropertyInfo>>.*import Collection<Entry<String,PropertyInfo>>import Collection<Entry<String,PropertyInfo>>.*import static Collection<Entry<String,PropertyInfo>>.*import Iterable<Entry<String,PropertyInfo>>import Iterable<Entry<String,PropertyInfo>>.*import static Iterable<Entry<String,PropertyInfo>>.*import JsxConstantimport JsxConstant.*import static JsxConstant.*import ApplicationCacheimport ApplicationCache.*import static ApplicationCache.*import EventTargetimport EventTarget.*import static EventTarget.*import ClientRectimport ClientRect.*import static ClientRect.*import ClipboardDataimport ClipboardData.*import static ClipboardData.*import EventNodeimport EventNode.*import static EventNode.*import ComputedCSSStyleDeclarationimport ComputedCSSStyleDeclaration.*import static ComputedCSSStyleDeclaration.*import CSSStyleDeclarationimport CSSStyleDeclaration.*import static CSSStyleDeclaration.*import DOMTokenListimport DOMTokenList.*import static DOMTokenList.*import HTMLCollectionimport HTMLCollection.*import static HTMLCollection.*import Externalimport External.*import static External.*import Locationimport Location.*import static Location.*import Navigatorimport Navigator.*import static Navigator.*import Geolocationimport Geolocation.*import static Geolocation.*import Netscapeimport Netscape.*import static Netscape.*import Popupimport Popup.*import static Popup.*import Screenimport Screen.*import static Screen.*import Storageimport Storage.*import static Storage.*import SpeechSynthesisimport SpeechSynthesis.*import static SpeechSynthesis.*import MediaQueryListimport MediaQueryList.*import static MediaQueryList.*import StyleMediaimport StyleMedia.*import static StyleMedia.*import Performanceimport Performance.*import static Performance.*import Selectionimport Selection.*import static Selection.*import CSS2Propertiesimport CSS2Properties.*import static CSS2Properties.*import WindowProxyimport WindowProxy.*import static WindowProxy.*import DocumentProxyimport DocumentProxy.*import static DocumentProxy.*import Map<Class<? extends SimpleScriptable>,Scriptable>import Map<Class<? extends SimpleScriptable>,Scriptable>.*import static Map<Class<? extends SimpleScriptable>,Scriptable>.*import Map<String,Scriptable>import Map<String,Scriptable>.*import static Map<String,Scriptable>.*import SimpleScriptableProxy<Window>import SimpleScriptableProxy<Window>.*import static SimpleScriptableProxy<Window>.*import CSSRuleListimport CSSRuleList.*import static CSSRuleList.*import CssValueimport CssValue.*import static CssValue.*import StyleElementimport StyleElement.*import static StyleElement.*import Comparable<StyleElement>import Comparable<StyleElement>.*import static Comparable<StyleElement>.*import SelectorSpecificityimport SelectorSpecificity.*import static SelectorSpecificity.*import CSSValueimport CSSValue.*import static CSSValue.*import Definitionimport Definition.*import static Definition.*import StyleSheetimport StyleSheet.*import static StyleSheet.*import SelectorListimport SelectorList.*import static SelectorList.*import CSSExceptionimport CSSException.*import static CSSException.*import MediaListimport MediaList.*import static MediaList.*import HTMLElementimport HTMLElement.*import static HTMLElement.*import SACMediaListimport SACMediaList.*import static SACMediaList.*import InputSourceimport InputSource.*import static InputSource.*import Conditionimport Condition.*import static Condition.*import Selectorimport Selector.*import static Selector.*import Comparable<SelectorSpecificity>import Comparable<SelectorSpecificity>.*import static Comparable<SelectorSpecificity>.*import Enum<Definition>import Enum<Definition>.*import static Enum<Definition>.*import Comparable<Definition>import Comparable<Definition>.*import static Comparable<Definition>.*import Class<Definition>import Class<Definition>.*import static Class<Definition>.*import StyleAttributesimport StyleAttributes.*import static StyleAttributes.*import Definition[]import Definition[].*import static Definition[].*import List<Definition>import List<Definition>.*import static List<Definition>.*import Collection<Definition>import Collection<Definition>.*import static Collection<Definition>.*import Iterable<Definition>import Iterable<Definition>.*import static Iterable<Definition>.*import StyleSheetListimport StyleSheetList.*import static StyleSheetList.*import HTMLDocumentimport HTMLDocument.*import static HTMLDocument.*import EffectOnCacheimport EffectOnCache.*import static EffectOnCache.*import Enum<EffectOnCache>import Enum<EffectOnCache>.*import static Enum<EffectOnCache>.*import Comparable<EffectOnCache>import Comparable<EffectOnCache>.*import static Comparable<EffectOnCache>.*import Class<EffectOnCache>import Class<EffectOnCache>.*import static Class<EffectOnCache>.*import EffectOnCache[]import EffectOnCache[].*import static EffectOnCache[].*import List<Object>import List<Object>.*import static List<Object>.*import XMLDocumentimport XMLDocument.*import static XMLDocument.*import DOMStringMapimport DOMStringMap.*import static DOMStringMap.*import XPathResultimport XPathResult.*import static XPathResult.*import XPathNSResolverimport XPathNSResolver.*import static XPathNSResolver.*import RhinoExceptionimport RhinoException.*import static RhinoException.*import NodeIteratorimport NodeIterator.*import static NodeIterator.*import TextRangeimport TextRange.*import static TextRange.*import StaticNodeListimport StaticNodeList.*import static StaticNodeList.*import List<? extends Object>import List<? extends Object>.*import static List<? extends Object>.*import Collection<? extends Object>import Collection<? extends Object>.*import static Collection<? extends Object>.*import Iterable<? extends Object>import Iterable<? extends Object>.*import static Iterable<? extends Object>.*import EventListenersContainerimport EventListenersContainer.*import static EventListenersContainer.*import MouseEventimport MouseEvent.*import static MouseEvent.*import UIEventimport UIEvent.*import static UIEvent.*import SimpleScriptableProxy<Document>import SimpleScriptableProxy<Document>.*import static SimpleScriptableProxy<Document>.*import AttributesImplimport AttributesImpl.*import static AttributesImpl.*import PerformanceNavigationimport PerformanceNavigation.*import static PerformanceNavigation.*import List<Cookie>import List<Cookie>.*import static List<Cookie>.*import Cookie[]import Cookie[].*import static Cookie[].*import ClientCookieimport ClientCookie.*import static ClientCookie.*import WebResponseWrapperimport WebResponseWrapper.*import static WebResponseWrapper.*import XmlPageimport XmlPage.*import static XmlPage.*import GwtIncompatibleimport GwtIncompatible.*import static GwtIncompatible.*import VisibleForTestingimport VisibleForTesting.*import static VisibleForTesting.*import Wrapperimport Wrapper.*import static Wrapper.*import Predicate<>import Predicate<>.*import static Predicate<>.*import Predicate<T>import Predicate<T>.*import static Predicate<T>.*import Simport S.*import static S.*import Iterable<S>import Iterable<S>.*import static Iterable<S>.*import Equivalence<Iterable<S>>import Equivalence<Iterable<S>>.*import static Equivalence<Iterable<S>>.*import Wrapper<>import Wrapper<>.*import static Wrapper<>.*import Wrapper<S>import Wrapper<S>.*import static Wrapper<S>.*import Equivalence<F>import Equivalence<F>.*import static Equivalence<F>.*import Function<F,? extends T>import Function<F,? extends T>.*import static Function<F,? extends T>.*import Stopwatchimport Stopwatch.*import static Stopwatch.*import List<Throwable>import List<Throwable>.*import static List<Throwable>.*import Collection<Throwable>import Collection<Throwable>.*import static Collection<Throwable>.*import Iterable<Throwable>import Iterable<Throwable>.*import static Iterable<Throwable>.*import X1import X1.*import static X1.*import X2import X2.*import static X2.*import Class<X1>import Class<X1>.*import static Class<X1>.*import Class<X2>import Class<X2>.*import static Class<X2>.*import Class<X>import Class<X>.*import static Class<X>.*import AbstractCacheimport AbstractCache.*import static AbstractCache.*import AbstractCache<>import AbstractCache<>.*import static AbstractCache<>.*import Cache<K,V>import Cache<K,V>.*import static Cache<K,V>.*import CheckReturnValueimport CheckReturnValue.*import static CheckReturnValue.*import EntryFactoryimport EntryFactory.*import static EntryFactory.*import Enum<EntryFactory>import Enum<EntryFactory>.*import static Enum<EntryFactory>.*import Comparable<EntryFactory>import Comparable<EntryFactory>.*import static Comparable<EntryFactory>.*import Class<EntryFactory>import Class<EntryFactory>.*import static Class<EntryFactory>.*import LocalCacheimport LocalCache.*import static LocalCache.*import LocalCache<>import LocalCache<>.*import static LocalCache<>.*import ReferenceEntryimport ReferenceEntry.*import static ReferenceEntry.*import ReferenceEntry<>import ReferenceEntry<>.*import static ReferenceEntry<>.*import ReferenceEntry<K,V>import ReferenceEntry<K,V>.*import static ReferenceEntry<K,V>.*import GuardedByimport GuardedBy.*import static GuardedBy.*import Segmentimport Segment.*import static Segment.*import Segment<>import Segment<>.*import static Segment<>.*import ReentrantLockimport ReentrantLock.*import static ReentrantLock.*import Segment<K,V>import Segment<K,V>.*import static Segment<K,V>.*import EntryFactory[]import EntryFactory[].*import static EntryFactory[].*import LoadingValueReferenceimport LoadingValueReference.*import static LoadingValueReference.*import ValueReferenceimport ValueReference.*import static ValueReference.*import ValueReference<K,V>import ValueReference<K,V>.*import static ValueReference<K,V>.*import ReferenceQueueimport ReferenceQueue.*import static ReferenceQueue.*import ReferenceQueue<V>import ReferenceQueue<V>.*import static ReferenceQueue<V>.*import ValueReference<>import ValueReference<>.*import static ValueReference<>.*import CacheLoader<? super K,V>import CacheLoader<? super K,V>.*import static CacheLoader<? super K,V>.*import SettableFutureimport SettableFuture.*import static SettableFuture.*import SettableFuture<V>import SettableFuture<V>.*import static SettableFuture<V>.*import AbstractFutureimport AbstractFuture.*import static AbstractFuture.*import AbstractFuture<V>import AbstractFuture<V>.*import static AbstractFuture<V>.*import RemovalCauseimport RemovalCause.*import static RemovalCause.*import LoadingValueReference<K,V>import LoadingValueReference<K,V>.*import static LoadingValueReference<K,V>.*import LoadingValueReference<>import LoadingValueReference<>.*import static LoadingValueReference<>.*import AtomicReferenceArrayimport AtomicReferenceArray.*import static AtomicReferenceArray.*import AtomicReferenceArray<ReferenceEntry<K,V>>import AtomicReferenceArray<ReferenceEntry<K,V>>.*import static AtomicReferenceArray<ReferenceEntry<K,V>>.*import AtomicReferenceArray<>import AtomicReferenceArray<>.*import static AtomicReferenceArray<>.*import LocalCache<K,V>import LocalCache<K,V>.*import static LocalCache<K,V>.*import AbstractMap<K,V>import AbstractMap<K,V>.*import static AbstractMap<K,V>.*import Queueimport Queue.*import static Queue.*import Queue<ReferenceEntry<K,V>>import Queue<ReferenceEntry<K,V>>.*import static Queue<ReferenceEntry<K,V>>.*import Collection<ReferenceEntry<K,V>>import Collection<ReferenceEntry<K,V>>.*import static Collection<ReferenceEntry<K,V>>.*import Iterable<ReferenceEntry<K,V>>import Iterable<ReferenceEntry<K,V>>.*import static Iterable<ReferenceEntry<K,V>>.*import AtomicIntegerimport AtomicInteger.*import static AtomicInteger.*import ReferenceQueue<K>import ReferenceQueue<K>.*import static ReferenceQueue<K>.*import Enum<Strength>import Enum<Strength>.*import static Enum<Strength>.*import Comparable<Strength>import Comparable<Strength>.*import static Comparable<Strength>.*import Class<Strength>import Class<Strength>.*import static Class<Strength>.*import Strength[]import Strength[].*import static Strength[].*import Set<? extends K>import Set<? extends K>.*import static Set<? extends K>.*import Collection<? extends K>import Collection<? extends K>.*import static Collection<? extends K>.*import Segment[]import Segment[].*import static Segment[].*import Segment<>[]import Segment<>[].*import static Segment<>[].*import Segment<K,V>[]import Segment<K,V>[].*import static Segment<K,V>[].*import Queue<>import Queue<>.*import static Queue<>.*import Queue<E>import Queue<E>.*import static Queue<E>.*import CacheBuilder<? super K,? super V>import CacheBuilder<? super K,? super V>.*import static CacheBuilder<? super K,? super V>.*import Queue<? extends Object>import Queue<? extends Object>.*import static Queue<? extends Object>.*import ValueReference<Object,Object>import ValueReference<Object,Object>.*import static ValueReference<Object,Object>.*import RemovalListener<K,V>import RemovalListener<K,V>.*import static RemovalListener<K,V>.*import RemovalNotificationimport RemovalNotification.*import static RemovalNotification.*import RemovalNotification<K,V>import RemovalNotification<K,V>.*import static RemovalNotification<K,V>.*import Queue<RemovalNotification<K,V>>import Queue<RemovalNotification<K,V>>.*import static Queue<RemovalNotification<K,V>>.*import Collection<RemovalNotification<K,V>>import Collection<RemovalNotification<K,V>>.*import static Collection<RemovalNotification<K,V>>.*import Iterable<RemovalNotification<K,V>>import Iterable<RemovalNotification<K,V>>.*import static Iterable<RemovalNotification<K,V>>.*import Weigher<K,V>import Weigher<K,V>.*import static Weigher<K,V>.*import ListeningExecutorServiceimport ListeningExecutorService.*import static ListeningExecutorService.*import Enum<RemovalCause>import Enum<RemovalCause>.*import static Enum<RemovalCause>.*import Comparable<RemovalCause>import Comparable<RemovalCause>.*import static Comparable<RemovalCause>.*import Class<RemovalCause>import Class<RemovalCause>.*import static Class<RemovalCause>.*import RemovalCause[]import RemovalCause[].*import static RemovalCause[].*import ImmutableCollectionimport ImmutableCollection.*import static ImmutableCollection.*import ImmutableCollection<>import ImmutableCollection<>.*import static ImmutableCollection<>.*import ImmutableCollection<E>import ImmutableCollection<E>.*import static ImmutableCollection<E>.*import Iterator<? extends E>import Iterator<? extends E>.*import static Iterator<? extends E>.*import Builder<>import Builder<>.*import static Builder<>.*import E[]import E[].*import static E[].*import ImmutableListimport ImmutableList.*import static ImmutableList.*import ImmutableList<>import ImmutableList<>.*import static ImmutableList<>.*import ImmutableList<E>import ImmutableList<E>.*import static ImmutableList<E>.*import UnmodifiableIteratorimport UnmodifiableIterator.*import static UnmodifiableIterator.*import UnmodifiableIterator<>import UnmodifiableIterator<>.*import static UnmodifiableIterator<>.*import UnmodifiableIterator<E>import UnmodifiableIterator<E>.*import static UnmodifiableIterator<E>.*import ImmutableCollection<Object>import ImmutableCollection<Object>.*import static ImmutableCollection<Object>.*import Builder<E>import Builder<E>.*import static Builder<E>.*import UnmodifiableListIteratorimport UnmodifiableListIterator.*import static UnmodifiableListIterator.*import UnmodifiableListIterator<>import UnmodifiableListIterator<>.*import static UnmodifiableListIterator<>.*import UnmodifiableListIterator<E>import UnmodifiableListIterator<E>.*import static UnmodifiableListIterator<E>.*import Entry<? extends K,? extends V>import Entry<? extends K,? extends V>.*import static Entry<? extends K,? extends V>.*import ArrayList<Entry<K,V>>import ArrayList<Entry<K,V>>.*import static ArrayList<Entry<K,V>>.*import AbstractList<Entry<K,V>>import AbstractList<Entry<K,V>>.*import static AbstractList<Entry<K,V>>.*import AbstractCollection<Entry<K,V>>import AbstractCollection<Entry<K,V>>.*import static AbstractCollection<Entry<K,V>>.*import List<Entry<K,V>>import List<Entry<K,V>>.*import static List<Entry<K,V>>.*import ImmutableCollection<V>import ImmutableCollection<V>.*import static ImmutableCollection<V>.*import ImmutableSetimport ImmutableSet.*import static ImmutableSet.*import ImmutableSet<>import ImmutableSet<>.*import static ImmutableSet<>.*import ImmutableSet<K>import ImmutableSet<K>.*import static ImmutableSet<K>.*import ImmutableCollection<K>import ImmutableCollection<K>.*import static ImmutableCollection<K>.*import ImmutableSet<Entry<K,V>>import ImmutableSet<Entry<K,V>>.*import static ImmutableSet<Entry<K,V>>.*import ImmutableCollection<Entry<K,V>>import ImmutableCollection<Entry<K,V>>.*import static ImmutableCollection<Entry<K,V>>.*import Builder<K,V>import Builder<K,V>.*import static Builder<K,V>.*import ImmutableSet<E>import ImmutableSet<E>.*import static ImmutableSet<E>.*import Set<E>import Set<E>.*import static Set<E>.*import ArrayList<E>import ArrayList<E>.*import static ArrayList<E>.*import AbstractList<E>import AbstractList<E>.*import static AbstractList<E>.*import AbstractCollection<E>import AbstractCollection<E>.*import static AbstractCollection<E>.*import ExecutorServiceimport ExecutorService.*import static ExecutorService.*import Future<T>import Future<T>.*import static Future<T>.*import List<Future<T>>import List<Future<T>>.*import static List<Future<T>>.*import Collection<Future<T>>import Collection<Future<T>>.*import static Collection<Future<T>>.*import Iterable<Future<T>>import Iterable<Future<T>>.*import static Iterable<Future<T>>.*import Callable<T>import Callable<T>.*import static Callable<T>.*import ? extends Callable<T>import ? extends Callable<T>.*import static ? extends Callable<T>.*import Collection<? extends Callable<T>>import Collection<? extends Callable<T>>.*import static Collection<? extends Callable<T>>.*import Iterable<? extends Callable<T>>import Iterable<? extends Callable<T>>.*import static Iterable<? extends Callable<T>>.*import ListenableFuture<T>import ListenableFuture<T>.*import static ListenableFuture<T>.*import ListenableFuture<?>import ListenableFuture<?>.*import static ListenableFuture<?>.*import Callable<>import Callable<>.*import static Callable<>.*import SettableFuture<>import SettableFuture<>.*import static SettableFuture<>.*import AbstractFuture<>import AbstractFuture<>.*import static AbstractFuture<>.*import Binderimport Binder.*import static Binder.*import PrivateBinderimport PrivateBinder.*import static PrivateBinder.*import Bindingimport Binding.*import static Binding.*import Binding<?>import Binding<?>.*import static Binding<?>.*import ? super Binding<?>import ? super Binding<?>.*import static ? super Binding<?>.*import Matcher<? super Binding<?>>import Matcher<? super Binding<?>>.*import static Matcher<? super Binding<?>>.*import ProvisionListenerimport ProvisionListener.*import static ProvisionListener.*import ProvisionListener[]import ProvisionListener[].*import static ProvisionListener[].*import TypeLiteralimport TypeLiteral.*import static TypeLiteral.*import TypeLiteral<?>import TypeLiteral<?>.*import static TypeLiteral<?>.*import ? super TypeLiteral<?>import ? super TypeLiteral<?>.*import static ? super TypeLiteral<?>.*import Matcher<? super TypeLiteral<?>>import Matcher<? super TypeLiteral<?>>.*import static Matcher<? super TypeLiteral<?>>.*import TypeListenerimport TypeListener.*import static TypeListener.*import TypeConverterimport TypeConverter.*import static TypeConverter.*import MembersInjectorimport MembersInjector.*import static MembersInjector.*import MembersInjector<>import MembersInjector<>.*import static MembersInjector<>.*import MembersInjector<T>import MembersInjector<T>.*import static MembersInjector<T>.*import TypeLiteral<>import TypeLiteral<>.*import static TypeLiteral<>.*import TypeLiteral<T>import TypeLiteral<T>.*import static TypeLiteral<T>.*import Providerimport Provider.*import static Provider.*import Provider<>import Provider<>.*import static Provider<>.*import Provider<T>import Provider<T>.*import static Provider<T>.*import Keyimport Key.*import static Key.*import Key<>import Key<>.*import static Key<>.*import Key<T>import Key<T>.*import static Key<T>.*import Stageimport Stage.*import static Stage.*import Moduleimport Module.*import static Module.*import AnnotatedConstantBindingBuilderimport AnnotatedConstantBindingBuilder.*import static AnnotatedConstantBindingBuilder.*import AnnotatedBindingBuilderimport AnnotatedBindingBuilder.*import static AnnotatedBindingBuilder.*import AnnotatedBindingBuilder<>import AnnotatedBindingBuilder<>.*import static AnnotatedBindingBuilder<>.*import LinkedBindingBuilderimport LinkedBindingBuilder.*import static LinkedBindingBuilder.*import LinkedBindingBuilder<>import LinkedBindingBuilder<>.*import static LinkedBindingBuilder<>.*import ScopedBindingBuilderimport ScopedBindingBuilder.*import static ScopedBindingBuilder.*import AnnotatedBindingBuilder<T>import AnnotatedBindingBuilder<T>.*import static AnnotatedBindingBuilder<T>.*import LinkedBindingBuilder<T>import LinkedBindingBuilder<T>.*import static LinkedBindingBuilder<T>.*import Scopeimport Scope.*import static Scope.*import ? super Class<?>import ? super Class<?>.*import static ? super Class<?>.*import Matcher<? super Class<?>>import Matcher<? super Class<?>>.*import static Matcher<? super Class<?>>.*import ? super Methodimport ? super Method.*import static ? super Method.*import Matcher<? super Method>import Matcher<? super Method>.*import static Matcher<? super Method>.*import MethodInterceptorimport MethodInterceptor.*import static MethodInterceptor.*import MethodInterceptor[]import MethodInterceptor[].*import static MethodInterceptor[].*import BindingScopingVisitorimport BindingScopingVisitor.*import static BindingScopingVisitor.*import BindingScopingVisitor<>import BindingScopingVisitor<>.*import static BindingScopingVisitor<>.*import BindingScopingVisitor<V>import BindingScopingVisitor<V>.*import static BindingScopingVisitor<V>.*import BindingTargetVisitorimport BindingTargetVisitor.*import static BindingTargetVisitor.*import BindingTargetVisitor<>import BindingTargetVisitor<>.*import static BindingTargetVisitor<>.*import BindingTargetVisitor<? super T,V>import BindingTargetVisitor<? super T,V>.*import static BindingTargetVisitor<? super T,V>.*import ConfigurationExceptionimport ConfigurationException.*import static ConfigurationException.*import Collection<Message>import Collection<Message>.*import static Collection<Message>.*import Iterable<Message>import Iterable<Message>.*import static Iterable<Message>.*import Injectorimport Injector.*import static Injector.*import TypeConverterBindingimport TypeConverterBinding.*import static TypeConverterBinding.*import Set<TypeConverterBinding>import Set<TypeConverterBinding>.*import static Set<TypeConverterBinding>.*import Collection<TypeConverterBinding>import Collection<TypeConverterBinding>.*import static Collection<TypeConverterBinding>.*import Iterable<TypeConverterBinding>import Iterable<TypeConverterBinding>.*import static Iterable<TypeConverterBinding>.*import Map<Class<? extends Annotation>,Scope>import Map<Class<? extends Annotation>,Scope>.*import static Map<Class<? extends Annotation>,Scope>.*import Module[]import Module[].*import static Module[].*import ? extends Moduleimport ? extends Module.*import static ? extends Module.*import Iterable<? extends Module>import Iterable<? extends Module>.*import static Iterable<? extends Module>.*import Binding<T>import Binding<T>.*import static Binding<T>.*import List<Binding<T>>import List<Binding<T>>.*import static List<Binding<T>>.*import Collection<Binding<T>>import Collection<Binding<T>>.*import static Collection<Binding<T>>.*import Iterable<Binding<T>>import Iterable<Binding<T>>.*import static Iterable<Binding<T>>.*import Binding<>import Binding<>.*import static Binding<>.*import Key<?>import Key<?>.*import static Key<?>.*import Map<Key<?>,Binding<?>>import Map<Key<?>,Binding<?>>.*import static Map<Key<?>,Binding<?>>.*import AnnotationStrategyimport AnnotationStrategy.*import static AnnotationStrategy.*import Key<Provider<T>>import Key<Provider<T>>.*import static Key<Provider<T>>.*import AnnotatedElementBuilderimport AnnotatedElementBuilder.*import static AnnotatedElementBuilder.*import Enum<Stage>import Enum<Stage>.*import static Enum<Stage>.*import Comparable<Stage>import Comparable<Stage>.*import static Comparable<Stage>.*import Class<Stage>import Class<Stage>.*import static Class<Stage>.*import Stage[]import Stage[].*import static Stage[].*import List<TypeLiteral<?>>import List<TypeLiteral<?>>.*import static List<TypeLiteral<?>>.*import Collection<TypeLiteral<?>>import Collection<TypeLiteral<?>>.*import static Collection<TypeLiteral<?>>.*import Iterable<TypeLiteral<?>>import Iterable<TypeLiteral<?>>.*import static Iterable<TypeLiteral<?>>.*import TypeLiteral<Provider<T>>import TypeLiteral<Provider<T>>.*import static TypeLiteral<Provider<T>>.*import Constructor<S>import Constructor<S>.*import static Constructor<S>.*import ? extends Simport ? extends S.*import static ? extends S.*import TypeLiteral<? extends S>import TypeLiteral<? extends S>.*import static TypeLiteral<? extends S>.*import Provider<? extends T>import Provider<? extends T>.*import static Provider<? extends T>.*import ? extends Provider<? extends T>import ? extends Provider<? extends T>.*import static ? extends Provider<? extends T>.*import Key<? extends Provider<? extends T>>import Key<? extends Provider<? extends T>>.*import static Key<? extends Provider<? extends T>>.*import TypeLiteral<? extends Provider<? extends T>>import TypeLiteral<? extends Provider<? extends T>>.*import static TypeLiteral<? extends Provider<? extends T>>.*import Class<? extends Provider<? extends T>>import Class<? extends Provider<? extends T>>.*import static Class<? extends Provider<? extends T>>.*import Key<? extends T>import Key<? extends T>.*import static Key<? extends T>.*import TypeLiteral<? extends T>import TypeLiteral<? extends T>.*import static TypeLiteral<? extends T>.*import ConstantBindingBuilderimport ConstantBindingBuilder.*import static ConstantBindingBuilder.*import Enum<E>import Enum<E>.*import static Enum<E>.*import Comparable<E>import Comparable<E>.*import static Comparable<E>.*import Matcher<? super T>import Matcher<? super T>.*import static Matcher<? super T>.*import Matcher<>import Matcher<>.*import static Matcher<>.*import ProviderBindingimport ProviderBinding.*import static ProviderBinding.*import ProviderBinding<? extends T>import ProviderBinding<? extends T>.*import static ProviderBinding<? extends T>.*import Binding<? extends T>import Binding<? extends T>.*import static Binding<? extends T>.*import ConvertedConstantBindingimport ConvertedConstantBinding.*import static ConvertedConstantBinding.*import ConvertedConstantBinding<? extends T>import ConvertedConstantBinding<? extends T>.*import static ConvertedConstantBinding<? extends T>.*import HasDependenciesimport HasDependencies.*import static HasDependencies.*import ConstructorBindingimport ConstructorBinding.*import static ConstructorBinding.*import ConstructorBinding<? extends T>import ConstructorBinding<? extends T>.*import static ConstructorBinding<? extends T>.*import UntargettedBindingimport UntargettedBinding.*import static UntargettedBinding.*import UntargettedBinding<? extends T>import UntargettedBinding<? extends T>.*import static UntargettedBinding<? extends T>.*import ExposedBindingimport ExposedBinding.*import static ExposedBinding.*import ExposedBinding<? extends T>import ExposedBinding<? extends T>.*import static ExposedBinding<? extends T>.*import LinkedKeyBindingimport LinkedKeyBinding.*import static LinkedKeyBinding.*import LinkedKeyBinding<? extends T>import LinkedKeyBinding<? extends T>.*import static LinkedKeyBinding<? extends T>.*import ProviderKeyBindingimport ProviderKeyBinding.*import static ProviderKeyBinding.*import ProviderKeyBinding<? extends T>import ProviderKeyBinding<? extends T>.*import static ProviderKeyBinding<? extends T>.*import ProviderInstanceBindingimport ProviderInstanceBinding.*import static ProviderInstanceBinding.*import ProviderInstanceBinding<? extends T>import ProviderInstanceBinding<? extends T>.*import static ProviderInstanceBinding<? extends T>.*import InstanceBindingimport InstanceBinding.*import static InstanceBinding.*import InstanceBinding<? extends T>import InstanceBinding<? extends T>.*import static InstanceBinding<? extends T>.*import List<MethodInterceptor>import List<MethodInterceptor>.*import static List<MethodInterceptor>.*import Collection<MethodInterceptor>import Collection<MethodInterceptor>.*import static Collection<MethodInterceptor>.*import Iterable<MethodInterceptor>import Iterable<MethodInterceptor>.*import static Iterable<MethodInterceptor>.*import Map<Method,List<MethodInterceptor>>import Map<Method,List<MethodInterceptor>>.*import static Map<Method,List<MethodInterceptor>>.*import InjectionPointimport InjectionPoint.*import static InjectionPoint.*import Set<InjectionPoint>import Set<InjectionPoint>.*import static Set<InjectionPoint>.*import Collection<InjectionPoint>import Collection<InjectionPoint>.*import static Collection<InjectionPoint>.*import Iterable<InjectionPoint>import Iterable<InjectionPoint>.*import static Iterable<InjectionPoint>.*import Dependencyimport Dependency.*import static Dependency.*import Dependency<?>import Dependency<?>.*import static Dependency<?>.*import Set<Dependency<?>>import Set<Dependency<?>>.*import static Set<Dependency<?>>.*import Collection<Dependency<?>>import Collection<Dependency<?>>.*import static Collection<Dependency<?>>.*import Iterable<Dependency<?>>import Iterable<Dependency<?>>.*import static Iterable<Dependency<?>>.*import Key<String>import Key<String>.*import static Key<String>.*import Dependency<>import Dependency<>.*import static Dependency<>.*import Dependency<T>import Dependency<T>.*import static Dependency<T>.*import DependencyAndSourceimport DependencyAndSource.*import static DependencyAndSource.*import DisableCircularProxiesOptionimport DisableCircularProxiesOption.*import static DisableCircularProxiesOption.*import ElementVisitorimport ElementVisitor.*import static ElementVisitor.*import ElementVisitor<>import ElementVisitor<>.*import static ElementVisitor<>.*import ElementVisitor<T>import ElementVisitor<T>.*import static ElementVisitor<T>.*import RequireExactBindingAnnotationsOptionimport RequireExactBindingAnnotationsOption.*import static RequireExactBindingAnnotationsOption.*import RequireAtInjectOnConstructorsOptionimport RequireAtInjectOnConstructorsOption.*import static RequireAtInjectOnConstructorsOption.*import RequireExplicitBindingsOptionimport RequireExplicitBindingsOption.*import static RequireExplicitBindingsOption.*import ProvisionListenerBindingimport ProvisionListenerBinding.*import static ProvisionListenerBinding.*import TypeListenerBindingimport TypeListenerBinding.*import static TypeListenerBinding.*import PrivateElementsimport PrivateElements.*import static PrivateElements.*import MembersInjectorLookupimport MembersInjectorLookup.*import static MembersInjectorLookup.*import MembersInjectorLookup<>import MembersInjectorLookup<>.*import static MembersInjectorLookup<>.*import MembersInjectorLookup<T>import MembersInjectorLookup<T>.*import static MembersInjectorLookup<T>.*import ProviderLookupimport ProviderLookup.*import static ProviderLookup.*import ProviderLookup<>import ProviderLookup<>.*import static ProviderLookup<>.*import ProviderLookup<T>import ProviderLookup<T>.*import static ProviderLookup<T>.*import StaticInjectionRequestimport StaticInjectionRequest.*import static StaticInjectionRequest.*import InjectionRequestimport InjectionRequest.*import static InjectionRequest.*import InjectionRequest<?>import InjectionRequest<?>.*import static InjectionRequest<?>.*import ScopeBindingimport ScopeBinding.*import static ScopeBinding.*import InterceptorBindingimport InterceptorBinding.*import static InterceptorBinding.*import InjectionListenerimport InjectionListener.*import static InjectionListener.*import List<Dependency<?>>import List<Dependency<?>>.*import static List<Dependency<?>>.*import ElementVisitor<R>import ElementVisitor<R>.*import static ElementVisitor<R>.*import Set<Key<?>>import Set<Key<?>>.*import static Set<Key<?>>.*import Collection<Key<?>>import Collection<Key<?>>.*import static Collection<Key<?>>.*import Iterable<Key<?>>import Iterable<Key<?>>.*import static Iterable<Key<?>>.*import List<Element>import List<Element>.*import static List<Element>.*import Collection<Element>import Collection<Element>.*import static Collection<Element>.*import Iterable<Element>import Iterable<Element>.*import static Iterable<Element>.*import Provider<?>import Provider<?>.*import static Provider<?>.*import ProvisionInvocationimport ProvisionInvocation.*import static ProvisionInvocation.*import List<DependencyAndSource>import List<DependencyAndSource>.*import static List<DependencyAndSource>.*import Collection<DependencyAndSource>import Collection<DependencyAndSource>.*import static Collection<DependencyAndSource>.*import Iterable<DependencyAndSource>import Iterable<DependencyAndSource>.*import static Iterable<DependencyAndSource>.*import ProvisionInvocation<>import ProvisionInvocation<>.*import static ProvisionInvocation<>.*import ProvisionInvocation<T>import ProvisionInvocation<T>.*import static ProvisionInvocation<T>.*import List<ProvisionListener>import List<ProvisionListener>.*import static List<ProvisionListener>.*import Collection<ProvisionListener>import Collection<ProvisionListener>.*import static Collection<ProvisionListener>.*import Iterable<ProvisionListener>import Iterable<ProvisionListener>.*import static Iterable<ProvisionListener>.*import TypeEncounterimport TypeEncounter.*import static TypeEncounter.*import ? super Iimport ? super I.*import static ? super I.*import InjectionListener<? super I>import InjectionListener<? super I>.*import static InjectionListener<? super I>.*import MembersInjector<? super I>import MembersInjector<? super I>.*import static MembersInjector<? super I>.*import TypeEncounter<>import TypeEncounter<>.*import static TypeEncounter<>.*import TypeLiteral<I>import TypeLiteral<I>.*import static TypeLiteral<I>.*import TypeEncounter<I>import TypeEncounter<I>.*import static TypeEncounter<I>.*import WithBridgeMethodsimport WithBridgeMethods.*import static WithBridgeMethods.*import Indexedimport Indexed.*import static Indexed.*import Validatorimport Validator.*import static Validator.*import ? extends Validatorimport ? extends Validator.*import static ? extends Validator.*import Class<? extends Validator>import Class<? extends Validator>.*import static Class<? extends Validator>.*import Class<? extends Validator>[]import Class<? extends Validator>[].*import static Class<? extends Validator>[].*import MarshallingStrategyimport MarshallingStrategy.*import static MarshallingStrategy.*import HierarchicalStreamWriterimport HierarchicalStreamWriter.*import static HierarchicalStreamWriter.*import ConverterLookupimport ConverterLookup.*import static ConverterLookup.*import Mapperimport Mapper.*import static Mapper.*import DataHolderimport DataHolder.*import static DataHolder.*import HierarchicalStreamReaderimport HierarchicalStreamReader.*import static HierarchicalStreamReader.*import Pattern[]import Pattern[].*import static Pattern[].*import TypePermissionimport TypePermission.*import static TypePermission.*import ClassLoaderReferenceimport ClassLoaderReference.*import static ClassLoaderReference.*import ObjectInputStreamimport ObjectInputStream.*import static ObjectInputStream.*import JVMimport JVM.*import static JVM.*import ConverterRegistryimport ConverterRegistry.*import static ConverterRegistry.*import ReflectionProviderimport ReflectionProvider.*import static ReflectionProvider.*import SingleValueConverterimport SingleValueConverter.*import static SingleValueConverter.*import Converterimport Converter.*import static Converter.*import MapperWrapperimport MapperWrapper.*import static MapperWrapper.*import HierarchicalStreamDriverimport HierarchicalStreamDriver.*import static HierarchicalStreamDriver.*import ConverterMatcherimport ConverterMatcher.*import static ConverterMatcher.*import UnmarshallingContextimport UnmarshallingContext.*import static UnmarshallingContext.*import MarshallingContextimport MarshallingContext.*import static MarshallingContext.*import ErrorReporterimport ErrorReporter.*import static ErrorReporter.*import ErrorWriterimport ErrorWriter.*import static ErrorWriter.*import FieldDictionaryimport FieldDictionary.*import static FieldDictionary.*import Cachingimport Caching.*import static Caching.*import FieldKeySorterimport FieldKeySorter.*import static FieldKeySorter.*import Visitorimport Visitor.*import static Visitor.*import ImplicitCollectionMappingimport ImplicitCollectionMapping.*import static ImplicitCollectionMapping.*import AgentProxyimport AgentProxy.*import static AgentProxy.*import TypeQualifierNicknameimport TypeQualifierNickname.*import static TypeQualifierNickname.*import OverrideMustInvokeimport OverrideMustInvoke.*import static OverrideMustInvoke.*import Enum<When>import Enum<When>.*import static Enum<When>.*import Comparable<When>import Comparable<When>.*import static Comparable<When>.*import Class<When>import Class<When>.*import static Class<When>.*import When[]import When[].*import static When[].*import HttpHostimport HttpHost.*import static HttpHost.*import Immutableimport Immutable.*import static Immutable.*import InetAddressimport InetAddress.*import static InetAddress.*import Obsoleteimport Obsolete.*import static Obsolete.*import AuthScopeimport AuthScope.*import static AuthScope.*import Principalimport Principal.*import static Principal.*import int[]import int[].*import static int[].*import AbstractMarkupTextimport AbstractMarkupText.*import static AbstractMarkupText.*import SubTextimport SubText.*import static SubText.*import List<SubText>import List<SubText>.*import static List<SubText>.*import Collection<SubText>import Collection<SubText>.*import static Collection<SubText>.*import Iterable<SubText>import Iterable<SubText>.*import static Iterable<SubText>.*import Dimport D.*import static D.*import ExtensionList<D>import ExtensionList<D>.*import static ExtensionList<D>.*import AbstractList<D>import AbstractList<D>.*import static AbstractList<D>.*import AbstractCollection<D>import AbstractCollection<D>.*import static AbstractCollection<D>.*import Collection<D>import Collection<D>.*import static Collection<D>.*import Iterable<D>import Iterable<D>.*import static Iterable<D>.*import List<D>import List<D>.*import static List<D>.*import Spliterator<D>import Spliterator<D>.*import static Spliterator<D>.*import ? super Dimport ? super D.*import static ? super D.*import Consumer<? super D>import Consumer<? super D>.*import static Consumer<? super D>.*import Iterator<D>import Iterator<D>.*import static Iterator<D>.*import Stream<D>import Stream<D>.*import static Stream<D>.*import BaseStream<D,Stream<D>>import BaseStream<D,Stream<D>>.*import static BaseStream<D,Stream<D>>.*import Predicate<? super D>import Predicate<? super D>.*import static Predicate<? super D>.*import ? extends Dimport ? extends D.*import static ? extends D.*import Collection<? extends D>import Collection<? extends D>.*import static Collection<? extends D>.*import Iterable<? extends D>import Iterable<? extends D>.*import static Iterable<? extends D>.*import ListIterator<D>import ListIterator<D>.*import static ListIterator<D>.*import Comparator<? super D>import Comparator<? super D>.*import static Comparator<? super D>.*import UnaryOperator<D>import UnaryOperator<D>.*import static UnaryOperator<D>.*import Function<D,D>import Function<D,D>.*import static Function<D,D>.*import ExtensionComponent<D>import ExtensionComponent<D>.*import static ExtensionComponent<D>.*import Comparable<ExtensionComponent<D>>import Comparable<ExtensionComponent<D>>.*import static Comparable<ExtensionComponent<D>>.*import List<ExtensionComponent<D>>import List<ExtensionComponent<D>>.*import static List<ExtensionComponent<D>>.*import Collection<ExtensionComponent<D>>import Collection<ExtensionComponent<D>>.*import static Collection<ExtensionComponent<D>>.*import Iterable<ExtensionComponent<D>>import Iterable<ExtensionComponent<D>>.*import static Iterable<ExtensionComponent<D>>.*import Class<D>import Class<D>.*import static Class<D>.*import CopyOnWriteArrayList<ExtensionComponent<D>>import CopyOnWriteArrayList<ExtensionComponent<D>>.*import static CopyOnWriteArrayList<ExtensionComponent<D>>.*import Iterable<Descriptor<>>import Iterable<Descriptor<>>.*import static Iterable<Descriptor<>>.*import DescriptorExtensionList<T,D>import DescriptorExtensionList<T,D>.*import static DescriptorExtensionList<T,D>.*import TreeMapimport TreeMap.*import static TreeMap.*import TreeMap<String,String>import TreeMap<String,String>.*import static TreeMap<String,String>.*import AbstractMap<String,String>import AbstractMap<String,String>.*import static AbstractMap<String,String>.*import NavigableMapimport NavigableMap.*import static NavigableMap.*import NavigableMap<String,String>import NavigableMap<String,String>.*import static NavigableMap<String,String>.*import SortedMap<String,String>import SortedMap<String,String>.*import static SortedMap<String,String>.*import BiFunction<? super String,? super String,? extends String>import BiFunction<? super String,? super String,? extends String>.*import static BiFunction<? super String,? super String,? extends String>.*import Function<? super String,? extends String>import Function<? super String,? extends String>.*import static Function<? super String,? extends String>.*import BiConsumer<? super String,? super String>import BiConsumer<? super String,? super String>.*import static BiConsumer<? super String,? super String>.*import Entry<String,String>import Entry<String,String>.*import static Entry<String,String>.*import Set<Entry<String,String>>import Set<Entry<String,String>>.*import static Set<Entry<String,String>>.*import Collection<Entry<String,String>>import Collection<Entry<String,String>>.*import static Collection<Entry<String,String>>.*import Iterable<Entry<String,String>>import Iterable<Entry<String,String>>.*import static Iterable<Entry<String,String>>.*import Map<? extends String,? extends String>import Map<? extends String,? extends String>.*import static Map<? extends String,? extends String>.*import SortedMap<K,V>import SortedMap<K,V>.*import static SortedMap<K,V>.*import NavigableMap<>import NavigableMap<>.*import static NavigableMap<>.*import NavigableSetimport NavigableSet.*import static NavigableSet.*import NavigableSet<>import NavigableSet<>.*import static NavigableSet<>.*import SortedSetimport SortedSet.*import static SortedSet.*import SortedSet<>import SortedSet<>.*import static SortedSet<>.*import NavigableSet<K>import NavigableSet<K>.*import static NavigableSet<K>.*import SortedSet<K>import SortedSet<K>.*import static SortedSet<K>.*import NavigableSet<String>import NavigableSet<String>.*import static NavigableSet<String>.*import SortedSet<String>import SortedSet<String>.*import static SortedSet<String>.*import Spliterator<K>import Spliterator<K>.*import static Spliterator<K>.*import NavigableMap<K,?>import NavigableMap<K,?>.*import static NavigableMap<K,?>.*import SortedMap<K,?>import SortedMap<K,?>.*import static SortedMap<K,?>.*import Map<K,?>import Map<K,?>.*import static Map<K,?>.*import SortedSet<? extends K>import SortedSet<? extends K>.*import static SortedSet<? extends K>.*import SortedSet<? extends String>import SortedSet<? extends String>.*import static SortedSet<? extends String>.*import Set<? extends String>import Set<? extends String>.*import static Set<? extends String>.*import TreeMap<>import TreeMap<>.*import static TreeMap<>.*import Entry<K,?>import Entry<K,?>.*import static Entry<K,?>.*import Iterator<K>import Iterator<K>.*import static Iterator<K>.*import NavigableMap<K,V>import NavigableMap<K,V>.*import static NavigableMap<K,V>.*import SortedMap<K,? extends V>import SortedMap<K,? extends V>.*import static SortedMap<K,? extends V>.*import Map<K,? extends V>import Map<K,? extends V>.*import static Map<K,? extends V>.*import SortedMap<String,? extends String>import SortedMap<String,? extends String>.*import static SortedMap<String,? extends String>.*import Map<String,? extends String>import Map<String,? extends String>.*import static Map<String,? extends String>.*import VirtualChannelimport VirtualChannel.*import static VirtualChannel.*import Indexableimport Indexable.*import static Indexable.*import Comparable<ExtensionComponent>import Comparable<ExtensionComponent>.*import static Comparable<ExtensionComponent>.*import ExtensionFinderimport ExtensionFinder.*import static ExtensionFinder.*import ExtensionRefreshExceptionimport ExtensionRefreshException.*import static ExtensionRefreshException.*import Stream<T>import Stream<T>.*import static Stream<T>.*import BaseStream<T,Stream<T>>import BaseStream<T,Stream<T>>.*import static BaseStream<T,Stream<T>>.*import Predicate<? super T>import Predicate<? super T>.*import static Predicate<? super T>.*import ListIterator<T>import ListIterator<T>.*import static ListIterator<T>.*import Comparator<? super T>import Comparator<? super T>.*import static Comparator<? super T>.*import UnaryOperator<T>import UnaryOperator<T>.*import static UnaryOperator<T>.*import Function<T,T>import Function<T,T>.*import static Function<T,T>.*import LegacyInstancesAreScopedToHudsonimport LegacyInstancesAreScopedToHudson.*import static LegacyInstancesAreScopedToHudson.*import FileCallableimport FileCallable.*import static FileCallable.*import RoleSensitiveimport RoleSensitive.*import static RoleSensitive.*import TarCompressionimport TarCompression.*import static TarCompression.*import Enum<TarCompression>import Enum<TarCompression>.*import static Enum<TarCompression>.*import Comparable<TarCompression>import Comparable<TarCompression>.*import static Comparable<TarCompression>.*import Class<TarCompression>import Class<TarCompression>.*import static Class<TarCompression>.*import TarCompression[]import TarCompression[].*import static TarCompression[].*import DirScannerimport DirScanner.*import static DirScanner.*import FileFilterimport FileFilter.*import static FileFilter.*import List<FilePath>import List<FilePath>.*import static List<FilePath>.*import Collection<FilePath>import Collection<FilePath>.*import static Collection<FilePath>.*import Iterable<FilePath>import Iterable<FilePath>.*import static Iterable<FilePath>.*import PosixExceptionimport PosixException.*import static PosixException.*import Computerimport Computer.*import static Computer.*import VirtualFileimport VirtualFile.*import static VirtualFile.*import FileCallable<>import FileCallable<>.*import static FileCallable<>.*import Callable<V,IOException>import Callable<V,IOException>.*import static Callable<V,IOException>.*import FileCallable<V>import FileCallable<V>.*import static FileCallable<V>.*import Callable<V,E>import Callable<V,E>.*import static Callable<V,E>.*import FileCallable<T>import FileCallable<T>.*import static FileCallable<T>.*import FileItemimport FileItem.*import static FileItem.*import ArchiverFactoryimport ArchiverFactory.*import static ArchiverFactory.*import LocalChannelimport LocalChannel.*import static LocalChannel.*import FileSystemProvisionerimport FileSystemProvisioner.*import static FileSystemProvisioner.*import Describable<FileSystemProvisioner>import Describable<FileSystemProvisioner>.*import static Describable<FileSystemProvisioner>.*import Descriptor<FileSystemProvisioner>import Descriptor<FileSystemProvisioner>.*import static Descriptor<FileSystemProvisioner>.*import FileSystemProvisionerDescriptorimport FileSystemProvisionerDescriptor.*import static FileSystemProvisionerDescriptor.*import DescriptorExtensionList<FileSystemProvisioner,FileSystemProvisionerDescriptor>import DescriptorExtensionList<FileSystemProvisioner,FileSystemProvisionerDescriptor>.*import static DescriptorExtensionList<FileSystemProvisioner,FileSystemProvisionerDescriptor>.*import ExtensionList<FileSystemProvisionerDescriptor>import ExtensionList<FileSystemProvisionerDescriptor>.*import static ExtensionList<FileSystemProvisionerDescriptor>.*import AbstractList<FileSystemProvisionerDescriptor>import AbstractList<FileSystemProvisionerDescriptor>.*import static AbstractList<FileSystemProvisionerDescriptor>.*import AbstractCollection<FileSystemProvisionerDescriptor>import AbstractCollection<FileSystemProvisionerDescriptor>.*import static AbstractCollection<FileSystemProvisionerDescriptor>.*import Collection<FileSystemProvisionerDescriptor>import Collection<FileSystemProvisionerDescriptor>.*import static Collection<FileSystemProvisionerDescriptor>.*import Iterable<FileSystemProvisionerDescriptor>import Iterable<FileSystemProvisionerDescriptor>.*import static Iterable<FileSystemProvisionerDescriptor>.*import List<FileSystemProvisionerDescriptor>import List<FileSystemProvisionerDescriptor>.*import static List<FileSystemProvisionerDescriptor>.*import WorkspaceSnapshotimport WorkspaceSnapshot.*import static WorkspaceSnapshot.*import Class<FileSystemProvisioner>import Class<FileSystemProvisioner>.*import static Class<FileSystemProvisioner>.*import ? extends FileSystemProvisionerimport ? extends FileSystemProvisioner.*import static ? extends FileSystemProvisioner.*import Class<? extends FileSystemProvisioner>import Class<? extends FileSystemProvisioner>.*import static Class<? extends FileSystemProvisioner>.*import Indenterimport Indenter.*import static Indenter.*import LocalLauncherimport LocalLauncher.*import static LocalLauncher.*import ProcessBuilderimport ProcessBuilder.*import static ProcessBuilder.*import Channelimport Channel.*import static Channel.*import ProcStarterimport ProcStarter.*import static ProcStarter.*import Procimport Proc.*import static Proc.*import boolean[]import boolean[].*import static boolean[].*import ArgumentListBuilderimport ArgumentListBuilder.*import static ArgumentListBuilder.*import Lookupimport Lookup.*import static Lookup.*import MarkupTextimport MarkupText.*import static MarkupText.*import Permalinkimport Permalink.*import static Permalink.*import ArrayList<Permalink>import ArrayList<Permalink>.*import static ArrayList<Permalink>.*import AbstractList<Permalink>import AbstractList<Permalink>.*import static AbstractList<Permalink>.*import AbstractCollection<Permalink>import AbstractCollection<Permalink>.*import static AbstractCollection<Permalink>.*import Collection<Permalink>import Collection<Permalink>.*import static Collection<Permalink>.*import Iterable<Permalink>import Iterable<Permalink>.*import static Iterable<Permalink>.*import List<Permalink>import List<Permalink>.*import static List<Permalink>.*import Spliterator<Permalink>import Spliterator<Permalink>.*import static Spliterator<Permalink>.*import ? super Permalinkimport ? super Permalink.*import static ? super Permalink.*import Consumer<? super Permalink>import Consumer<? super Permalink>.*import static Consumer<? super Permalink>.*import Iterator<Permalink>import Iterator<Permalink>.*import static Iterator<Permalink>.*import Stream<Permalink>import Stream<Permalink>.*import static Stream<Permalink>.*import BaseStream<Permalink,Stream<Permalink>>import BaseStream<Permalink,Stream<Permalink>>.*import static BaseStream<Permalink,Stream<Permalink>>.*import Predicate<? super Permalink>import Predicate<? super Permalink>.*import static Predicate<? super Permalink>.*import ? extends Permalinkimport ? extends Permalink.*import static ? extends Permalink.*import Collection<? extends Permalink>import Collection<? extends Permalink>.*import static Collection<? extends Permalink>.*import Iterable<? extends Permalink>import Iterable<? extends Permalink>.*import static Iterable<? extends Permalink>.*import ListIterator<Permalink>import ListIterator<Permalink>.*import static ListIterator<Permalink>.*import Comparator<? super Permalink>import Comparator<? super Permalink>.*import static Comparator<? super Permalink>.*import UnaryOperator<Permalink>import UnaryOperator<Permalink>.*import static UnaryOperator<Permalink>.*import Function<Permalink,Permalink>import Function<Permalink,Permalink>.*import static Function<Permalink,Permalink>.*import ServletContextimport ServletContext.*import static ServletContext.*import FailedPluginimport FailedPlugin.*import static FailedPlugin.*import PluginManagerimport PluginManager.*import static PluginManager.*import AbstractModelObjectimport AbstractModelObject.*import static AbstractModelObject.*import VersionNumberimport VersionNumber.*import static VersionNumber.*import Map<String,VersionNumber>import Map<String,VersionNumber>.*import static Map<String,VersionNumber>.*import UpdateCenterJobimport UpdateCenterJob.*import static UpdateCenterJob.*import Future<UpdateCenterJob>import Future<UpdateCenterJob>.*import static Future<UpdateCenterJob>.*import List<Future<UpdateCenterJob>>import List<Future<UpdateCenterJob>>.*import static List<Future<UpdateCenterJob>>.*import Collection<Future<UpdateCenterJob>>import Collection<Future<UpdateCenterJob>>.*import static Collection<Future<UpdateCenterJob>>.*import Iterable<Future<UpdateCenterJob>>import Iterable<Future<UpdateCenterJob>>.*import static Iterable<Future<UpdateCenterJob>>.*import ProxyConfigurationimport ProxyConfiguration.*import static ProxyConfiguration.*import Descriptor<ProxyConfiguration>import Descriptor<ProxyConfiguration>.*import static Descriptor<ProxyConfiguration>.*import Collection<Class<? extends T>>import Collection<Class<? extends T>>.*import static Collection<Class<? extends T>>.*import Iterable<Class<? extends T>>import Iterable<Class<? extends T>>.*import static Iterable<Class<? extends T>>.*import ? extends Pluginimport ? extends Plugin.*import static ? extends Plugin.*import Class<? extends Plugin>import Class<? extends Plugin>.*import static Class<? extends Plugin>.*import List<PluginWrapper>import List<PluginWrapper>.*import static List<PluginWrapper>.*import Collection<PluginWrapper>import Collection<PluginWrapper>.*import static Collection<PluginWrapper>.*import Iterable<PluginWrapper>import Iterable<PluginWrapper>.*import static Iterable<PluginWrapper>.*import List<FailedPlugin>import List<FailedPlugin>.*import static List<FailedPlugin>.*import Collection<FailedPlugin>import Collection<FailedPlugin>.*import static Collection<FailedPlugin>.*import Iterable<FailedPlugin>import Iterable<FailedPlugin>.*import static Iterable<FailedPlugin>.*import PluginStrategyimport PluginStrategy.*import static PluginStrategy.*import RestartRequiredExceptionimport RestartRequiredException.*import static RestartRequiredException.*import Manifestimport Manifest.*import static Manifest.*import InitStrategyimport InitStrategy.*import static InitStrategy.*import TaskBuilderimport TaskBuilder.*import static TaskBuilder.*import Comparable<PluginWrapper>import Comparable<PluginWrapper>.*import static Comparable<PluginWrapper>.*import List<Dependency>import List<Dependency>.*import static List<Dependency>.*import Collection<Dependency>import Collection<Dependency>.*import static Collection<Dependency>.*import Iterable<Dependency>import Iterable<Dependency>.*import static Iterable<Dependency>.*import AbstractDescribableImpl<ProxyConfiguration>import AbstractDescribableImpl<ProxyConfiguration>.*import static AbstractDescribableImpl<ProxyConfiguration>.*import Describable<ProxyConfiguration>import Describable<ProxyConfiguration>.*import static Describable<ProxyConfiguration>.*import URLConnectionimport URLConnection.*import static URLConnection.*import Proxyimport Proxy.*import static Proxy.*import List<Pattern>import List<Pattern>.*import static List<Pattern>.*import Collection<Pattern>import Collection<Pattern>.*import static Collection<Pattern>.*import Iterable<Pattern>import Iterable<Pattern>.*import static Iterable<Pattern>.*import TcpSlaveAgentListenerimport TcpSlaveAgentListener.*import static TcpSlaveAgentListener.*import Numberimport Number.*import static Number.*import FileSetimport FileSet.*import static FileSet.*import Collection[]import Collection[].*import static Collection[].*import Collection<>[]import Collection<>[].*import static Collection<>[].*import Collection<? extends T>[]import Collection<? extends T>[].*import static Collection<? extends T>[].*import Set<T>import Set<T>.*import static Set<T>.*import BuildExceptionimport BuildException.*import static BuildException.*import SecretKeyimport SecretKey.*import static SecretKey.*import FastDateFormatimport FastDateFormat.*import static FastDateFormat.*import CLICommandimport CLICommand.*import static CLICommand.*import ExtensionList<CLICommand>import ExtensionList<CLICommand>.*import static ExtensionList<CLICommand>.*import AbstractList<CLICommand>import AbstractList<CLICommand>.*import static AbstractList<CLICommand>.*import AbstractCollection<CLICommand>import AbstractCollection<CLICommand>.*import static AbstractCollection<CLICommand>.*import Collection<CLICommand>import Collection<CLICommand>.*import static Collection<CLICommand>.*import Iterable<CLICommand>import Iterable<CLICommand>.*import static Iterable<CLICommand>.*import List<CLICommand>import List<CLICommand>.*import static List<CLICommand>.*import CmdLineParserimport CmdLineParser.*import static CmdLineParser.*import Localeimport Locale.*import static Locale.*import ChannelPropertyimport ChannelProperty.*import static ChannelProperty.*import ChannelProperty<Authentication>import ChannelProperty<Authentication>.*import static ChannelProperty<Authentication>.*import CLIMethodimport CLIMethod.*import static CLIMethod.*import CLIResolverimport CLIResolver.*import static CLIResolver.*import ByteBufferimport ByteBuffer.*import static ByteBuffer.*import ConsoleAnnotationDescriptorimport ConsoleAnnotationDescriptor.*import static ConsoleAnnotationDescriptor.*import ConsoleNoteimport ConsoleNote.*import static ConsoleNote.*import ConsoleNote<?>import ConsoleNote<?>.*import static ConsoleNote<?>.*import Describable<ConsoleNote<?>>import Describable<ConsoleNote<?>>.*import static Describable<ConsoleNote<?>>.*import Descriptor<ConsoleNote<?>>import Descriptor<ConsoleNote<?>>.*import static Descriptor<ConsoleNote<?>>.*import ConsoleNote<>import ConsoleNote<>.*import static ConsoleNote<>.*import Class<ConsoleNote<?>>import Class<ConsoleNote<?>>.*import static Class<ConsoleNote<?>>.*import ? extends ConsoleNote<?>import ? extends ConsoleNote<?>.*import static ? extends ConsoleNote<?>.*import Class<? extends ConsoleNote<?>>import Class<? extends ConsoleNote<?>>.*import static Class<? extends ConsoleNote<?>>.*import DescriptorExtensionList<ConsoleNote<?>,ConsoleAnnotationDescriptor>import DescriptorExtensionList<ConsoleNote<?>,ConsoleAnnotationDescriptor>.*import static DescriptorExtensionList<ConsoleNote<?>,ConsoleAnnotationDescriptor>.*import ExtensionList<ConsoleAnnotationDescriptor>import ExtensionList<ConsoleAnnotationDescriptor>.*import static ExtensionList<ConsoleAnnotationDescriptor>.*import AbstractList<ConsoleAnnotationDescriptor>import AbstractList<ConsoleAnnotationDescriptor>.*import static AbstractList<ConsoleAnnotationDescriptor>.*import AbstractCollection<ConsoleAnnotationDescriptor>import AbstractCollection<ConsoleAnnotationDescriptor>.*import static AbstractCollection<ConsoleAnnotationDescriptor>.*import Collection<ConsoleAnnotationDescriptor>import Collection<ConsoleAnnotationDescriptor>.*import static Collection<ConsoleAnnotationDescriptor>.*import Iterable<ConsoleAnnotationDescriptor>import Iterable<ConsoleAnnotationDescriptor>.*import static Iterable<ConsoleAnnotationDescriptor>.*import List<ConsoleAnnotationDescriptor>import List<ConsoleAnnotationDescriptor>.*import static List<ConsoleAnnotationDescriptor>.*import ConsoleAnnotatorimport ConsoleAnnotator.*import static ConsoleAnnotator.*import ConsoleAnnotator<T>import ConsoleAnnotator<T>.*import static ConsoleAnnotator<T>.*import List<ConsoleAnnotator<T>>import List<ConsoleAnnotator<T>>.*import static List<ConsoleAnnotator<T>>.*import Collection<ConsoleAnnotator<T>>import Collection<ConsoleAnnotator<T>>.*import static Collection<ConsoleAnnotator<T>>.*import Iterable<ConsoleAnnotator<T>>import Iterable<ConsoleAnnotator<T>>.*import static Iterable<ConsoleAnnotator<T>>.*import ConsoleAnnotator<>import ConsoleAnnotator<>.*import static ConsoleAnnotator<>.*import ConsoleAnnotator<? super T>import ConsoleAnnotator<? super T>.*import static ConsoleAnnotator<? super T>.*import ? extends ConsoleAnnotator<? super T>import ? extends ConsoleAnnotator<? super T>.*import static ? extends ConsoleAnnotator<? super T>.*import Collection<? extends ConsoleAnnotator<? super T>>import Collection<? extends ConsoleAnnotator<? super T>>.*import static Collection<? extends ConsoleAnnotator<? super T>>.*import Iterable<? extends ConsoleAnnotator<? super T>>import Iterable<? extends ConsoleAnnotator<? super T>>.*import static Iterable<? extends ConsoleAnnotator<? super T>>.*import DataInputStreamimport DataInputStream.*import static DataInputStream.*import Enum<InitMilestone>import Enum<InitMilestone>.*import static Enum<InitMilestone>.*import Comparable<InitMilestone>import Comparable<InitMilestone>.*import static Comparable<InitMilestone>.*import Class<InitMilestone>import Class<InitMilestone>.*import static Class<InitMilestone>.*import Milestoneimport Milestone.*import static Milestone.*import InitMilestone[]import InitMilestone[].*import static InitMilestone[].*import List<File>import List<File>.*import static List<File>.*import Collection<File>import Collection<File>.*import static Collection<File>.*import Iterable<File>import Iterable<File>.*import static Iterable<File>.*import Lifecycleimport Lifecycle.*import static Lifecycle.*import RestartNotSupportedExceptionimport RestartNotSupportedException.*import static RestartNotSupportedException.*import LogRecorderimport LogRecorder.*import static LogRecorder.*import LogRecordimport LogRecord.*import static LogRecord.*import List<LogRecord>import List<LogRecord>.*import static List<LogRecord>.*import Collection<LogRecord>import Collection<LogRecord>.*import static Collection<LogRecord>.*import Iterable<LogRecord>import Iterable<LogRecord>.*import static Iterable<LogRecord>.*import Map<Computer,List<LogRecord>>import Map<Computer,List<LogRecord>>.*import static Map<Computer,List<LogRecord>>.*import LogRecorderManagerimport LogRecorderManager.*import static LogRecorderManager.*import AutoCompletionCandidatesimport AutoCompletionCandidates.*import static AutoCompletionCandidates.*import Target[]import Target[].*import static Target[].*import List<Level>import List<Level>.*import static List<Level>.*import Collection<Level>import Collection<Level>.*import static Collection<Level>.*import Iterable<Level>import Iterable<Level>.*import static Iterable<Level>.*import RingBufferLogHandlerimport RingBufferLogHandler.*import static RingBufferLogHandler.*import CopyOnWriteList<Target>import CopyOnWriteList<Target>.*import static CopyOnWriteList<Target>.*import Iterable<Target>import Iterable<Target>.*import static Iterable<Target>.*import Map<String,LogRecorder>import Map<String,LogRecorder>.*import static Map<String,LogRecorder>.*import MarkupFormatterimport MarkupFormatter.*import static MarkupFormatter.*import AbstractDescribableImpl<MarkupFormatter>import AbstractDescribableImpl<MarkupFormatter>.*import static AbstractDescribableImpl<MarkupFormatter>.*import Describable<MarkupFormatter>import Describable<MarkupFormatter>.*import static Describable<MarkupFormatter>.*import Descriptor<MarkupFormatter>import Descriptor<MarkupFormatter>.*import static Descriptor<MarkupFormatter>.*import MarkupFormatterDescriptorimport MarkupFormatterDescriptor.*import static MarkupFormatterDescriptor.*import Class<MarkupFormatter>import Class<MarkupFormatter>.*import static Class<MarkupFormatter>.*import ? extends MarkupFormatterimport ? extends MarkupFormatter.*import static ? extends MarkupFormatter.*import Class<? extends MarkupFormatter>import Class<? extends MarkupFormatter>.*import static Class<? extends MarkupFormatter>.*import DescriptorExtensionList<MarkupFormatter,MarkupFormatterDescriptor>import DescriptorExtensionList<MarkupFormatter,MarkupFormatterDescriptor>.*import static DescriptorExtensionList<MarkupFormatter,MarkupFormatterDescriptor>.*import ExtensionList<MarkupFormatterDescriptor>import ExtensionList<MarkupFormatterDescriptor>.*import static ExtensionList<MarkupFormatterDescriptor>.*import AbstractList<MarkupFormatterDescriptor>import AbstractList<MarkupFormatterDescriptor>.*import static AbstractList<MarkupFormatterDescriptor>.*import AbstractCollection<MarkupFormatterDescriptor>import AbstractCollection<MarkupFormatterDescriptor>.*import static AbstractCollection<MarkupFormatterDescriptor>.*import Collection<MarkupFormatterDescriptor>import Collection<MarkupFormatterDescriptor>.*import static Collection<MarkupFormatterDescriptor>.*import Iterable<MarkupFormatterDescriptor>import Iterable<MarkupFormatterDescriptor>.*import static Iterable<MarkupFormatterDescriptor>.*import List<MarkupFormatterDescriptor>import List<MarkupFormatterDescriptor>.*import static List<MarkupFormatterDescriptor>.*import AbstractBuildExecutionimport AbstractBuildExecution.*import static AbstractBuildExecution.*import Run<P,R>import Run<P,R>.*import static Run<P,R>.*import Comparable<R>import Comparable<R>.*import static Comparable<R>.*import RunnerAbortedExceptionimport RunnerAbortedException.*import static RunnerAbortedException.*import ? extends BuildStepimport ? extends BuildStep.*import static ? extends BuildStep.*import Iterable<? extends BuildStep>import Iterable<? extends BuildStep>.*import static Iterable<? extends BuildStep>.*import Collection<? extends BuildStep>import Collection<? extends BuildStep>.*import static Collection<? extends BuildStep>.*import Map<?,? extends BuildStep>import Map<?,? extends BuildStep>.*import static Map<?,? extends BuildStep>.*import WorkspaceListimport WorkspaceList.*import static WorkspaceList.*import Leaseimport Lease.*import static Lease.*import List<AbstractBuild<>>import List<AbstractBuild<>>.*import static List<AbstractBuild<>>.*import Collection<AbstractBuild<>>import Collection<AbstractBuild<>>.*import static Collection<AbstractBuild<>>.*import Iterable<AbstractBuild<>>import Iterable<AbstractBuild<>>.*import static Iterable<AbstractBuild<>>.*import List<R>import List<R>.*import static List<R>.*import Collection<R>import Collection<R>.*import static Collection<R>.*import LazyLoadingRun<P,R>import LazyLoadingRun<P,R>.*import static LazyLoadingRun<P,R>.*import AbstractProject<P,R>import AbstractProject<P,R>.*import static AbstractProject<P,R>.*import Job<P,R>import Job<P,R>.*import static Job<P,R>.*import LazyLoadingJob<P,R>import LazyLoadingJob<P,R>.*import static LazyLoadingJob<P,R>.*import DoNotUseimport DoNotUse.*import static DoNotUse.*import AbstractCIBaseimport AbstractCIBase.*import static AbstractCIBase.*import ItemGroup<TopLevelItem>import ItemGroup<TopLevelItem>.*import static ItemGroup<TopLevelItem>.*import StaplerProxyimport StaplerProxy.*import static StaplerProxy.*import StaplerFallbackimport StaplerFallback.*import static StaplerFallback.*import ViewGroupimport ViewGroup.*import static ViewGroup.*import Map<Node,Computer>import Map<Node,Computer>.*import static Map<Node,Computer>.*import Viewimport View.*import static View.*import CopyOnWriteArraySetimport CopyOnWriteArraySet.*import static CopyOnWriteArraySet.*import CopyOnWriteArraySet<String>import CopyOnWriteArraySet<String>.*import static CopyOnWriteArraySet<String>.*import AbstractSetimport AbstractSet.*import static AbstractSet.*import AbstractSet<String>import AbstractSet<String>.*import static AbstractSet<String>.*import HttpDeletableimport HttpDeletable.*import static HttpDeletable.*import Argumentimport Argument.*import static Argument.*import OptionHandlerimport OptionHandler.*import static OptionHandler.*import OptionHandler<>import OptionHandler<>.*import static OptionHandler<>.*import StreamSourceimport StreamSource.*import static StreamSource.*import Message<AbstractItem>import Message<AbstractItem>.*import static Message<AbstractItem>.*import SearchableModelObjectimport SearchableModelObject.*import static SearchableModelObject.*import Searchimport Search.*import static Search.*import SearchIndeximport SearchIndex.*import static SearchIndex.*import AbstractProjectDescriptorimport AbstractProjectDescriptor.*import static AbstractProjectDescriptor.*import TopLevelItemDescriptorimport TopLevelItemDescriptor.*import static TopLevelItemDescriptor.*import SCMCheckoutStrategyDescriptorimport SCMCheckoutStrategyDescriptor.*import static SCMCheckoutStrategyDescriptor.*import List<SCMCheckoutStrategyDescriptor>import List<SCMCheckoutStrategyDescriptor>.*import static List<SCMCheckoutStrategyDescriptor>.*import Collection<SCMCheckoutStrategyDescriptor>import Collection<SCMCheckoutStrategyDescriptor>.*import static Collection<SCMCheckoutStrategyDescriptor>.*import Iterable<SCMCheckoutStrategyDescriptor>import Iterable<SCMCheckoutStrategyDescriptor>.*import static Iterable<SCMCheckoutStrategyDescriptor>.*import ? extends Rimport ? extends R.*import static ? extends R.*import SortedMap<Integer,? extends R>import SortedMap<Integer,? extends R>.*import static SortedMap<Integer,? extends R>.*import Map<Integer,? extends R>import Map<Integer,? extends R>.*import static Map<Integer,? extends R>.*import RunList<R>import RunList<R>.*import static RunList<R>.*import AbstractList<R>import AbstractList<R>.*import static AbstractList<R>.*import AbstractCollection<R>import AbstractCollection<R>.*import static AbstractCollection<R>.*import List<JobProperty<? super P>>import List<JobProperty<? super P>>.*import static List<JobProperty<? super P>>.*import Collection<JobProperty<? super P>>import Collection<JobProperty<? super P>>.*import static Collection<JobProperty<? super P>>.*import Iterable<JobProperty<? super P>>import Iterable<JobProperty<? super P>>.*import static Iterable<JobProperty<? super P>>.*import Map<JobPropertyDescriptor,JobProperty<? super P>>import Map<JobPropertyDescriptor,JobProperty<? super P>>.*import static Map<JobPropertyDescriptor,JobProperty<? super P>>.*import AbstractBuild<P,R>import AbstractBuild<P,R>.*import static AbstractBuild<P,R>.*import List<? extends Action>import List<? extends Action>.*import static List<? extends Action>.*import AdministrativeMonitorimport AdministrativeMonitor.*import static AdministrativeMonitor.*import ExtensionList<AdministrativeMonitor>import ExtensionList<AdministrativeMonitor>.*import static ExtensionList<AdministrativeMonitor>.*import AbstractList<AdministrativeMonitor>import AbstractList<AdministrativeMonitor>.*import static AbstractList<AdministrativeMonitor>.*import AbstractCollection<AdministrativeMonitor>import AbstractCollection<AdministrativeMonitor>.*import static AbstractCollection<AdministrativeMonitor>.*import Collection<AdministrativeMonitor>import Collection<AdministrativeMonitor>.*import static Collection<AdministrativeMonitor>.*import Iterable<AdministrativeMonitor>import Iterable<AdministrativeMonitor>.*import static Iterable<AdministrativeMonitor>.*import List<AdministrativeMonitor>import List<AdministrativeMonitor>.*import static List<AdministrativeMonitor>.*import Enum<BallColor>import Enum<BallColor>.*import static Enum<BallColor>.*import Comparable<BallColor>import Comparable<BallColor>.*import static Comparable<BallColor>.*import Class<BallColor>import Class<BallColor>.*import static Class<BallColor>.*import StatusIconimport StatusIcon.*import static StatusIcon.*import Colorimport Color.*import static Color.*import BallColor[]import BallColor[].*import static BallColor[].*import Bimport B.*import static B.*import AbstractBuild<P,B>import AbstractBuild<P,B>.*import static AbstractBuild<P,B>.*import Run<P,B>import Run<P,B>.*import static Run<P,B>.*import Comparable<B>import Comparable<B>.*import static Comparable<B>.*import LazyLoadingRun<P,B>import LazyLoadingRun<P,B>.*import static LazyLoadingRun<P,B>.*import Build<>import Build<>.*import static Build<>.*import List<B>import List<B>.*import static List<B>.*import Collection<B>import Collection<B>.*import static Collection<B>.*import Iterable<B>import Iterable<B>.*import static Iterable<B>.*import BuildReference<B>import BuildReference<B>.*import static BuildReference<B>.*import Project<>import Project<>.*import static Project<>.*import RunMixIn<P,B>import RunMixIn<P,B>.*import static RunMixIn<P,B>.*import Project<P,B>import Project<P,B>.*import static Project<P,B>.*import AbstractProject<P,B>import AbstractProject<P,B>.*import static AbstractProject<P,B>.*import Job<P,B>import Job<P,B>.*import static Job<P,B>.*import LazyLoadingJob<P,B>import LazyLoadingJob<P,B>.*import static LazyLoadingJob<P,B>.*import TimelineEventListimport TimelineEventList.*import static TimelineEventList.*import CauseActionimport CauseAction.*import static CauseAction.*import FoldableActionimport FoldableAction.*import static FoldableAction.*import RunAction2import RunAction2.*import static RunAction2.*import Map<Cause,Integer>import Map<Cause,Integer>.*import static Map<Cause,Integer>.*import ? extends Causeimport ? extends Cause.*import static ? extends Cause.*import Collection<? extends Cause>import Collection<? extends Cause>.*import static Collection<? extends Cause>.*import Iterable<? extends Cause>import Iterable<? extends Cause>.*import static Iterable<? extends Cause>.*import Cause[]import Cause[].*import static Cause[].*import DisplayExecutorimport DisplayExecutor.*import static DisplayExecutor.*import TerminationRequestimport TerminationRequest.*import static TerminationRequest.*import ExecutorListenerimport ExecutorListener.*import static ExecutorListener.*import OneOffExecutorimport OneOffExecutor.*import static OneOffExecutor.*import WorkUnitimport WorkUnit.*import static WorkUnit.*import HeapDumpimport HeapDump.*import static HeapDump.*import RetentionStrategyimport RetentionStrategy.*import static RetentionStrategy.*import RetentionStrategy<>import RetentionStrategy<>.*import static RetentionStrategy<>.*import List<DisplayExecutor>import List<DisplayExecutor>.*import static List<DisplayExecutor>.*import Collection<DisplayExecutor>import Collection<DisplayExecutor>.*import static Collection<DisplayExecutor>.*import Iterable<DisplayExecutor>import Iterable<DisplayExecutor>.*import static Iterable<DisplayExecutor>.*import List<OneOffExecutor>import List<OneOffExecutor>.*import static List<OneOffExecutor>.*import Collection<OneOffExecutor>import Collection<OneOffExecutor>.*import static Collection<OneOffExecutor>.*import Iterable<OneOffExecutor>import Iterable<OneOffExecutor>.*import static Iterable<OneOffExecutor>.*import List<Executor>import List<Executor>.*import static List<Executor>.*import Collection<Executor>import Collection<Executor>.*import static Collection<Executor>.*import Iterable<Executor>import Iterable<Executor>.*import static Iterable<Executor>.*import OfflineCauseimport OfflineCause.*import static OfflineCause.*import LoadStatisticsimport LoadStatistics.*import static LoadStatistics.*import AnnotatedLargeText<Computer>import AnnotatedLargeText<Computer>.*import static AnnotatedLargeText<Computer>.*import ComputerPanelBoximport ComputerPanelBox.*import static ComputerPanelBox.*import List<ComputerPanelBox>import List<ComputerPanelBox>.*import static List<ComputerPanelBox>.*import Collection<ComputerPanelBox>import Collection<ComputerPanelBox>.*import static Collection<ComputerPanelBox>.*import Iterable<ComputerPanelBox>import Iterable<ComputerPanelBox>.*import static Iterable<ComputerPanelBox>.*import List<TerminationRequest>import List<TerminationRequest>.*import static List<TerminationRequest>.*import Collection<TerminationRequest>import Collection<TerminationRequest>.*import static Collection<TerminationRequest>.*import Iterable<TerminationRequest>import Iterable<TerminationRequest>.*import static Iterable<TerminationRequest>.*import ComputerSetimport ComputerSet.*import static ComputerSet.*import Describable<ComputerSet>import Describable<ComputerSet>.*import static Describable<ComputerSet>.*import Descriptor<ComputerSet>import Descriptor<ComputerSet>.*import static Descriptor<ComputerSet>.*import Failureimport Failure.*import static Failure.*import NodeMonitorimport NodeMonitor.*import static NodeMonitor.*import Descriptor<NodeMonitor>import Descriptor<NodeMonitor>.*import static Descriptor<NodeMonitor>.*import Map<Descriptor<NodeMonitor>,NodeMonitor>import Map<Descriptor<NodeMonitor>,NodeMonitor>.*import static Map<Descriptor<NodeMonitor>,NodeMonitor>.*import DescribableList<NodeMonitor,Descriptor<NodeMonitor>>import DescribableList<NodeMonitor,Descriptor<NodeMonitor>>.*import static DescribableList<NodeMonitor,Descriptor<NodeMonitor>>.*import PersistedList<NodeMonitor>import PersistedList<NodeMonitor>.*import static PersistedList<NodeMonitor>.*import AbstractList<NodeMonitor>import AbstractList<NodeMonitor>.*import static AbstractList<NodeMonitor>.*import AbstractCollection<NodeMonitor>import AbstractCollection<NodeMonitor>.*import static AbstractCollection<NodeMonitor>.*import Collection<NodeMonitor>import Collection<NodeMonitor>.*import static Collection<NodeMonitor>.*import Iterable<NodeMonitor>import Iterable<NodeMonitor>.*import static Iterable<NodeMonitor>.*import List<NodeMonitor>import List<NodeMonitor>.*import static List<NodeMonitor>.*import DescriptorExtensionList<NodeMonitor,Descriptor<NodeMonitor>>import DescriptorExtensionList<NodeMonitor,Descriptor<NodeMonitor>>.*import static DescriptorExtensionList<NodeMonitor,Descriptor<NodeMonitor>>.*import ExtensionList<Descriptor<NodeMonitor>>import ExtensionList<Descriptor<NodeMonitor>>.*import static ExtensionList<Descriptor<NodeMonitor>>.*import AbstractList<Descriptor<NodeMonitor>>import AbstractList<Descriptor<NodeMonitor>>.*import static AbstractList<Descriptor<NodeMonitor>>.*import AbstractCollection<Descriptor<NodeMonitor>>import AbstractCollection<Descriptor<NodeMonitor>>.*import static AbstractCollection<Descriptor<NodeMonitor>>.*import Collection<Descriptor<NodeMonitor>>import Collection<Descriptor<NodeMonitor>>.*import static Collection<Descriptor<NodeMonitor>>.*import Iterable<Descriptor<NodeMonitor>>import Iterable<Descriptor<NodeMonitor>>.*import static Iterable<Descriptor<NodeMonitor>>.*import List<Descriptor<NodeMonitor>>import List<Descriptor<NodeMonitor>>.*import static List<Descriptor<NodeMonitor>>.*import Computer[]import Computer[].*import static Computer[].*import Comparator<AbstractProject<>>import Comparator<AbstractProject<>>.*import static Comparator<AbstractProject<>>.*import ToDoubleFunctionimport ToDoubleFunction.*import static ToDoubleFunction.*import ToDoubleFunction<>import ToDoubleFunction<>.*import static ToDoubleFunction<>.*import Comparator<T>import Comparator<T>.*import static Comparator<T>.*import ToDoubleFunction<? super T>import ToDoubleFunction<? super T>.*import static ToDoubleFunction<? super T>.*import ToLongFunctionimport ToLongFunction.*import static ToLongFunction.*import ToLongFunction<>import ToLongFunction<>.*import static ToLongFunction<>.*import ToLongFunction<? super T>import ToLongFunction<? super T>.*import static ToLongFunction<? super T>.*import ToIntFunctionimport ToIntFunction.*import static ToIntFunction.*import ToIntFunction<>import ToIntFunction<>.*import static ToIntFunction<>.*import ToIntFunction<? super T>import ToIntFunction<? super T>.*import static ToIntFunction<? super T>.*import ? super Uimport ? super U.*import static ? super U.*import Comparable<? super U>import Comparable<? super U>.*import static Comparable<? super U>.*import Function<? super T,? extends U>import Function<? super T,? extends U>.*import static Function<? super T,? extends U>.*import Comparator<? super U>import Comparator<? super U>.*import static Comparator<? super U>.*import Comparable<? super T>import Comparable<? super T>.*import static Comparable<? super T>.*import ToDoubleFunction<? super AbstractProject<>>import ToDoubleFunction<? super AbstractProject<>>.*import static ToDoubleFunction<? super AbstractProject<>>.*import ToLongFunction<? super AbstractProject<>>import ToLongFunction<? super AbstractProject<>>.*import static ToLongFunction<? super AbstractProject<>>.*import ToIntFunction<? super AbstractProject<>>import ToIntFunction<? super AbstractProject<>>.*import static ToIntFunction<? super AbstractProject<>>.*import Function<? super AbstractProject<>,? extends U>import Function<? super AbstractProject<>,? extends U>.*import static Function<? super AbstractProject<>,? extends U>.*import Comparator<? super AbstractProject<>>import Comparator<? super AbstractProject<>>.*import static Comparator<? super AbstractProject<>>.*import List<AbstractProject<?,?>>import List<AbstractProject<?,?>>.*import static List<AbstractProject<?,?>>.*import Collection<AbstractProject<?,?>>import Collection<AbstractProject<?,?>>.*import static Collection<AbstractProject<?,?>>.*import Iterable<AbstractProject<?,?>>import Iterable<AbstractProject<?,?>>.*import static Iterable<AbstractProject<?,?>>.*import Collection<? extends AbstractProject<>>import Collection<? extends AbstractProject<>>.*import static Collection<? extends AbstractProject<>>.*import Iterable<? extends AbstractProject<>>import Iterable<? extends AbstractProject<>>.*import static Iterable<? extends AbstractProject<>>.*import ? extends Descriptor<>import ? extends Descriptor<>.*import static ? extends Descriptor<>.*import List<? extends Descriptor<>>import List<? extends Descriptor<>>.*import static List<? extends Descriptor<>>.*import Collection<? extends Descriptor<>>import Collection<? extends Descriptor<>>.*import static Collection<? extends Descriptor<>>.*import Iterable<? extends Descriptor<>>import Iterable<? extends Descriptor<>>.*import static Iterable<? extends Descriptor<>>.*import Enum[]import Enum[].*import static Enum[].*import Enum<>[]import Enum<>[].*import static Enum<>[].*import AbstractList<Environment>import AbstractList<Environment>.*import static AbstractList<Environment>.*import AbstractCollection<Environment>import AbstractCollection<Environment>.*import static AbstractCollection<Environment>.*import Spliterator<Environment>import Spliterator<Environment>.*import static Spliterator<Environment>.*import ? super Environmentimport ? super Environment.*import static ? super Environment.*import Consumer<? super Environment>import Consumer<? super Environment>.*import static Consumer<? super Environment>.*import Iterator<Environment>import Iterator<Environment>.*import static Iterator<Environment>.*import Stream<Environment>import Stream<Environment>.*import static Stream<Environment>.*import BaseStream<Environment,Stream<Environment>>import BaseStream<Environment,Stream<Environment>>.*import static BaseStream<Environment,Stream<Environment>>.*import Predicate<? super Environment>import Predicate<? super Environment>.*import static Predicate<? super Environment>.*import ? extends Environmentimport ? extends Environment.*import static ? extends Environment.*import Collection<? extends Environment>import Collection<? extends Environment>.*import static Collection<? extends Environment>.*import Iterable<? extends Environment>import Iterable<? extends Environment>.*import static Iterable<? extends Environment>.*import ListIterator<Environment>import ListIterator<Environment>.*import static ListIterator<Environment>.*import Comparator<? super Environment>import Comparator<? super Environment>.*import static Comparator<? super Environment>.*import UnaryOperator<Environment>import UnaryOperator<Environment>.*import static UnaryOperator<Environment>.*import Function<Environment,Environment>import Function<Environment,Environment>.*import static Function<Environment,Environment>.*import EnvironmentSpecificimport EnvironmentSpecific.*import static EnvironmentSpecific.*import EnvironmentSpecific<>import EnvironmentSpecific<>.*import static EnvironmentSpecific<>.*import AsynchronousExecutionimport AsynchronousExecution.*import static AsynchronousExecution.*import CauseOfInterruptionimport CauseOfInterruption.*import static CauseOfInterruption.*import CauseOfInterruption[]import CauseOfInterruption[].*import static CauseOfInterruption[].*import BuildPtrimport BuildPtr.*import static BuildPtr.*import RangeItemimport RangeItem.*import static RangeItem.*import Iterable<Integer>import Iterable<Integer>.*import static Iterable<Integer>.*import FingerprintFacetimport FingerprintFacet.*import static FingerprintFacet.*import Collection<FingerprintFacet>import Collection<FingerprintFacet>.*import static Collection<FingerprintFacet>.*import Iterable<FingerprintFacet>import Iterable<FingerprintFacet>.*import static Iterable<FingerprintFacet>.*import List<RangeItem>import List<RangeItem>.*import static List<RangeItem>.*import Collection<RangeItem>import Collection<RangeItem>.*import static Collection<RangeItem>.*import Iterable<RangeItem>import Iterable<RangeItem>.*import static Iterable<RangeItem>.*import Hashtable<>import Hashtable<>.*import static Hashtable<>.*import Dictionary<>import Dictionary<>.*import static Dictionary<>.*import Hashtable<String,RangeSet>import Hashtable<String,RangeSet>.*import static Hashtable<String,RangeSet>.*import Dictionary<String,RangeSet>import Dictionary<String,RangeSet>.*import static Dictionary<String,RangeSet>.*import Map<String,RangeSet>import Map<String,RangeSet>.*import static Map<String,RangeSet>.*import PersistedList<FingerprintFacet>import PersistedList<FingerprintFacet>.*import static PersistedList<FingerprintFacet>.*import AbstractList<FingerprintFacet>import AbstractList<FingerprintFacet>.*import static AbstractList<FingerprintFacet>.*import AbstractCollection<FingerprintFacet>import AbstractCollection<FingerprintFacet>.*import static AbstractCollection<FingerprintFacet>.*import List<FingerprintFacet>import List<FingerprintFacet>.*import static List<FingerprintFacet>.*import FingerprintParamsimport FingerprintParams.*import static FingerprintParams.*import FingerprintMapimport FingerprintMap.*import static FingerprintMap.*import KeyedDataStorageimport KeyedDataStorage.*import static KeyedDataStorage.*import KeyedDataStorage<Fingerprint,FingerprintParams>import KeyedDataStorage<Fingerprint,FingerprintParams>.*import static KeyedDataStorage<Fingerprint,FingerprintParams>.*import Build<FreeStyleProject,FreeStyleBuild>import Build<FreeStyleProject,FreeStyleBuild>.*import static Build<FreeStyleProject,FreeStyleBuild>.*import Comparable<HealthReport>import Comparable<HealthReport>.*import static Comparable<HealthReport>.*import Localizableimport Localizable.*import static Localizable.*import CloudListimport CloudList.*import static CloudList.*import Slaveimport Slave.*import static Slave.*import List<Slave>import List<Slave>.*import static List<Slave>.*import Collection<Slave>import Collection<Slave>.*import static Collection<Slave>.*import Iterable<Slave>import Iterable<Slave>.*import static Iterable<Slave>.*import CopyOnWriteList<>import CopyOnWriteList<>.*import static CopyOnWriteList<>.*import ComputerListenerimport ComputerListener.*import static ComputerListener.*import CopyOnWriteList<ComputerListener>import CopyOnWriteList<ComputerListener>.*import static CopyOnWriteList<ComputerListener>.*import Iterable<ComputerListener>import Iterable<ComputerListener>.*import static Iterable<ComputerListener>.*import ItemListenerimport ItemListener.*import static ItemListener.*import CopyOnWriteList<ItemListener>import CopyOnWriteList<ItemListener>.*import static CopyOnWriteList<ItemListener>.*import Iterable<ItemListener>import Iterable<ItemListener>.*import static Iterable<ItemListener>.*import ReactorExceptionimport ReactorException.*import static ReactorException.*import InvisibleActionimport InvisibleAction.*import static InvisibleAction.*import ToolInstallationimport ToolInstallation.*import static ToolInstallation.*import NodeSpecificimport NodeSpecific.*import static NodeSpecific.*import NodeSpecific<JDK>import NodeSpecific<JDK>.*import static NodeSpecific<JDK>.*import NodeSpecific<>import NodeSpecific<>.*import static NodeSpecific<>.*import EnvironmentSpecific<JDK>import EnvironmentSpecific<JDK>.*import static EnvironmentSpecific<JDK>.*import ToolPropertyimport ToolProperty.*import static ToolProperty.*import ToolProperty<?>import ToolProperty<?>.*import static ToolProperty<?>.*import Describable<ToolProperty<?>>import Describable<ToolProperty<?>>.*import static Describable<ToolProperty<?>>.*import ? extends ToolProperty<?>import ? extends ToolProperty<?>.*import static ? extends ToolProperty<?>.*import List<? extends ToolProperty<?>>import List<? extends ToolProperty<?>>.*import static List<? extends ToolProperty<?>>.*import Collection<? extends ToolProperty<?>>import Collection<? extends ToolProperty<?>>.*import static Collection<? extends ToolProperty<?>>.*import Iterable<? extends ToolProperty<?>>import Iterable<? extends ToolProperty<?>>.*import static Iterable<? extends ToolProperty<?>>.*import QuickSilverimport QuickSilver.*import static QuickSilver.*import Descriptor<JobProperty<?>>import Descriptor<JobProperty<?>>.*import static Descriptor<JobProperty<?>>.*import ? extends SubTaskimport ? extends SubTask.*import static ? extends SubTask.*import Collection<? extends SubTask>import Collection<? extends SubTask>.*import static Collection<? extends SubTask>.*import Iterable<? extends SubTask>import Iterable<? extends SubTask>.*import static Iterable<? extends SubTask>.*import Class<JobProperty<?>>import Class<JobProperty<?>>.*import static Class<JobProperty<?>>.*import ? extends JobProperty<?>import ? extends JobProperty<?>.*import static ? extends JobProperty<?>.*import Class<? extends JobProperty<?>>import Class<? extends JobProperty<?>>.*import static Class<? extends JobProperty<?>>.*import Collection<JobPropertyDescriptor>import Collection<JobPropertyDescriptor>.*import static Collection<JobPropertyDescriptor>.*import Iterable<JobPropertyDescriptor>import Iterable<JobPropertyDescriptor>.*import static Iterable<JobPropertyDescriptor>.*import Class<? extends Job<>>import Class<? extends Job<>>.*import static Class<? extends Job<>>.*import List<JobPropertyDescriptor>import List<JobPropertyDescriptor>.*import static List<JobPropertyDescriptor>.*import Comparable<Label>import Comparable<Label>.*import static Comparable<Label>.*import LabelAtomimport LabelAtom.*import static LabelAtom.*import Set<LabelAtom>import Set<LabelAtom>.*import static Set<LabelAtom>.*import Collection<LabelAtom>import Collection<LabelAtom>.*import static Collection<LabelAtom>.*import Iterable<LabelAtom>import Iterable<LabelAtom>.*import static Iterable<LabelAtom>.*import LabelOperatorPrecedenceimport LabelOperatorPrecedence.*import static LabelOperatorPrecedence.*import LabelVisitorimport LabelVisitor.*import static LabelVisitor.*import LabelVisitor<>import LabelVisitor<>.*import static LabelVisitor<>.*import LabelVisitor<V,P>import LabelVisitor<V,P>.*import static LabelVisitor<V,P>.*import Cloudimport Cloud.*import static Cloud.*import Set<Cloud>import Set<Cloud>.*import static Set<Cloud>.*import Collection<Cloud>import Collection<Cloud>.*import static Collection<Cloud>.*import Iterable<Cloud>import Iterable<Cloud>.*import static Iterable<Cloud>.*import Set<Node>import Set<Node>.*import static Set<Node>.*import VariableResolver<Boolean>import VariableResolver<Boolean>.*import static VariableResolver<Boolean>.*import NodeProvisionerimport NodeProvisioner.*import static NodeProvisioner.*import LoadBalancerimport LoadBalancer.*import static LoadBalancer.*import MappingWorksheetimport MappingWorksheet.*import static MappingWorksheet.*import Mappingimport Mapping.*import static Mapping.*import LoadStatisticsSnapshotimport LoadStatisticsSnapshot.*import static LoadStatisticsSnapshot.*import Iterable<BuildableItem>import Iterable<BuildableItem>.*import static Iterable<BuildableItem>.*import TrendChartimport TrendChart.*import static TrendChart.*import TimeScaleimport TimeScale.*import static TimeScale.*import LineAndShapeRendererimport LineAndShapeRenderer.*import static LineAndShapeRenderer.*import CategoryDatasetimport CategoryDataset.*import static CategoryDataset.*import JFreeChartimport JFreeChart.*import static JFreeChart.*import ? extends LoadStatisticsimport ? extends LoadStatistics.*import static ? extends LoadStatistics.*import Class<? extends LoadStatistics>import Class<? extends LoadStatistics>.*import static Class<? extends LoadStatistics>.*import MultiStageTimeSeriesimport MultiStageTimeSeries.*import static MultiStageTimeSeries.*import ManagementLinkimport ManagementLink.*import static ManagementLink.*import ExtensionList<ManagementLink>import ExtensionList<ManagementLink>.*import static ExtensionList<ManagementLink>.*import AbstractList<ManagementLink>import AbstractList<ManagementLink>.*import static AbstractList<ManagementLink>.*import AbstractCollection<ManagementLink>import AbstractCollection<ManagementLink>.*import static AbstractCollection<ManagementLink>.*import Collection<ManagementLink>import Collection<ManagementLink>.*import static Collection<ManagementLink>.*import Iterable<ManagementLink>import Iterable<ManagementLink>.*import static Iterable<ManagementLink>.*import List<ManagementLink>import List<ManagementLink>.*import static List<ManagementLink>.*import ModifiableItemGroupimport ModifiableItemGroup.*import static ModifiableItemGroup.*import ItemGroup<T>import ItemGroup<T>.*import static ItemGroup<T>.*import ModifiableViewGroupimport ModifiableViewGroup.*import static ModifiableViewGroup.*import Enum<TimeScale>import Enum<TimeScale>.*import static Enum<TimeScale>.*import Comparable<TimeScale>import Comparable<TimeScale>.*import static Comparable<TimeScale>.*import Class<TimeScale>import Class<TimeScale>.*import static Class<TimeScale>.*import DateFormatimport DateFormat.*import static DateFormat.*import TimeScale[]import TimeScale[].*import static TimeScale[].*import CategoryPlotimport CategoryPlot.*import static CategoryPlot.*import CategoryAxisimport CategoryAxis.*import static CategoryAxis.*import NumberAxisimport NumberAxis.*import static NumberAxis.*import DefaultCategoryDatasetimport DefaultCategoryDataset.*import static DefaultCategoryDataset.*import MultiStageTimeSeries[]import MultiStageTimeSeries[].*import static MultiStageTimeSeries[].*import List<MultiStageTimeSeries>import List<MultiStageTimeSeries>.*import static List<MultiStageTimeSeries>.*import Collection<MultiStageTimeSeries>import Collection<MultiStageTimeSeries>.*import static Collection<MultiStageTimeSeries>.*import Iterable<MultiStageTimeSeries>import Iterable<MultiStageTimeSeries>.*import static Iterable<MultiStageTimeSeries>.*import TimeSeriesimport TimeSeries.*import static TimeSeries.*import Modeimport Mode.*import static Mode.*import Enum<Mode>import Enum<Mode>.*import static Enum<Mode>.*import Comparable<Mode>import Comparable<Mode>.*import static Comparable<Mode>.*import Class<Mode>import Class<Mode>.*import static Class<Mode>.*import Mode[]import Mode[].*import static Mode[].*import ReconfigurableDescribable<Node>import ReconfigurableDescribable<Node>.*import static ReconfigurableDescribable<Node>.*import Describable<Node>import Describable<Node>.*import static Describable<Node>.*import Descriptor<Node>import Descriptor<Node>.*import static Descriptor<Node>.*import ClockDifferenceimport ClockDifference.*import static ClockDifference.*import Callable<ClockDifference,IOException>import Callable<ClockDifference,IOException>.*import static Callable<ClockDifference,IOException>.*import NodeDescriptorimport NodeDescriptor.*import static NodeDescriptor.*import NodePropertyDescriptorimport NodePropertyDescriptor.*import static NodePropertyDescriptor.*import List<NodePropertyDescriptor>import List<NodePropertyDescriptor>.*import static List<NodePropertyDescriptor>.*import Collection<NodePropertyDescriptor>import Collection<NodePropertyDescriptor>.*import static Collection<NodePropertyDescriptor>.*import Iterable<NodePropertyDescriptor>import Iterable<NodePropertyDescriptor>.*import static Iterable<NodePropertyDescriptor>.*import NodePropertyimport NodeProperty.*import static NodeProperty.*import NodeProperty<?>import NodeProperty<?>.*import static NodeProperty<?>.*import ReconfigurableDescribable<NodeProperty<?>>import ReconfigurableDescribable<NodeProperty<?>>.*import static ReconfigurableDescribable<NodeProperty<?>>.*import Describable<NodeProperty<?>>import Describable<NodeProperty<?>>.*import static Describable<NodeProperty<?>>.*import DescribableList<NodeProperty<?>,NodePropertyDescriptor>import DescribableList<NodeProperty<?>,NodePropertyDescriptor>.*import static DescribableList<NodeProperty<?>,NodePropertyDescriptor>.*import PersistedList<NodeProperty<?>>import PersistedList<NodeProperty<?>>.*import static PersistedList<NodeProperty<?>>.*import AbstractList<NodeProperty<?>>import AbstractList<NodeProperty<?>>.*import static AbstractList<NodeProperty<?>>.*import AbstractCollection<NodeProperty<?>>import AbstractCollection<NodeProperty<?>>.*import static AbstractCollection<NodeProperty<?>>.*import Collection<NodeProperty<?>>import Collection<NodeProperty<?>>.*import static Collection<NodeProperty<?>>.*import Iterable<NodeProperty<?>>import Iterable<NodeProperty<?>>.*import static Iterable<NodeProperty<?>>.*import List<NodeProperty<?>>import List<NodeProperty<?>>.*import static List<NodeProperty<?>>.*import TagCloudimport TagCloud.*import static TagCloud.*import TagCloud<>import TagCloud<>.*import static TagCloud<>.*import TagCloud<LabelAtom>import TagCloud<LabelAtom>.*import static TagCloud<LabelAtom>.*import AbstractList<Entry<>>import AbstractList<Entry<>>.*import static AbstractList<Entry<>>.*import AbstractCollection<Entry<>>import AbstractCollection<Entry<>>.*import static AbstractCollection<Entry<>>.*import Collection<Entry<>>import Collection<Entry<>>.*import static Collection<Entry<>>.*import Iterable<Entry<>>import Iterable<Entry<>>.*import static Iterable<Entry<>>.*import List<Entry<>>import List<Entry<>>.*import static List<Entry<>>.*import OverallLoadStatisticsimport OverallLoadStatistics.*import static OverallLoadStatistics.*import PermalinkProjectActionimport PermalinkProjectAction.*import static PermalinkProjectAction.*import ? extends Bimport ? extends B.*import static ? extends B.*import SortedMap<Integer,? extends B>import SortedMap<Integer,? extends B>.*import static SortedMap<Integer,? extends B>.*import Map<Integer,? extends B>import Map<Integer,? extends B>.*import static Map<Integer,? extends B>.*import RunList<B>import RunList<B>.*import static RunList<B>.*import AbstractList<B>import AbstractList<B>.*import static AbstractList<B>.*import AbstractCollection<B>import AbstractCollection<B>.*import static AbstractCollection<B>.*import SortedMap<Integer,B>import SortedMap<Integer,B>.*import static SortedMap<Integer,B>.*import Map<Integer,B>import Map<Integer,B>.*import static Map<Integer,B>.*import LazyBuildMixIn<P,B>import LazyBuildMixIn<P,B>.*import static LazyBuildMixIn<P,B>.*import Class<B>import Class<B>.*import static Class<B>.*import RunMap<B>import RunMap<B>.*import static RunMap<B>.*import AbstractLazyLoadRunMap<B>import AbstractLazyLoadRunMap<B>.*import static AbstractLazyLoadRunMap<B>.*import AbstractMap<Integer,B>import AbstractMap<Integer,B>.*import static AbstractMap<Integer,B>.*import QueueTaskFuture<B>import QueueTaskFuture<B>.*import static QueueTaskFuture<B>.*import Future<B>import Future<B>.*import static Future<B>.*import Build<P,B>import Build<P,B>.*import static Build<P,B>.*import BlockedItemimport BlockedItem.*import static BlockedItem.*import NotWaitingItemimport NotWaitingItem.*import static NotWaitingItem.*import WaitingItemimport WaitingItem.*import static WaitingItem.*import FutureImplimport FutureImpl.*import static FutureImpl.*import QueueTaskFuture<Executable>import QueueTaskFuture<Executable>.*import static QueueTaskFuture<Executable>.*import Future<Executable>import Future<Executable>.*import static Future<Executable>.*import LeftItemimport LeftItem.*import static LeftItem.*import WorkUnitContextimport WorkUnitContext.*import static WorkUnitContext.*import StubItemimport StubItem.*import static StubItem.*import StubTaskimport StubTask.*import static StubTask.*import Comparable<WaitingItem>import Comparable<WaitingItem>.*import static Comparable<WaitingItem>.*import ResourceControllerimport ResourceController.*import static ResourceController.*import Callable<V>import Callable<V>.*import static Callable<V>.*import Callable<V,T>import Callable<V,T>.*import static Callable<V,T>.*import List<Item>import List<Item>.*import static List<Item>.*import Collection<Item>import Collection<Item>.*import static Collection<Item>.*import Iterable<Item>import Iterable<Item>.*import static Iterable<Item>.*import Nonnegativeimport Nonnegative.*import static Nonnegative.*import Set<Task>import Set<Task>.*import static Set<Task>.*import Collection<Task>import Collection<Task>.*import static Collection<Task>.*import Iterable<Task>import Iterable<Task>.*import static Iterable<Task>.*import Collection<LeftItem>import Collection<LeftItem>.*import static Collection<LeftItem>.*import Iterable<LeftItem>import Iterable<LeftItem>.*import static Iterable<LeftItem>.*import List<BlockedItem>import List<BlockedItem>.*import static List<BlockedItem>.*import Collection<BlockedItem>import Collection<BlockedItem>.*import static Collection<BlockedItem>.*import Iterable<BlockedItem>import Iterable<BlockedItem>.*import static Iterable<BlockedItem>.*import List<BuildableItem>import List<BuildableItem>.*import static List<BuildableItem>.*import Collection<BuildableItem>import Collection<BuildableItem>.*import static Collection<BuildableItem>.*import StubItem[]import StubItem[].*import static StubItem[].*import Item[]import Item[].*import static Item[].*import ScheduleResultimport ScheduleResult.*import static ScheduleResult.*import QueueSorterimport QueueSorter.*import static QueueSorter.*import Collection<ResourceList>import Collection<ResourceList>.*import static Collection<ResourceList>.*import Iterable<ResourceList>import Iterable<ResourceList>.*import static Iterable<ResourceList>.*import ResourceList[]import ResourceList[].*import static ResourceList[].*import CustomExportedBeanimport CustomExportedBean.*import static CustomExportedBean.*import RootActionimport RootAction.*import static RootAction.*import Job<JobT,RunT>import Job<JobT,RunT>.*import static Job<JobT,RunT>.*import Run<?,R>import Run<?,R>.*import static Run<?,R>.*import ? super Rimport ? super R.*import static ? super R.*import BiFunction<? super R,? super R,? extends R>import BiFunction<? super R,? super R,? extends R>.*import static BiFunction<? super R,? super R,? extends R>.*import ? super Integerimport ? super Integer.*import static ? super Integer.*import BiFunction<? super Integer,? super R,? extends R>import BiFunction<? super Integer,? super R,? extends R>.*import static BiFunction<? super Integer,? super R,? extends R>.*import Function<? super Integer,? extends R>import Function<? super Integer,? extends R>.*import static Function<? super Integer,? extends R>.*import BiConsumer<? super Integer,? super R>import BiConsumer<? super Integer,? super R>.*import static BiConsumer<? super Integer,? super R>.*import Entry<Integer,R>import Entry<Integer,R>.*import static Entry<Integer,R>.*import Set<Entry<Integer,R>>import Set<Entry<Integer,R>>.*import static Set<Entry<Integer,R>>.*import Collection<Entry<Integer,R>>import Collection<Entry<Integer,R>>.*import static Collection<Entry<Integer,R>>.*import Iterable<Entry<Integer,R>>import Iterable<Entry<Integer,R>>.*import static Iterable<Entry<Integer,R>>.*import Set<Integer>import Set<Integer>.*import static Set<Integer>.*import Collection<Integer>import Collection<Integer>.*import static Collection<Integer>.*import ? extends Integerimport ? extends Integer.*import static ? extends Integer.*import Map<? extends Integer,? extends R>import Map<? extends Integer,? extends R>.*import static Map<? extends Integer,? extends R>.*import Comparator<? super Integer>import Comparator<? super Integer>.*import static Comparator<? super Integer>.*import TreeMap<Integer,R>import TreeMap<Integer,R>.*import static TreeMap<Integer,R>.*import NavigableMap<Integer,R>import NavigableMap<Integer,R>.*import static NavigableMap<Integer,R>.*import Indeximport Index.*import static Index.*import Index<>import Index<>.*import static Index<>.*import TreeMap<Integer,BuildReference<R>>import TreeMap<Integer,BuildReference<R>>.*import static TreeMap<Integer,BuildReference<R>>.*import AbstractMap<Integer,BuildReference<R>>import AbstractMap<Integer,BuildReference<R>>.*import static AbstractMap<Integer,BuildReference<R>>.*import Map<Integer,BuildReference<R>>import Map<Integer,BuildReference<R>>.*import static Map<Integer,BuildReference<R>>.*import NavigableMap<Integer,BuildReference<R>>import NavigableMap<Integer,BuildReference<R>>.*import static NavigableMap<Integer,BuildReference<R>>.*import SortedMap<Integer,BuildReference<R>>import SortedMap<Integer,BuildReference<R>>.*import static SortedMap<Integer,BuildReference<R>>.*import Directionimport Direction.*import static Direction.*import Spliterator<R>import Spliterator<R>.*import static Spliterator<R>.*import Consumer<? super R>import Consumer<? super R>.*import static Consumer<? super R>.*import Iterator<R>import Iterator<R>.*import static Iterator<R>.*import Constructor<R>import Constructor<R>.*import static Constructor<R>.*import Comparator<Comparable<>>import Comparator<Comparable<>>.*import static Comparator<Comparable<>>.*import JnlpJarimport JnlpJar.*import static JnlpJar.*import SlaveDescriptorimport SlaveDescriptor.*import static SlaveDescriptor.*import SlaveComputerimport SlaveComputer.*import static SlaveComputer.*import ComputerLauncherimport ComputerLauncher.*import static ComputerLauncher.*import ? extends NodeProperty<?>import ? extends NodeProperty<?>.*import static ? extends NodeProperty<?>.*import List<? extends NodeProperty<?>>import List<? extends NodeProperty<?>>.*import static List<? extends NodeProperty<?>>.*import Collection<? extends NodeProperty<?>>import Collection<? extends NodeProperty<?>>.*import static Collection<? extends NodeProperty<?>>.*import Iterable<? extends NodeProperty<?>>import Iterable<? extends NodeProperty<?>>.*import static Iterable<? extends NodeProperty<?>>.*import float[]import float[].*import static float[].*import Describable<TopLevelItem>import Describable<TopLevelItem>.*import static Describable<TopLevelItem>.*import Descriptor<TopLevelItem>import Descriptor<TopLevelItem>.*import static Descriptor<TopLevelItem>.*import Class<TopLevelItem>import Class<TopLevelItem>.*import static Class<TopLevelItem>.*import ? extends TopLevelItemimport ? extends TopLevelItem.*import static ? extends TopLevelItem.*import Class<? extends TopLevelItem>import Class<? extends TopLevelItem>.*import static Class<? extends TopLevelItem>.*import ExtensionList<TopLevelItemDescriptor>import ExtensionList<TopLevelItemDescriptor>.*import static ExtensionList<TopLevelItemDescriptor>.*import AbstractList<TopLevelItemDescriptor>import AbstractList<TopLevelItemDescriptor>.*import static AbstractList<TopLevelItemDescriptor>.*import AbstractCollection<TopLevelItemDescriptor>import AbstractCollection<TopLevelItemDescriptor>.*import static AbstractCollection<TopLevelItemDescriptor>.*import Collection<TopLevelItemDescriptor>import Collection<TopLevelItemDescriptor>.*import static Collection<TopLevelItemDescriptor>.*import Iterable<TopLevelItemDescriptor>import Iterable<TopLevelItemDescriptor>.*import static Iterable<TopLevelItemDescriptor>.*import List<TopLevelItemDescriptor>import List<TopLevelItemDescriptor>.*import static List<TopLevelItemDescriptor>.*import ConnectionCheckJobimport ConnectionCheckJob.*import static ConnectionCheckJob.*import UpdateCenterimport UpdateCenter.*import static UpdateCenter.*import UpdateSiteimport UpdateSite.*import static UpdateSite.*import InstallationStatusimport InstallationStatus.*import static InstallationStatus.*import DownloadJobimport DownloadJob.*import static DownloadJob.*import HudsonUpgradeJobimport HudsonUpgradeJob.*import static HudsonUpgradeJob.*import InstallationJobimport InstallationJob.*import static InstallationJob.*import PluginEntryimport PluginEntry.*import static PluginEntry.*import Comparable<PluginEntry>import Comparable<PluginEntry>.*import static Comparable<PluginEntry>.*import UpdateCenterConfigurationimport UpdateCenterConfiguration.*import static UpdateCenterConfiguration.*import List<FormValidation>import List<FormValidation>.*import static List<FormValidation>.*import Collection<FormValidation>import Collection<FormValidation>.*import static Collection<FormValidation>.*import Iterable<FormValidation>import Iterable<FormValidation>.*import static Iterable<FormValidation>.*import List<Plugin>import List<Plugin>.*import static List<Plugin>.*import Collection<Plugin>import Collection<Plugin>.*import static Collection<Plugin>.*import Iterable<Plugin>import Iterable<Plugin>.*import static Iterable<Plugin>.*import PluginEntry[]import PluginEntry[].*import static PluginEntry[].*import List<UpdateSite>import List<UpdateSite>.*import static List<UpdateSite>.*import Collection<UpdateSite>import Collection<UpdateSite>.*import static Collection<UpdateSite>.*import Iterable<UpdateSite>import Iterable<UpdateSite>.*import static Iterable<UpdateSite>.*import PersistedList<UpdateSite>import PersistedList<UpdateSite>.*import static PersistedList<UpdateSite>.*import AbstractList<UpdateSite>import AbstractList<UpdateSite>.*import static AbstractList<UpdateSite>.*import AbstractCollection<UpdateSite>import AbstractCollection<UpdateSite>.*import static AbstractCollection<UpdateSite>.*import List<UpdateCenterJob>import List<UpdateCenterJob>.*import static List<UpdateCenterJob>.*import Collection<UpdateCenterJob>import Collection<UpdateCenterJob>.*import static Collection<UpdateCenterJob>.*import Iterable<UpdateCenterJob>import Iterable<UpdateCenterJob>.*import static Iterable<UpdateCenterJob>.*import Dataimport Data.*import static Data.*import Map<String,Plugin>import Map<String,Plugin>.*import static Map<String,Plugin>.*import JSONSignatureValidatorimport JSONSignatureValidator.*import static JSONSignatureValidator.*import GeneralSecurityExceptionimport GeneralSecurityException.*import static GeneralSecurityException.*import Future<FormValidation>import Future<FormValidation>.*import static Future<FormValidation>.*import Comparable<User>import Comparable<User>.*import static Comparable<User>.*import Set<AbstractProject<?,?>>import Set<AbstractProject<?,?>>.*import static Set<AbstractProject<?,?>>.*import UsernameNotFoundExceptionimport UsernameNotFoundException.*import static UsernameNotFoundException.*import UserPropertyimport UserProperty.*import static UserProperty.*import List<UserProperty>import List<UserProperty>.*import static List<UserProperty>.*import Collection<UserProperty>import Collection<UserProperty>.*import static Collection<UserProperty>.*import Iterable<UserProperty>import Iterable<UserProperty>.*import static Iterable<UserProperty>.*import Descriptor<UserProperty>import Descriptor<UserProperty>.*import static Descriptor<UserProperty>.*import Map<Descriptor<UserProperty>,UserProperty>import Map<Descriptor<UserProperty>,UserProperty>.*import static Map<Descriptor<UserProperty>,UserProperty>.*import IdStrategyimport IdStrategy.*import static IdStrategy.*import ReconfigurableDescribable<UserProperty>import ReconfigurableDescribable<UserProperty>.*import static ReconfigurableDescribable<UserProperty>.*import Describable<UserProperty>import Describable<UserProperty>.*import static Describable<UserProperty>.*import UserPropertyDescriptorimport UserPropertyDescriptor.*import static UserPropertyDescriptor.*import DescriptorExtensionList<UserProperty,UserPropertyDescriptor>import DescriptorExtensionList<UserProperty,UserPropertyDescriptor>.*import static DescriptorExtensionList<UserProperty,UserPropertyDescriptor>.*import ExtensionList<UserPropertyDescriptor>import ExtensionList<UserPropertyDescriptor>.*import static ExtensionList<UserPropertyDescriptor>.*import AbstractList<UserPropertyDescriptor>import AbstractList<UserPropertyDescriptor>.*import static AbstractList<UserPropertyDescriptor>.*import AbstractCollection<UserPropertyDescriptor>import AbstractCollection<UserPropertyDescriptor>.*import static AbstractCollection<UserPropertyDescriptor>.*import Collection<UserPropertyDescriptor>import Collection<UserPropertyDescriptor>.*import static Collection<UserPropertyDescriptor>.*import Iterable<UserPropertyDescriptor>import Iterable<UserPropertyDescriptor>.*import static Iterable<UserPropertyDescriptor>.*import List<UserPropertyDescriptor>import List<UserPropertyDescriptor>.*import static List<UserPropertyDescriptor>.*import Class<UserProperty>import Class<UserProperty>.*import static Class<UserProperty>.*import ? extends UserPropertyimport ? extends UserProperty.*import static ? extends UserProperty.*import Class<? extends UserProperty>import Class<? extends UserProperty>.*import static Class<? extends UserProperty>.*import AsynchPeopleimport AsynchPeople.*import static AsynchPeople.*import ProgressiveRenderingimport ProgressiveRendering.*import static ProgressiveRendering.*import JSONimport JSON.*import static JSON.*import Peopleimport People.*import static People.*import Collection<? extends Item>import Collection<? extends Item>.*import static Collection<? extends Item>.*import Iterable<? extends Item>import Iterable<? extends Item>.*import static Iterable<? extends Item>.*import UserInfoimport UserInfo.*import static UserInfo.*import List<UserInfo>import List<UserInfo>.*import static List<UserInfo>.*import Collection<UserInfo>import Collection<UserInfo>.*import static Collection<UserInfo>.*import Iterable<UserInfo>import Iterable<UserInfo>.*import static Iterable<UserInfo>.*import Comparable<UserInfo>import Comparable<UserInfo>.*import static Comparable<UserInfo>.*import Describable<View>import Describable<View>.*import static Describable<View>.*import Descriptor<View>import Descriptor<View>.*import static Descriptor<View>.*import ViewDescriptorimport ViewDescriptor.*import static ViewDescriptor.*import List<ViewDescriptor>import List<ViewDescriptor>.*import static List<ViewDescriptor>.*import Collection<ViewDescriptor>import Collection<ViewDescriptor>.*import static Collection<ViewDescriptor>.*import Iterable<ViewDescriptor>import Iterable<ViewDescriptor>.*import static Iterable<ViewDescriptor>.*import DescriptorExtensionList<View,ViewDescriptor>import DescriptorExtensionList<View,ViewDescriptor>.*import static DescriptorExtensionList<View,ViewDescriptor>.*import ExtensionList<ViewDescriptor>import ExtensionList<ViewDescriptor>.*import static ExtensionList<ViewDescriptor>.*import AbstractList<ViewDescriptor>import AbstractList<ViewDescriptor>.*import static AbstractList<ViewDescriptor>.*import AbstractCollection<ViewDescriptor>import AbstractCollection<ViewDescriptor>.*import static AbstractCollection<ViewDescriptor>.*import List<Computer>import List<Computer>.*import static List<Computer>.*import Collection<Computer>import Collection<Computer>.*import static Collection<Computer>.*import Iterable<Computer>import Iterable<Computer>.*import static Iterable<Computer>.*import Indenter<>import Indenter<>.*import static Indenter<>.*import ListViewColumnimport ListViewColumn.*import static ListViewColumn.*import ? extends ListViewColumnimport ? extends ListViewColumn.*import static ? extends ListViewColumn.*import Iterable<? extends ListViewColumn>import Iterable<? extends ListViewColumn>.*import static Iterable<? extends ListViewColumn>.*import ViewPropertyimport ViewProperty.*import static ViewProperty.*import List<ViewProperty>import List<ViewProperty>.*import static List<ViewProperty>.*import Collection<ViewProperty>import Collection<ViewProperty>.*import static Collection<ViewProperty>.*import Iterable<ViewProperty>import Iterable<ViewProperty>.*import static Iterable<ViewProperty>.*import ViewPropertyDescriptorimport ViewPropertyDescriptor.*import static ViewPropertyDescriptor.*import List<ViewPropertyDescriptor>import List<ViewPropertyDescriptor>.*import static List<ViewPropertyDescriptor>.*import Collection<ViewPropertyDescriptor>import Collection<ViewPropertyDescriptor>.*import static Collection<ViewPropertyDescriptor>.*import Iterable<ViewPropertyDescriptor>import Iterable<ViewPropertyDescriptor>.*import static Iterable<ViewPropertyDescriptor>.*import DescribableList<ViewProperty,ViewPropertyDescriptor>import DescribableList<ViewProperty,ViewPropertyDescriptor>.*import static DescribableList<ViewProperty,ViewPropertyDescriptor>.*import PersistedList<ViewProperty>import PersistedList<ViewProperty>.*import static PersistedList<ViewProperty>.*import AbstractList<ViewProperty>import AbstractList<ViewProperty>.*import static AbstractList<ViewProperty>.*import AbstractCollection<ViewProperty>import AbstractCollection<ViewProperty>.*import static AbstractCollection<ViewProperty>.*import ItemGroup<? extends TopLevelItem>import ItemGroup<? extends TopLevelItem>.*import static ItemGroup<? extends TopLevelItem>.*import Message<View>import Message<View>.*import static Message<View>.*import Comparator<View>import Comparator<View>.*import static Comparator<View>.*import DescriptorListimport DescriptorList.*import static DescriptorList.*import DescriptorList<View>import DescriptorList<View>.*import static DescriptorList<View>.*import AbstractList<Descriptor<View>>import AbstractList<Descriptor<View>>.*import static AbstractList<Descriptor<View>>.*import AbstractCollection<Descriptor<View>>import AbstractCollection<Descriptor<View>>.*import static AbstractCollection<Descriptor<View>>.*import Collection<Descriptor<View>>import Collection<Descriptor<View>>.*import static Collection<Descriptor<View>>.*import Iterable<Descriptor<View>>import Iterable<Descriptor<View>>.*import static Iterable<Descriptor<View>>.*import List<Descriptor<View>>import List<Descriptor<View>>.*import static List<Descriptor<View>>.*import Class<View>import Class<View>.*import static Class<View>.*import ? extends Viewimport ? extends View.*import static ? extends View.*import Class<? extends View>import Class<? extends View>.*import static Class<? extends View>.*import ViewJobFilterimport ViewJobFilter.*import static ViewJobFilter.*import Descriptor<ViewJobFilter>import Descriptor<ViewJobFilter>.*import static Descriptor<ViewJobFilter>.*import List<Descriptor<ViewJobFilter>>import List<Descriptor<ViewJobFilter>>.*import static List<Descriptor<ViewJobFilter>>.*import Collection<Descriptor<ViewJobFilter>>import Collection<Descriptor<ViewJobFilter>>.*import static Collection<Descriptor<ViewJobFilter>>.*import Iterable<Descriptor<ViewJobFilter>>import Iterable<Descriptor<ViewJobFilter>>.*import static Iterable<Descriptor<ViewJobFilter>>.*import Descriptor<ListViewColumn>import Descriptor<ListViewColumn>.*import static Descriptor<ListViewColumn>.*import List<Descriptor<ListViewColumn>>import List<Descriptor<ListViewColumn>>.*import static List<Descriptor<ListViewColumn>>.*import Collection<Descriptor<ListViewColumn>>import Collection<Descriptor<ListViewColumn>>.*import static Collection<Descriptor<ListViewColumn>>.*import Iterable<Descriptor<ListViewColumn>>import Iterable<Descriptor<ListViewColumn>>.*import static Iterable<Descriptor<ListViewColumn>>.*import ViewsTabBarimport ViewsTabBar.*import static ViewsTabBar.*import Collection<View>import Collection<View>.*import static Collection<View>.*import Iterable<View>import Iterable<View>.*import static Iterable<View>.*import ReconfigurableDescribable<ViewProperty>import ReconfigurableDescribable<ViewProperty>.*import static ReconfigurableDescribable<ViewProperty>.*import Describable<ViewProperty>import Describable<ViewProperty>.*import static Describable<ViewProperty>.*import Descriptor<ViewProperty>import Descriptor<ViewProperty>.*import static Descriptor<ViewProperty>.*import DescriptorExtensionList<ViewProperty,ViewPropertyDescriptor>import DescriptorExtensionList<ViewProperty,ViewPropertyDescriptor>.*import static DescriptorExtensionList<ViewProperty,ViewPropertyDescriptor>.*import ExtensionList<ViewPropertyDescriptor>import ExtensionList<ViewPropertyDescriptor>.*import static ExtensionList<ViewPropertyDescriptor>.*import AbstractList<ViewPropertyDescriptor>import AbstractList<ViewPropertyDescriptor>.*import static AbstractList<ViewPropertyDescriptor>.*import AbstractCollection<ViewPropertyDescriptor>import AbstractCollection<ViewPropertyDescriptor>.*import static AbstractCollection<ViewPropertyDescriptor>.*import Class<ViewProperty>import Class<ViewProperty>.*import static Class<ViewProperty>.*import ? extends ViewPropertyimport ? extends ViewProperty.*import static ? extends ViewProperty.*import Class<? extends ViewProperty>import Class<? extends ViewProperty>.*import static Class<? extends ViewProperty>.*import LabelAtomPropertyDescriptorimport LabelAtomPropertyDescriptor.*import static LabelAtomPropertyDescriptor.*import List<LabelAtomPropertyDescriptor>import List<LabelAtomPropertyDescriptor>.*import static List<LabelAtomPropertyDescriptor>.*import Collection<LabelAtomPropertyDescriptor>import Collection<LabelAtomPropertyDescriptor>.*import static Collection<LabelAtomPropertyDescriptor>.*import Iterable<LabelAtomPropertyDescriptor>import Iterable<LabelAtomPropertyDescriptor>.*import static Iterable<LabelAtomPropertyDescriptor>.*import LabelAtomPropertyimport LabelAtomProperty.*import static LabelAtomProperty.*import List<LabelAtomProperty>import List<LabelAtomProperty>.*import static List<LabelAtomProperty>.*import Collection<LabelAtomProperty>import Collection<LabelAtomProperty>.*import static Collection<LabelAtomProperty>.*import Iterable<LabelAtomProperty>import Iterable<LabelAtomProperty>.*import static Iterable<LabelAtomProperty>.*import DescribableList<LabelAtomProperty,LabelAtomPropertyDescriptor>import DescribableList<LabelAtomProperty,LabelAtomPropertyDescriptor>.*import static DescribableList<LabelAtomProperty,LabelAtomPropertyDescriptor>.*import PersistedList<LabelAtomProperty>import PersistedList<LabelAtomProperty>.*import static PersistedList<LabelAtomProperty>.*import AbstractList<LabelAtomProperty>import AbstractList<LabelAtomProperty>.*import static AbstractList<LabelAtomProperty>.*import AbstractCollection<LabelAtomProperty>import AbstractCollection<LabelAtomProperty>.*import static AbstractCollection<LabelAtomProperty>.*import AbstractDescribableImpl<LabelAtomProperty>import AbstractDescribableImpl<LabelAtomProperty>.*import static AbstractDescribableImpl<LabelAtomProperty>.*import Describable<LabelAtomProperty>import Describable<LabelAtomProperty>.*import static Describable<LabelAtomProperty>.*import Descriptor<LabelAtomProperty>import Descriptor<LabelAtomProperty>.*import static Descriptor<LabelAtomProperty>.*import DescriptorExtensionList<LabelAtomProperty,LabelAtomPropertyDescriptor>import DescriptorExtensionList<LabelAtomProperty,LabelAtomPropertyDescriptor>.*import static DescriptorExtensionList<LabelAtomProperty,LabelAtomPropertyDescriptor>.*import ExtensionList<LabelAtomPropertyDescriptor>import ExtensionList<LabelAtomPropertyDescriptor>.*import static ExtensionList<LabelAtomPropertyDescriptor>.*import AbstractList<LabelAtomPropertyDescriptor>import AbstractList<LabelAtomPropertyDescriptor>.*import static AbstractList<LabelAtomPropertyDescriptor>.*import AbstractCollection<LabelAtomPropertyDescriptor>import AbstractCollection<LabelAtomPropertyDescriptor>.*import static AbstractCollection<LabelAtomPropertyDescriptor>.*import Class<LabelAtomProperty>import Class<LabelAtomProperty>.*import static Class<LabelAtomProperty>.*import ? extends LabelAtomPropertyimport ? extends LabelAtomProperty.*import static ? extends LabelAtomProperty.*import Class<? extends LabelAtomProperty>import Class<? extends LabelAtomProperty>.*import static Class<? extends LabelAtomProperty>.*import Andimport And.*import static And.*import Binaryimport Binary.*import static Binary.*import LabelExpressionimport LabelExpression.*import static LabelExpression.*import Iffimport Iff.*import static Iff.*import Impliesimport Implies.*import static Implies.*import Notimport Not.*import static Not.*import Orimport Or.*import static Or.*import Parenimport Paren.*import static Paren.*import Enum<LabelOperatorPrecedence>import Enum<LabelOperatorPrecedence>.*import static Enum<LabelOperatorPrecedence>.*import Comparable<LabelOperatorPrecedence>import Comparable<LabelOperatorPrecedence>.*import static Comparable<LabelOperatorPrecedence>.*import Class<LabelOperatorPrecedence>import Class<LabelOperatorPrecedence>.*import static Class<LabelOperatorPrecedence>.*import LabelOperatorPrecedence[]import LabelOperatorPrecedence[].*import static LabelOperatorPrecedence[].*import ExtensionList<ItemListener>import ExtensionList<ItemListener>.*import static ExtensionList<ItemListener>.*import AbstractList<ItemListener>import AbstractList<ItemListener>.*import static AbstractList<ItemListener>.*import AbstractCollection<ItemListener>import AbstractCollection<ItemListener>.*import static AbstractCollection<ItemListener>.*import Collection<ItemListener>import Collection<ItemListener>.*import static Collection<ItemListener>.*import List<ItemListener>import List<ItemListener>.*import static List<ItemListener>.*import SCMListenerimport SCMListener.*import static SCMListener.*import ? extends SCMListenerimport ? extends SCMListener.*import static ? extends SCMListener.*import Collection<? extends SCMListener>import Collection<? extends SCMListener>.*import static Collection<? extends SCMListener>.*import Iterable<? extends SCMListener>import Iterable<? extends SCMListener>.*import static Iterable<? extends SCMListener>.*import ChangeLogSet<?>import ChangeLogSet<?>.*import static ChangeLogSet<?>.*import SCMRevisionStateimport SCMRevisionState.*import static SCMRevisionState.*import AsyncFutureImplimport AsyncFutureImpl.*import static AsyncFutureImpl.*import AsyncFutureImpl<Executable>import AsyncFutureImpl<Executable>.*import static AsyncFutureImpl<Executable>.*import FutureLoadimport FutureLoad.*import static FutureLoad.*import LoadPredictorimport LoadPredictor.*import static LoadPredictor.*import ExtensionList<LoadPredictor>import ExtensionList<LoadPredictor>.*import static ExtensionList<LoadPredictor>.*import AbstractList<LoadPredictor>import AbstractList<LoadPredictor>.*import static AbstractList<LoadPredictor>.*import AbstractCollection<LoadPredictor>import AbstractCollection<LoadPredictor>.*import static AbstractCollection<LoadPredictor>.*import Collection<LoadPredictor>import Collection<LoadPredictor>.*import static Collection<LoadPredictor>.*import Iterable<LoadPredictor>import Iterable<LoadPredictor>.*import static Iterable<LoadPredictor>.*import List<LoadPredictor>import List<LoadPredictor>.*import static List<LoadPredictor>.*import Iterable<FutureLoad>import Iterable<FutureLoad>.*import static Iterable<FutureLoad>.*import ExecutorChunkimport ExecutorChunk.*import static ExecutorChunk.*import ReadOnlyListimport ReadOnlyList.*import static ReadOnlyList.*import ExecutorSlotimport ExecutorSlot.*import static ExecutorSlot.*import ReadOnlyList<ExecutorSlot>import ReadOnlyList<ExecutorSlot>.*import static ReadOnlyList<ExecutorSlot>.*import AbstractList<ExecutorSlot>import AbstractList<ExecutorSlot>.*import static AbstractList<ExecutorSlot>.*import AbstractCollection<ExecutorSlot>import AbstractCollection<ExecutorSlot>.*import static AbstractCollection<ExecutorSlot>.*import Collection<ExecutorSlot>import Collection<ExecutorSlot>.*import static Collection<ExecutorSlot>.*import Iterable<ExecutorSlot>import Iterable<ExecutorSlot>.*import static Iterable<ExecutorSlot>.*import List<ExecutorSlot>import List<ExecutorSlot>.*import static List<ExecutorSlot>.*import Spliterator<ExecutorSlot>import Spliterator<ExecutorSlot>.*import static Spliterator<ExecutorSlot>.*import ? super ExecutorSlotimport ? super ExecutorSlot.*import static ? super ExecutorSlot.*import Consumer<? super ExecutorSlot>import Consumer<? super ExecutorSlot>.*import static Consumer<? super ExecutorSlot>.*import Iterator<ExecutorSlot>import Iterator<ExecutorSlot>.*import static Iterator<ExecutorSlot>.*import Stream<ExecutorSlot>import Stream<ExecutorSlot>.*import static Stream<ExecutorSlot>.*import BaseStream<ExecutorSlot,Stream<ExecutorSlot>>import BaseStream<ExecutorSlot,Stream<ExecutorSlot>>.*import static BaseStream<ExecutorSlot,Stream<ExecutorSlot>>.*import Predicate<? super ExecutorSlot>import Predicate<? super ExecutorSlot>.*import static Predicate<? super ExecutorSlot>.*import ? extends ExecutorSlotimport ? extends ExecutorSlot.*import static ? extends ExecutorSlot.*import Collection<? extends ExecutorSlot>import Collection<? extends ExecutorSlot>.*import static Collection<? extends ExecutorSlot>.*import Iterable<? extends ExecutorSlot>import Iterable<? extends ExecutorSlot>.*import static Iterable<? extends ExecutorSlot>.*import ListIterator<ExecutorSlot>import ListIterator<ExecutorSlot>.*import static ListIterator<ExecutorSlot>.*import Comparator<? super ExecutorSlot>import Comparator<? super ExecutorSlot>.*import static Comparator<? super ExecutorSlot>.*import UnaryOperator<ExecutorSlot>import UnaryOperator<ExecutorSlot>.*import static UnaryOperator<ExecutorSlot>.*import Function<ExecutorSlot,ExecutorSlot>import Function<ExecutorSlot,ExecutorSlot>.*import static Function<ExecutorSlot,ExecutorSlot>.*import WorkChunkimport WorkChunk.*import static WorkChunk.*import Map<WorkChunk,ExecutorChunk>import Map<WorkChunk,ExecutorChunk>.*import static Map<WorkChunk,ExecutorChunk>.*import ReadOnlyList<SubTask>import ReadOnlyList<SubTask>.*import static ReadOnlyList<SubTask>.*import AbstractList<SubTask>import AbstractList<SubTask>.*import static AbstractList<SubTask>.*import AbstractCollection<SubTask>import AbstractCollection<SubTask>.*import static AbstractCollection<SubTask>.*import Spliterator<SubTask>import Spliterator<SubTask>.*import static Spliterator<SubTask>.*import ? super SubTaskimport ? super SubTask.*import static ? super SubTask.*import Consumer<? super SubTask>import Consumer<? super SubTask>.*import static Consumer<? super SubTask>.*import Iterator<SubTask>import Iterator<SubTask>.*import static Iterator<SubTask>.*import Stream<SubTask>import Stream<SubTask>.*import static Stream<SubTask>.*import BaseStream<SubTask,Stream<SubTask>>import BaseStream<SubTask,Stream<SubTask>>.*import static BaseStream<SubTask,Stream<SubTask>>.*import Predicate<? super SubTask>import Predicate<? super SubTask>.*import static Predicate<? super SubTask>.*import ListIterator<SubTask>import ListIterator<SubTask>.*import static ListIterator<SubTask>.*import Comparator<? super SubTask>import Comparator<? super SubTask>.*import static Comparator<? super SubTask>.*import UnaryOperator<SubTask>import UnaryOperator<SubTask>.*import static UnaryOperator<SubTask>.*import Function<SubTask,SubTask>import Function<SubTask,SubTask>.*import static Function<SubTask,SubTask>.*import List<ExecutorChunk>import List<ExecutorChunk>.*import static List<ExecutorChunk>.*import Collection<ExecutorChunk>import Collection<ExecutorChunk>.*import static Collection<ExecutorChunk>.*import Iterable<ExecutorChunk>import Iterable<ExecutorChunk>.*import static Iterable<ExecutorChunk>.*import List<? extends ExecutorSlot>import List<? extends ExecutorSlot>.*import static List<? extends ExecutorSlot>.*import ? extends LoadPredictorimport ? extends LoadPredictor.*import static ? extends LoadPredictor.*import Collection<? extends LoadPredictor>import Collection<? extends LoadPredictor>.*import static Collection<? extends LoadPredictor>.*import Iterable<? extends LoadPredictor>import Iterable<? extends LoadPredictor>.*import static Iterable<? extends LoadPredictor>.*import List<WorkChunk>import List<WorkChunk>.*import static List<WorkChunk>.*import Collection<WorkChunk>import Collection<WorkChunk>.*import static Collection<WorkChunk>.*import Iterable<WorkChunk>import Iterable<WorkChunk>.*import static Iterable<WorkChunk>.*import ExtensionList<QueueSorter>import ExtensionList<QueueSorter>.*import static ExtensionList<QueueSorter>.*import AbstractList<QueueSorter>import AbstractList<QueueSorter>.*import static AbstractList<QueueSorter>.*import AbstractCollection<QueueSorter>import AbstractCollection<QueueSorter>.*import static AbstractCollection<QueueSorter>.*import Collection<QueueSorter>import Collection<QueueSorter>.*import static Collection<QueueSorter>.*import Iterable<QueueSorter>import Iterable<QueueSorter>.*import static Iterable<QueueSorter>.*import List<QueueSorter>import List<QueueSorter>.*import static List<QueueSorter>.*import Comparator<BlockedItem>import Comparator<BlockedItem>.*import static Comparator<BlockedItem>.*import Createdimport Created.*import static Created.*import Existingimport Existing.*import static Existing.*import Refusedimport Refused.*import static Refused.*import List<WorkUnit>import List<WorkUnit>.*import static List<WorkUnit>.*import Collection<WorkUnit>import Collection<WorkUnit>.*import static Collection<WorkUnit>.*import Iterable<WorkUnit>import Iterable<WorkUnit>.*import static Iterable<WorkUnit>.*import AbstractNodeMonitorDescriptorimport AbstractNodeMonitorDescriptor.*import static AbstractNodeMonitorDescriptor.*import Class<NodeMonitor>import Class<NodeMonitor>.*import static Class<NodeMonitor>.*import ? extends NodeMonitorimport ? extends NodeMonitor.*import static ? extends NodeMonitor.*import Class<? extends NodeMonitor>import Class<? extends NodeMonitor>.*import static Class<? extends NodeMonitor>.*import Map<Computer,T>import Map<Computer,T>.*import static Map<Computer,T>.*import Describable<NodeMonitor>import Describable<NodeMonitor>.*import static Describable<NodeMonitor>.*import AbstractNodeMonitorDescriptor<>import AbstractNodeMonitorDescriptor<>.*import static AbstractNodeMonitorDescriptor<>.*import AbstractNodeMonitorDescriptor<?>import AbstractNodeMonitorDescriptor<?>.*import static AbstractNodeMonitorDescriptor<?>.*import DescriptorList<NodeMonitor>import DescriptorList<NodeMonitor>.*import static DescriptorList<NodeMonitor>.*import ERRORSimport ERRORS.*import static ERRORS.*import Asynchronousimport Asynchronous.*import static Asynchronous.*import CallableDecoratorListimport CallableDecoratorList.*import static CallableDecoratorList.*import CallableDecoratorimport CallableDecorator.*import static CallableDecorator.*import CopyOnWriteArrayList<CallableDecorator>import CopyOnWriteArrayList<CallableDecorator>.*import static CopyOnWriteArrayList<CallableDecorator>.*import List<CallableDecorator>import List<CallableDecorator>.*import static List<CallableDecorator>.*import Collection<CallableDecorator>import Collection<CallableDecorator>.*import static Collection<CallableDecorator>.*import Iterable<CallableDecorator>import Iterable<CallableDecorator>.*import static Iterable<CallableDecorator>.*import Spliterator<CallableDecorator>import Spliterator<CallableDecorator>.*import static Spliterator<CallableDecorator>.*import ? super CallableDecoratorimport ? super CallableDecorator.*import static ? super CallableDecorator.*import Consumer<? super CallableDecorator>import Consumer<? super CallableDecorator>.*import static Consumer<? super CallableDecorator>.*import Iterator<CallableDecorator>import Iterator<CallableDecorator>.*import static Iterator<CallableDecorator>.*import Stream<CallableDecorator>import Stream<CallableDecorator>.*import static Stream<CallableDecorator>.*import BaseStream<CallableDecorator,Stream<CallableDecorator>>import BaseStream<CallableDecorator,Stream<CallableDecorator>>.*import static BaseStream<CallableDecorator,Stream<CallableDecorator>>.*import Predicate<? super CallableDecorator>import Predicate<? super CallableDecorator>.*import static Predicate<? super CallableDecorator>.*import ? extends CallableDecoratorimport ? extends CallableDecorator.*import static ? extends CallableDecorator.*import Collection<? extends CallableDecorator>import Collection<? extends CallableDecorator>.*import static Collection<? extends CallableDecorator>.*import Iterable<? extends CallableDecorator>import Iterable<? extends CallableDecorator>.*import static Iterable<? extends CallableDecorator>.*import ListIterator<CallableDecorator>import ListIterator<CallableDecorator>.*import static ListIterator<CallableDecorator>.*import Comparator<? super CallableDecorator>import Comparator<? super CallableDecorator>.*import static Comparator<? super CallableDecorator>.*import UnaryOperator<CallableDecorator>import UnaryOperator<CallableDecorator>.*import static UnaryOperator<CallableDecorator>.*import Function<CallableDecorator,CallableDecorator>import Function<CallableDecorator,CallableDecorator>.*import static Function<CallableDecorator,CallableDecorator>.*import CallableDecorator[]import CallableDecorator[].*import static CallableDecorator[].*import CallableFilterimport CallableFilter.*import static CallableFilter.*import Capabilityimport Capability.*import static Capability.*import Listenerimport Listener.*import static Listener.*import Refimport Ref.*import static Ref.*import IChannelimport IChannel.*import static IChannel.*import Closeableimport Closeable.*import static Closeable.*import ExportListimport ExportList.*import static ExportList.*import ListeningPortimport ListeningPort.*import static ListeningPort.*import ChannelProperty<>import ChannelProperty<>.*import static ChannelProperty<>.*import ChannelProperty<T>import ChannelProperty<T>.*import static ChannelProperty<T>.*import PipeWindowimport PipeWindow.*import static PipeWindow.*import JarCacheimport JarCache.*import static JarCache.*import URL[]import URL[].*import static URL[].*import Callable<?,?>import Callable<?,?>.*import static Callable<?,?>.*import Commandimport Command.*import static Command.*import ChannelBuilderimport ChannelBuilder.*import static ChannelBuilder.*import CommandTransportimport CommandTransport.*import static CommandTransport.*import ClassFilterimport ClassFilter.*import static ClassFilter.*import JarLoaderImplimport JarLoaderImpl.*import static JarLoaderImpl.*import PipeWriterimport PipeWriter.*import static PipeWriter.*import AtomicLongimport AtomicLong.*import static AtomicLong.*import ExportTableimport ExportTable.*import static ExportTable.*import ImportedClassLoaderTableimport ImportedClassLoaderTable.*import static ImportedClassLoaderTable.*import Requestimport Request.*import static Request.*import Request<?,?>import Request<?,?>.*import static Request<?,?>.*import Map<Integer,Request<?,?>>import Map<Integer,Request<?,?>>.*import static Map<Integer,Request<?,?>>.*import SocketChannelimport SocketChannel.*import static SocketChannel.*import Socketimport Socket.*import static Socket.*import RoleCheckerimport RoleChecker.*import static RoleChecker.*import Roleimport Role.*import static Role.*import ? extends Roleimport ? extends Role.*import static ? extends Role.*import Collection<? extends Role>import Collection<? extends Role>.*import static Collection<? extends Role>.*import Iterable<? extends Role>import Iterable<? extends Role>.*import static Iterable<? extends Role>.*import Role[]import Role[].*import static Role[].*import Checksumimport Checksum.*import static Checksum.*import CommandReceiverimport CommandReceiver.*import static CommandReceiver.*import CreatedAtimport CreatedAt.*import static CreatedAt.*import Class<? super T>[]import Class<? super T>[].*import static Class<? super T>[].*import ReleasedAtimport ReleasedAt.*import static ReleasedAt.*import ArrayList<Entry<>>import ArrayList<Entry<>>.*import static ArrayList<Entry<>>.*import Spliterator<Entry<>>import Spliterator<Entry<>>.*import static Spliterator<Entry<>>.*import ? super Entry<>import ? super Entry<>.*import static ? super Entry<>.*import Consumer<? super Entry<>>import Consumer<? super Entry<>>.*import static Consumer<? super Entry<>>.*import Iterator<Entry<>>import Iterator<Entry<>>.*import static Iterator<Entry<>>.*import Stream<Entry<>>import Stream<Entry<>>.*import static Stream<Entry<>>.*import BaseStream<Entry<>,Stream<Entry<>>>import BaseStream<Entry<>,Stream<Entry<>>>.*import static BaseStream<Entry<>,Stream<Entry<>>>.*import Predicate<? super Entry<>>import Predicate<? super Entry<>>.*import static Predicate<? super Entry<>>.*import ? extends Entry<>import ? extends Entry<>.*import static ? extends Entry<>.*import Collection<? extends Entry<>>import Collection<? extends Entry<>>.*import static Collection<? extends Entry<>>.*import Iterable<? extends Entry<>>import Iterable<? extends Entry<>>.*import static Iterable<? extends Entry<>>.*import ListIterator<Entry<>>import ListIterator<Entry<>>.*import static ListIterator<Entry<>>.*import Comparator<? super Entry<>>import Comparator<? super Entry<>>.*import static Comparator<? super Entry<>>.*import UnaryOperator<Entry<>>import UnaryOperator<Entry<>>.*import static UnaryOperator<Entry<>>.*import Function<Entry<>,Entry<>>import Function<Entry<>,Entry<>>.*import static Function<Entry<>,Entry<>>.*import IClassLoaderimport IClassLoader.*import static IClassLoader.*import Map<IClassLoader,ClassLoader>import Map<IClassLoader,ClassLoader>.*import static Map<IClassLoader,ClassLoader>.*import Future<URL>import Future<URL>.*import static Future<URL>.*import JarLoaderimport JarLoader.*import static JarLoader.*import long[]import long[].*import static long[].*import ChannelProperty<JarLoader>import ChannelProperty<JarLoader>.*import static ChannelProperty<JarLoader>.*import ClassFileimport ClassFile.*import static ClassFile.*import RemoteClassLoaderimport RemoteClassLoader.*import static RemoteClassLoader.*import ClassFile2import ClassFile2.*import static ClassFile2.*import ResourceFileimport ResourceFile.*import static ResourceFile.*import ResourceImageRefimport ResourceImageRef.*import static ResourceImageRef.*import ResourceFile[]import ResourceFile[].*import static ResourceFile[].*import Map<String,ClassFile2>import Map<String,ClassFile2>.*import static Map<String,ClassFile2>.*import byte[][]import byte[][].*import static byte[][].*import URLClassLoaderimport URLClassLoader.*import static URLClassLoader.*import Enumeration<URL>import Enumeration<URL>.*import static Enumeration<URL>.*import RSPimport RSP.*import static RSP.*import EXCimport EXC.*import static EXC.*import Responseimport Response.*import static Response.*import Response<RSP,EXC>import Response<RSP,EXC>.*import static Response<RSP,EXC>.*import Future<RSP>import Future<RSP>.*import static Future<RSP>.*import ThreadLocalimport ThreadLocal.*import static ThreadLocal.*import Request<>import Request<>.*import static Request<>.*import ThreadLocal<Request<>>import ThreadLocal<Request<>>.*import static ThreadLocal<Request<>>.*import URLishimport URLish.*import static URLish.*import Future<URLish>import Future<URLish>.*import static Future<URLish>.*import Future<byte[]>import Future<byte[]>.*import static Future<byte[]>.*import CronTabimport CronTab.*import static CronTab.*import Hashimport Hash.*import static Hash.*import Collection<CronTab>import Collection<CronTab>.*import static Collection<CronTab>.*import Iterable<CronTab>import Iterable<CronTab>.*import static Iterable<CronTab>.*import ChangeLogParserimport ChangeLogParser.*import static ChangeLogParser.*import AffectedFileimport AffectedFile.*import static AffectedFile.*import EditTypeimport EditType.*import static EditType.*import ? extends AffectedFileimport ? extends AffectedFile.*import static ? extends AffectedFile.*import Collection<? extends AffectedFile>import Collection<? extends AffectedFile>.*import static Collection<? extends AffectedFile>.*import Iterable<? extends AffectedFile>import Iterable<? extends AffectedFile>.*import static Iterable<? extends AffectedFile>.*import ModuleLocationimport ModuleLocation.*import static ModuleLocation.*import Map<String,Credentials>import Map<String,Credentials>.*import static Map<String,Credentials>.*import List<EditType>import List<EditType>.*import static List<EditType>.*import Collection<EditType>import Collection<EditType>.*import static Collection<EditType>.*import Iterable<EditType>import Iterable<EditType>.*import static Iterable<EditType>.*import Changeimport Change.*import static Change.*import Enum<Change>import Enum<Change>.*import static Enum<Change>.*import Comparable<Change>import Comparable<Change>.*import static Comparable<Change>.*import Class<Change>import Class<Change>.*import static Class<Change>.*import Change[]import Change[].*import static Change[].*import Descriptor<RepositoryBrowser<?>>import Descriptor<RepositoryBrowser<?>>.*import static Descriptor<RepositoryBrowser<?>>.*import DescriptorExtensionList<RepositoryBrowser<?>,Descriptor<RepositoryBrowser<?>>>import DescriptorExtensionList<RepositoryBrowser<?>,Descriptor<RepositoryBrowser<?>>>.*import static DescriptorExtensionList<RepositoryBrowser<?>,Descriptor<RepositoryBrowser<?>>>.*import ExtensionList<Descriptor<RepositoryBrowser<?>>>import ExtensionList<Descriptor<RepositoryBrowser<?>>>.*import static ExtensionList<Descriptor<RepositoryBrowser<?>>>.*import AbstractList<Descriptor<RepositoryBrowser<?>>>import AbstractList<Descriptor<RepositoryBrowser<?>>>.*import static AbstractList<Descriptor<RepositoryBrowser<?>>>.*import AbstractCollection<Descriptor<RepositoryBrowser<?>>>import AbstractCollection<Descriptor<RepositoryBrowser<?>>>.*import static AbstractCollection<Descriptor<RepositoryBrowser<?>>>.*import Collection<Descriptor<RepositoryBrowser<?>>>import Collection<Descriptor<RepositoryBrowser<?>>>.*import static Collection<Descriptor<RepositoryBrowser<?>>>.*import Iterable<Descriptor<RepositoryBrowser<?>>>import Iterable<Descriptor<RepositoryBrowser<?>>>.*import static Iterable<Descriptor<RepositoryBrowser<?>>>.*import List<Descriptor<RepositoryBrowser<?>>>import List<Descriptor<RepositoryBrowser<?>>>.*import static List<Descriptor<RepositoryBrowser<?>>>.*import RevisionParameterActionimport RevisionParameterAction.*import static RevisionParameterAction.*import SVNRevisionimport SVNRevision.*import static SVNRevision.*import SvnInfoimport SvnInfo.*import static SvnInfo.*import List<SvnInfo>import List<SvnInfo>.*import static List<SvnInfo>.*import Collection<SvnInfo>import Collection<SvnInfo>.*import static Collection<SvnInfo>.*import Iterable<SvnInfo>import Iterable<SvnInfo>.*import static Iterable<SvnInfo>.*import SvnInfo[]import SvnInfo[].*import static SvnInfo[].*import Describable<SCM>import Describable<SCM>.*import static Describable<SCM>.*import Descriptor<SCM>import Descriptor<SCM>.*import static Descriptor<SCM>.*import SCMDescriptorimport SCMDescriptor.*import static SCMDescriptor.*import SCMDescriptor<?>import SCMDescriptor<?>.*import static SCMDescriptor<?>.*import List<SCMDescriptor<?>>import List<SCMDescriptor<?>>.*import static List<SCMDescriptor<?>>.*import Collection<SCMDescriptor<?>>import Collection<SCMDescriptor<?>>.*import static Collection<SCMDescriptor<?>>.*import Iterable<SCMDescriptor<?>>import Iterable<SCMDescriptor<?>>.*import static Iterable<SCMDescriptor<?>>.*import DescriptorExtensionList<SCM,SCMDescriptor<?>>import DescriptorExtensionList<SCM,SCMDescriptor<?>>.*import static DescriptorExtensionList<SCM,SCMDescriptor<?>>.*import ExtensionList<SCMDescriptor<?>>import ExtensionList<SCMDescriptor<?>>.*import static ExtensionList<SCMDescriptor<?>>.*import AbstractList<SCMDescriptor<?>>import AbstractList<SCMDescriptor<?>>.*import static AbstractList<SCMDescriptor<?>>.*import AbstractCollection<SCMDescriptor<?>>import AbstractCollection<SCMDescriptor<?>>.*import static AbstractCollection<SCMDescriptor<?>>.*import SCMDescriptor<>import SCMDescriptor<>.*import static SCMDescriptor<>.*import Class<SCM>import Class<SCM>.*import static Class<SCM>.*import Class<? extends SCM>import Class<? extends SCM>.*import static Class<? extends SCM>.*import ? extends RepositoryBrowser<>import ? extends RepositoryBrowser<>.*import static ? extends RepositoryBrowser<>.*import Class<? extends RepositoryBrowser<>>import Class<? extends RepositoryBrowser<>>.*import static Class<? extends RepositoryBrowser<>>.*import SVNExceptionimport SVNException.*import static SVNException.*import SVNLogFilterimport SVNLogFilter.*import static SVNLogFilter.*import SVNLogEntryimport SVNLogEntry.*import static SVNLogEntry.*import LogEntryimport LogEntry.*import static LogEntry.*import SubversionChangeLogSetimport SubversionChangeLogSet.*import static SubversionChangeLogSet.*import Pathimport Path.*import static Path.*import Collection<Path>import Collection<Path>.*import static Collection<Path>.*import Iterable<Path>import Iterable<Path>.*import static Iterable<Path>.*import List<Path>import List<Path>.*import static List<Path>.*import RevisionInfoimport RevisionInfo.*import static RevisionInfo.*import ChangeLogSet<LogEntry>import ChangeLogSet<LogEntry>.*import static ChangeLogSet<LogEntry>.*import Iterable<LogEntry>import Iterable<LogEntry>.*import static Iterable<LogEntry>.*import Spliterator<LogEntry>import Spliterator<LogEntry>.*import static Spliterator<LogEntry>.*import ? super LogEntryimport ? super LogEntry.*import static ? super LogEntry.*import Consumer<? super LogEntry>import Consumer<? super LogEntry>.*import static Consumer<? super LogEntry>.*import Iterator<LogEntry>import Iterator<LogEntry>.*import static Iterator<LogEntry>.*import List<RevisionInfo>import List<RevisionInfo>.*import static List<RevisionInfo>.*import Collection<RevisionInfo>import Collection<RevisionInfo>.*import static Collection<RevisionInfo>.*import Iterable<RevisionInfo>import Iterable<RevisionInfo>.*import static Iterable<RevisionInfo>.*import List<LogEntry>import List<LogEntry>.*import static List<LogEntry>.*import Collection<LogEntry>import Collection<LogEntry>.*import static Collection<LogEntry>.*import Map<String,Long>import Map<String,Long>.*import static Map<String,Long>.*import SubversionRepositoryBrowserimport SubversionRepositoryBrowser.*import static SubversionRepositoryBrowser.*import RepositoryBrowser<LogEntry>import RepositoryBrowser<LogEntry>.*import static RepositoryBrowser<LogEntry>.*import AdditionalCredentialsimport AdditionalCredentials.*import static AdditionalCredentials.*import AbstractDescribableImpl<AdditionalCredentials>import AbstractDescribableImpl<AdditionalCredentials>.*import static AbstractDescribableImpl<AdditionalCredentials>.*import Describable<AdditionalCredentials>import Describable<AdditionalCredentials>.*import static Describable<AdditionalCredentials>.*import Descriptor<AdditionalCredentials>import Descriptor<AdditionalCredentials>.*import static Descriptor<AdditionalCredentials>.*import Credentialimport Credential.*import static Credential.*import SCMDescriptor<SubversionSCM>import SCMDescriptor<SubversionSCM>.*import static SCMDescriptor<SubversionSCM>.*import Class<SubversionSCM>import Class<SubversionSCM>.*import static Class<SubversionSCM>.*import WorkspaceUpdaterDescriptorimport WorkspaceUpdaterDescriptor.*import static WorkspaceUpdaterDescriptor.*import List<WorkspaceUpdaterDescriptor>import List<WorkspaceUpdaterDescriptor>.*import static List<WorkspaceUpdaterDescriptor>.*import Collection<WorkspaceUpdaterDescriptor>import Collection<WorkspaceUpdaterDescriptor>.*import static Collection<WorkspaceUpdaterDescriptor>.*import Iterable<WorkspaceUpdaterDescriptor>import Iterable<WorkspaceUpdaterDescriptor>.*import static Iterable<WorkspaceUpdaterDescriptor>.*import SVNRepositoryimport SVNRepository.*import static SVNRepository.*import ISVNSessionimport ISVNSession.*import static ISVNSession.*import SVNNodeKindimport SVNNodeKind.*import static SVNNodeKind.*import UserProvidedCredentialimport UserProvidedCredential.*import static UserProvidedCredential.*import AbstractDescribableImpl<ModuleLocation>import AbstractDescribableImpl<ModuleLocation>.*import static AbstractDescribableImpl<ModuleLocation>.*import Describable<ModuleLocation>import Describable<ModuleLocation>.*import static Describable<ModuleLocation>.*import Descriptor<ModuleLocation>import Descriptor<ModuleLocation>.*import static Descriptor<ModuleLocation>.*import List<ModuleLocation>import List<ModuleLocation>.*import static List<ModuleLocation>.*import Collection<ModuleLocation>import Collection<ModuleLocation>.*import static Collection<ModuleLocation>.*import Iterable<ModuleLocation>import Iterable<ModuleLocation>.*import static Iterable<ModuleLocation>.*import UUIDimport UUID.*import static UUID.*import Comparable<SvnInfo>import Comparable<SvnInfo>.*import static Comparable<SvnInfo>.*import SVNInfoimport SVNInfo.*import static SVNInfo.*import SvnClientManagerimport SvnClientManager.*import static SvnClientManager.*import DefaultSVNOptionsimport DefaultSVNOptions.*import static DefaultSVNOptions.*import ModuleLocation[]import ModuleLocation[].*import static ModuleLocation[].*import WorkspaceUpdaterimport WorkspaceUpdater.*import static WorkspaceUpdater.*import List<AdditionalCredentials>import List<AdditionalCredentials>.*import static List<AdditionalCredentials>.*import Collection<AdditionalCredentials>import Collection<AdditionalCredentials>.*import static Collection<AdditionalCredentials>.*import Iterable<AdditionalCredentials>import Iterable<AdditionalCredentials>.*import static Iterable<AdditionalCredentials>.*import SVNUpdateClientimport SVNUpdateClient.*import static SVNUpdateClient.*import SVNCopyClientimport SVNCopyClient.*import static SVNCopyClient.*import SVNStatusClientimport SVNStatusClient.*import static SVNStatusClient.*import SVNLogClientimport SVNLogClient.*import static SVNLogClient.*import MultipartFormDataParserimport MultipartFormDataParser.*import static MultipartFormDataParser.*import UpdateTaskimport UpdateTask.*import static UpdateTask.*import List<External>import List<External>.*import static List<External>.*import Collection<External>import Collection<External>.*import static Collection<External>.*import Iterable<External>import Iterable<External>.*import static Iterable<External>.*import AbstractDescribableImpl<WorkspaceUpdater>import AbstractDescribableImpl<WorkspaceUpdater>.*import static AbstractDescribableImpl<WorkspaceUpdater>.*import Describable<WorkspaceUpdater>import Describable<WorkspaceUpdater>.*import static Describable<WorkspaceUpdater>.*import Descriptor<WorkspaceUpdater>import Descriptor<WorkspaceUpdater>.*import static Descriptor<WorkspaceUpdater>.*import SVNCancelExceptionimport SVNCancelException.*import static SVNCancelException.*import Class<WorkspaceUpdater>import Class<WorkspaceUpdater>.*import static Class<WorkspaceUpdater>.*import ? extends WorkspaceUpdaterimport ? extends WorkspaceUpdater.*import static ? extends WorkspaceUpdater.*import Class<? extends WorkspaceUpdater>import Class<? extends WorkspaceUpdater>.*import static Class<? extends WorkspaceUpdater>.*import DescriptorExtensionList<WorkspaceUpdater,WorkspaceUpdaterDescriptor>import DescriptorExtensionList<WorkspaceUpdater,WorkspaceUpdaterDescriptor>.*import static DescriptorExtensionList<WorkspaceUpdater,WorkspaceUpdaterDescriptor>.*import ExtensionList<WorkspaceUpdaterDescriptor>import ExtensionList<WorkspaceUpdaterDescriptor>.*import static ExtensionList<WorkspaceUpdaterDescriptor>.*import AbstractList<WorkspaceUpdaterDescriptor>import AbstractList<WorkspaceUpdaterDescriptor>.*import static AbstractList<WorkspaceUpdaterDescriptor>.*import AbstractCollection<WorkspaceUpdaterDescriptor>import AbstractCollection<WorkspaceUpdaterDescriptor>.*import static AbstractCollection<WorkspaceUpdaterDescriptor>.*import SuggestedItemimport SuggestedItem.*import static SuggestedItem.*import List<SuggestedItem>import List<SuggestedItem>.*import static List<SuggestedItem>.*import Collection<SuggestedItem>import Collection<SuggestedItem>.*import static Collection<SuggestedItem>.*import Iterable<SuggestedItem>import Iterable<SuggestedItem>.*import static Iterable<SuggestedItem>.*import SearchResultimport SearchResult.*import static SearchResult.*import SearchItemimport SearchItem.*import static SearchItem.*import List<SearchItem>import List<SearchItem>.*import static List<SearchItem>.*import Collection<SearchItem>import Collection<SearchItem>.*import static Collection<SearchItem>.*import Iterable<SearchItem>import Iterable<SearchItem>.*import static Iterable<SearchItem>.*import Spliterator<SuggestedItem>import Spliterator<SuggestedItem>.*import static Spliterator<SuggestedItem>.*import ? super SuggestedItemimport ? super SuggestedItem.*import static ? super SuggestedItem.*import Consumer<? super SuggestedItem>import Consumer<? super SuggestedItem>.*import static Consumer<? super SuggestedItem>.*import Iterator<SuggestedItem>import Iterator<SuggestedItem>.*import static Iterator<SuggestedItem>.*import Stream<SuggestedItem>import Stream<SuggestedItem>.*import static Stream<SuggestedItem>.*import BaseStream<SuggestedItem,Stream<SuggestedItem>>import BaseStream<SuggestedItem,Stream<SuggestedItem>>.*import static BaseStream<SuggestedItem,Stream<SuggestedItem>>.*import Predicate<? super SuggestedItem>import Predicate<? super SuggestedItem>.*import static Predicate<? super SuggestedItem>.*import ? extends SuggestedItemimport ? extends SuggestedItem.*import static ? extends SuggestedItem.*import Collection<? extends SuggestedItem>import Collection<? extends SuggestedItem>.*import static Collection<? extends SuggestedItem>.*import Iterable<? extends SuggestedItem>import Iterable<? extends SuggestedItem>.*import static Iterable<? extends SuggestedItem>.*import ListIterator<SuggestedItem>import ListIterator<SuggestedItem>.*import static ListIterator<SuggestedItem>.*import Comparator<? super SuggestedItem>import Comparator<? super SuggestedItem>.*import static Comparator<? super SuggestedItem>.*import UnaryOperator<SuggestedItem>import UnaryOperator<SuggestedItem>.*import static UnaryOperator<SuggestedItem>.*import Function<SuggestedItem,SuggestedItem>import Function<SuggestedItem,SuggestedItem>.*import static Function<SuggestedItem,SuggestedItem>.*import SecurityContextimport SecurityContext.*import static SecurityContext.*import Sidimport Sid.*import static Sid.*import Sid[]import Sid[].*import static Sid[].*import AbstractPasswordBasedSecurityRealmimport AbstractPasswordBasedSecurityRealm.*import static AbstractPasswordBasedSecurityRealm.*import SecurityRealmimport SecurityRealm.*import static SecurityRealm.*import UserDetailsServiceimport UserDetailsService.*import static UserDetailsService.*import GroupDetailsimport GroupDetails.*import static GroupDetails.*import DataAccessExceptionimport DataAccessException.*import static DataAccessException.*import UserDetailsimport UserDetails.*import static UserDetails.*import AuthenticationExceptionimport AuthenticationException.*import static AuthenticationException.*import CliAuthenticatorimport CliAuthenticator.*import static CliAuthenticator.*import SecurityComponentsimport SecurityComponents.*import static SecurityComponents.*import AuthorizationStrategyimport AuthorizationStrategy.*import static AuthorizationStrategy.*import AbstractDescribableImpl<AuthorizationStrategy>import AbstractDescribableImpl<AuthorizationStrategy>.*import static AbstractDescribableImpl<AuthorizationStrategy>.*import Describable<AuthorizationStrategy>import Describable<AuthorizationStrategy>.*import static Describable<AuthorizationStrategy>.*import Descriptor<AuthorizationStrategy>import Descriptor<AuthorizationStrategy>.*import static Descriptor<AuthorizationStrategy>.*import DescriptorExtensionList<AuthorizationStrategy,Descriptor<AuthorizationStrategy>>import DescriptorExtensionList<AuthorizationStrategy,Descriptor<AuthorizationStrategy>>.*import static DescriptorExtensionList<AuthorizationStrategy,Descriptor<AuthorizationStrategy>>.*import ExtensionList<Descriptor<AuthorizationStrategy>>import ExtensionList<Descriptor<AuthorizationStrategy>>.*import static ExtensionList<Descriptor<AuthorizationStrategy>>.*import AbstractList<Descriptor<AuthorizationStrategy>>import AbstractList<Descriptor<AuthorizationStrategy>>.*import static AbstractList<Descriptor<AuthorizationStrategy>>.*import AbstractCollection<Descriptor<AuthorizationStrategy>>import AbstractCollection<Descriptor<AuthorizationStrategy>>.*import static AbstractCollection<Descriptor<AuthorizationStrategy>>.*import Collection<Descriptor<AuthorizationStrategy>>import Collection<Descriptor<AuthorizationStrategy>>.*import static Collection<Descriptor<AuthorizationStrategy>>.*import Iterable<Descriptor<AuthorizationStrategy>>import Iterable<Descriptor<AuthorizationStrategy>>.*import static Iterable<Descriptor<AuthorizationStrategy>>.*import List<Descriptor<AuthorizationStrategy>>import List<Descriptor<AuthorizationStrategy>>.*import static List<Descriptor<AuthorizationStrategy>>.*import DescriptorList<AuthorizationStrategy>import DescriptorList<AuthorizationStrategy>.*import static DescriptorList<AuthorizationStrategy>.*import FederatedIdentityimport FederatedIdentity.*import static FederatedIdentity.*import FederatedLoginServiceimport FederatedLoginService.*import static FederatedLoginService.*import UnclaimedIdentityExceptionimport UnclaimedIdentityException.*import static UnclaimedIdentityException.*import ExtensionList<FederatedLoginService>import ExtensionList<FederatedLoginService>.*import static ExtensionList<FederatedLoginService>.*import AbstractList<FederatedLoginService>import AbstractList<FederatedLoginService>.*import static AbstractList<FederatedLoginService>.*import AbstractCollection<FederatedLoginService>import AbstractCollection<FederatedLoginService>.*import static AbstractCollection<FederatedLoginService>.*import Collection<FederatedLoginService>import Collection<FederatedLoginService>.*import static Collection<FederatedLoginService>.*import Iterable<FederatedLoginService>import Iterable<FederatedLoginService>.*import static Iterable<FederatedLoginService>.*import List<FederatedLoginService>import List<FederatedLoginService>.*import static List<FederatedLoginService>.*import FederatedLoginServiceUserPropertyimport FederatedLoginServiceUserProperty.*import static FederatedLoginServiceUserProperty.*import ? extends FederatedLoginServiceUserPropertyimport ? extends FederatedLoginServiceUserProperty.*import static ? extends FederatedLoginServiceUserProperty.*import Class<? extends FederatedLoginServiceUserProperty>import Class<? extends FederatedLoginServiceUserProperty>.*import static Class<? extends FederatedLoginServiceUserProperty>.*import List<Permission>import List<Permission>.*import static List<Permission>.*import Collection<Permission>import Collection<Permission>.*import static Collection<Permission>.*import Iterable<Permission>import Iterable<Permission>.*import static Iterable<Permission>.*import PermissionScopeimport PermissionScope.*import static PermissionScope.*import PermissionScope[]import PermissionScope[].*import static PermissionScope[].*import Comparator<Permission>import Comparator<Permission>.*import static Comparator<Permission>.*import Spliterator<Permission>import Spliterator<Permission>.*import static Spliterator<Permission>.*import ? super Permissionimport ? super Permission.*import static ? super Permission.*import Consumer<? super Permission>import Consumer<? super Permission>.*import static Consumer<? super Permission>.*import Iterator<Permission>import Iterator<Permission>.*import static Iterator<Permission>.*import Comparable<PermissionGroup>import Comparable<PermissionGroup>.*import static Comparable<PermissionGroup>.*import List<PermissionGroup>import List<PermissionGroup>.*import static List<PermissionGroup>.*import Collection<PermissionGroup>import Collection<PermissionGroup>.*import static Collection<PermissionGroup>.*import Iterable<PermissionGroup>import Iterable<PermissionGroup>.*import static Iterable<PermissionGroup>.*import SecurityModeimport SecurityMode.*import static SecurityMode.*import Enum<SecurityMode>import Enum<SecurityMode>.*import static Enum<SecurityMode>.*import Comparable<SecurityMode>import Comparable<SecurityMode>.*import static Comparable<SecurityMode>.*import Class<SecurityMode>import Class<SecurityMode>.*import static Class<SecurityMode>.*import SecurityMode[]import SecurityMode[].*import static SecurityMode[].*import AuthenticationManagerimport AuthenticationManager.*import static AuthenticationManager.*import RememberMeServicesimport RememberMeServices.*import static RememberMeServices.*import AbstractDescribableImpl<SecurityRealm>import AbstractDescribableImpl<SecurityRealm>.*import static AbstractDescribableImpl<SecurityRealm>.*import Describable<SecurityRealm>import Describable<SecurityRealm>.*import static Describable<SecurityRealm>.*import Descriptor<SecurityRealm>import Descriptor<SecurityRealm>.*import static Descriptor<SecurityRealm>.*import DescriptorExtensionList<SecurityRealm,Descriptor<SecurityRealm>>import DescriptorExtensionList<SecurityRealm,Descriptor<SecurityRealm>>.*import static DescriptorExtensionList<SecurityRealm,Descriptor<SecurityRealm>>.*import ExtensionList<Descriptor<SecurityRealm>>import ExtensionList<Descriptor<SecurityRealm>>.*import static ExtensionList<Descriptor<SecurityRealm>>.*import AbstractList<Descriptor<SecurityRealm>>import AbstractList<Descriptor<SecurityRealm>>.*import static AbstractList<Descriptor<SecurityRealm>>.*import AbstractCollection<Descriptor<SecurityRealm>>import AbstractCollection<Descriptor<SecurityRealm>>.*import static AbstractCollection<Descriptor<SecurityRealm>>.*import Collection<Descriptor<SecurityRealm>>import Collection<Descriptor<SecurityRealm>>.*import static Collection<Descriptor<SecurityRealm>>.*import Iterable<Descriptor<SecurityRealm>>import Iterable<Descriptor<SecurityRealm>>.*import static Iterable<Descriptor<SecurityRealm>>.*import List<Descriptor<SecurityRealm>>import List<Descriptor<SecurityRealm>>.*import static List<Descriptor<SecurityRealm>>.*import FilterConfigimport FilterConfig.*import static FilterConfig.*import Filterimport Filter.*import static Filter.*import ApplicationContextimport ApplicationContext.*import static ApplicationContext.*import CaptchaSupportimport CaptchaSupport.*import static CaptchaSupport.*import Descriptor<CaptchaSupport>import Descriptor<CaptchaSupport>.*import static Descriptor<CaptchaSupport>.*import List<Descriptor<CaptchaSupport>>import List<Descriptor<CaptchaSupport>>.*import static List<Descriptor<CaptchaSupport>>.*import Collection<Descriptor<CaptchaSupport>>import Collection<Descriptor<CaptchaSupport>>.*import static Collection<Descriptor<CaptchaSupport>>.*import Iterable<Descriptor<CaptchaSupport>>import Iterable<Descriptor<CaptchaSupport>>.*import static Iterable<Descriptor<CaptchaSupport>>.*import GrantedAuthorityimport GrantedAuthority.*import static GrantedAuthority.*import DescriptorList<SecurityRealm>import DescriptorList<SecurityRealm>.*import static DescriptorList<SecurityRealm>.*import AbstractDescribableImpl<CaptchaSupport>import AbstractDescribableImpl<CaptchaSupport>.*import static AbstractDescribableImpl<CaptchaSupport>.*import Describable<CaptchaSupport>import Describable<CaptchaSupport>.*import static Describable<CaptchaSupport>.*import CaptchaSupportDescriptorimport CaptchaSupportDescriptor.*import static CaptchaSupportDescriptor.*import DescriptorExtensionList<CaptchaSupport,Descriptor<CaptchaSupport>>import DescriptorExtensionList<CaptchaSupport,Descriptor<CaptchaSupport>>.*import static DescriptorExtensionList<CaptchaSupport,Descriptor<CaptchaSupport>>.*import ExtensionList<Descriptor<CaptchaSupport>>import ExtensionList<Descriptor<CaptchaSupport>>.*import static ExtensionList<Descriptor<CaptchaSupport>>.*import AbstractList<Descriptor<CaptchaSupport>>import AbstractList<Descriptor<CaptchaSupport>>.*import static AbstractList<Descriptor<CaptchaSupport>>.*import AbstractCollection<Descriptor<CaptchaSupport>>import AbstractCollection<Descriptor<CaptchaSupport>>.*import static AbstractCollection<Descriptor<CaptchaSupport>>.*import Class<CaptchaSupport>import Class<CaptchaSupport>.*import static Class<CaptchaSupport>.*import ? extends CaptchaSupportimport ? extends CaptchaSupport.*import static ? extends CaptchaSupport.*import Class<? extends CaptchaSupport>import Class<? extends CaptchaSupport>.*import static Class<? extends CaptchaSupport>.*import CrumbIssuerimport CrumbIssuer.*import static CrumbIssuer.*import Describable<CrumbIssuer>import Describable<CrumbIssuer>.*import static Describable<CrumbIssuer>.*import Descriptor<CrumbIssuer>import Descriptor<CrumbIssuer>.*import static Descriptor<CrumbIssuer>.*import DescriptorExtensionList<CrumbIssuer,Descriptor<CrumbIssuer>>import DescriptorExtensionList<CrumbIssuer,Descriptor<CrumbIssuer>>.*import static DescriptorExtensionList<CrumbIssuer,Descriptor<CrumbIssuer>>.*import ExtensionList<Descriptor<CrumbIssuer>>import ExtensionList<Descriptor<CrumbIssuer>>.*import static ExtensionList<Descriptor<CrumbIssuer>>.*import AbstractList<Descriptor<CrumbIssuer>>import AbstractList<Descriptor<CrumbIssuer>>.*import static AbstractList<Descriptor<CrumbIssuer>>.*import AbstractCollection<Descriptor<CrumbIssuer>>import AbstractCollection<Descriptor<CrumbIssuer>>.*import static AbstractCollection<Descriptor<CrumbIssuer>>.*import Collection<Descriptor<CrumbIssuer>>import Collection<Descriptor<CrumbIssuer>>.*import static Collection<Descriptor<CrumbIssuer>>.*import Iterable<Descriptor<CrumbIssuer>>import Iterable<Descriptor<CrumbIssuer>>.*import static Iterable<Descriptor<CrumbIssuer>>.*import List<Descriptor<CrumbIssuer>>import List<Descriptor<CrumbIssuer>>.*import static List<Descriptor<CrumbIssuer>>.*import CrumbIssuerDescriptorimport CrumbIssuerDescriptor.*import static CrumbIssuerDescriptor.*import CrumbIssuerDescriptor<>import CrumbIssuerDescriptor<>.*import static CrumbIssuerDescriptor<>.*import CrumbIssuerDescriptor<CrumbIssuer>import CrumbIssuerDescriptor<CrumbIssuer>.*import static CrumbIssuerDescriptor<CrumbIssuer>.*import Class<CrumbIssuer>import Class<CrumbIssuer>.*import static Class<CrumbIssuer>.*import ? extends CrumbIssuerimport ? extends CrumbIssuer.*import static ? extends CrumbIssuer.*import Class<? extends CrumbIssuer>import Class<? extends CrumbIssuer>.*import static Class<? extends CrumbIssuer>.*import Describable<Cloud>import Describable<Cloud>.*import static Describable<Cloud>.*import Descriptor<Cloud>import Descriptor<Cloud>.*import static Descriptor<Cloud>.*import DescriptorExtensionList<Cloud,Descriptor<Cloud>>import DescriptorExtensionList<Cloud,Descriptor<Cloud>>.*import static DescriptorExtensionList<Cloud,Descriptor<Cloud>>.*import ExtensionList<Descriptor<Cloud>>import ExtensionList<Descriptor<Cloud>>.*import static ExtensionList<Descriptor<Cloud>>.*import AbstractList<Descriptor<Cloud>>import AbstractList<Descriptor<Cloud>>.*import static AbstractList<Descriptor<Cloud>>.*import AbstractCollection<Descriptor<Cloud>>import AbstractCollection<Descriptor<Cloud>>.*import static AbstractCollection<Descriptor<Cloud>>.*import Collection<Descriptor<Cloud>>import Collection<Descriptor<Cloud>>.*import static Collection<Descriptor<Cloud>>.*import Iterable<Descriptor<Cloud>>import Iterable<Descriptor<Cloud>>.*import static Iterable<Descriptor<Cloud>>.*import List<Descriptor<Cloud>>import List<Descriptor<Cloud>>.*import static List<Descriptor<Cloud>>.*import PlannedNodeimport PlannedNode.*import static PlannedNode.*import Collection<PlannedNode>import Collection<PlannedNode>.*import static Collection<PlannedNode>.*import Iterable<PlannedNode>import Iterable<PlannedNode>.*import static Iterable<PlannedNode>.*import DescriptorList<Cloud>import DescriptorList<Cloud>.*import static DescriptorList<Cloud>.*import ComputerConnectorimport ComputerConnector.*import static ComputerConnector.*import AbstractDescribableImpl<ComputerConnector>import AbstractDescribableImpl<ComputerConnector>.*import static AbstractDescribableImpl<ComputerConnector>.*import Describable<ComputerConnector>import Describable<ComputerConnector>.*import static Describable<ComputerConnector>.*import Descriptor<ComputerConnector>import Descriptor<ComputerConnector>.*import static Descriptor<ComputerConnector>.*import ComputerConnectorDescriptorimport ComputerConnectorDescriptor.*import static ComputerConnectorDescriptor.*import Class<ComputerConnector>import Class<ComputerConnector>.*import static Class<ComputerConnector>.*import ? extends ComputerConnectorimport ? extends ComputerConnector.*import static ? extends ComputerConnector.*import Class<? extends ComputerConnector>import Class<? extends ComputerConnector>.*import static Class<? extends ComputerConnector>.*import DescriptorExtensionList<ComputerConnector,ComputerConnectorDescriptor>import DescriptorExtensionList<ComputerConnector,ComputerConnectorDescriptor>.*import static DescriptorExtensionList<ComputerConnector,ComputerConnectorDescriptor>.*import ExtensionList<ComputerConnectorDescriptor>import ExtensionList<ComputerConnectorDescriptor>.*import static ExtensionList<ComputerConnectorDescriptor>.*import AbstractList<ComputerConnectorDescriptor>import AbstractList<ComputerConnectorDescriptor>.*import static AbstractList<ComputerConnectorDescriptor>.*import AbstractCollection<ComputerConnectorDescriptor>import AbstractCollection<ComputerConnectorDescriptor>.*import static AbstractCollection<ComputerConnectorDescriptor>.*import Collection<ComputerConnectorDescriptor>import Collection<ComputerConnectorDescriptor>.*import static Collection<ComputerConnectorDescriptor>.*import Iterable<ComputerConnectorDescriptor>import Iterable<ComputerConnectorDescriptor>.*import static Iterable<ComputerConnectorDescriptor>.*import List<ComputerConnectorDescriptor>import List<ComputerConnectorDescriptor>.*import static List<ComputerConnectorDescriptor>.*import AbstractDescribableImpl<ComputerLauncher>import AbstractDescribableImpl<ComputerLauncher>.*import static AbstractDescribableImpl<ComputerLauncher>.*import Describable<ComputerLauncher>import Describable<ComputerLauncher>.*import static Describable<ComputerLauncher>.*import Descriptor<ComputerLauncher>import Descriptor<ComputerLauncher>.*import static Descriptor<ComputerLauncher>.*import BufferedReaderimport BufferedReader.*import static BufferedReader.*import StreamTaskListenerimport StreamTaskListener.*import static StreamTaskListener.*import DescriptorList<ComputerLauncher>import DescriptorList<ComputerLauncher>.*import static DescriptorList<ComputerLauncher>.*import AbstractList<Descriptor<ComputerLauncher>>import AbstractList<Descriptor<ComputerLauncher>>.*import static AbstractList<Descriptor<ComputerLauncher>>.*import AbstractCollection<Descriptor<ComputerLauncher>>import AbstractCollection<Descriptor<ComputerLauncher>>.*import static AbstractCollection<Descriptor<ComputerLauncher>>.*import Collection<Descriptor<ComputerLauncher>>import Collection<Descriptor<ComputerLauncher>>.*import static Collection<Descriptor<ComputerLauncher>>.*import Iterable<Descriptor<ComputerLauncher>>import Iterable<Descriptor<ComputerLauncher>>.*import static Iterable<Descriptor<ComputerLauncher>>.*import List<Descriptor<ComputerLauncher>>import List<Descriptor<ComputerLauncher>>.*import static List<Descriptor<ComputerLauncher>>.*import ExtensionList<ComputerListener>import ExtensionList<ComputerListener>.*import static ExtensionList<ComputerListener>.*import AbstractList<ComputerListener>import AbstractList<ComputerListener>.*import static AbstractList<ComputerListener>.*import AbstractCollection<ComputerListener>import AbstractCollection<ComputerListener>.*import static AbstractCollection<ComputerListener>.*import Collection<ComputerListener>import Collection<ComputerListener>.*import static Collection<ComputerListener>.*import List<ComputerListener>import List<ComputerListener>.*import static List<ComputerListener>.*import DumbSlaveimport DumbSlave.*import static DumbSlave.*import Class<Node>import Class<Node>.*import static Class<Node>.*import ? extends Nodeimport ? extends Node.*import static ? extends Node.*import Class<? extends Node>import Class<? extends Node>.*import static Class<? extends Node>.*import List<NodeDescriptor>import List<NodeDescriptor>.*import static List<NodeDescriptor>.*import Collection<NodeDescriptor>import Collection<NodeDescriptor>.*import static Collection<NodeDescriptor>.*import Iterable<NodeDescriptor>import Iterable<NodeDescriptor>.*import static Iterable<NodeDescriptor>.*import DescriptorExtensionList<Node,NodeDescriptor>import DescriptorExtensionList<Node,NodeDescriptor>.*import static DescriptorExtensionList<Node,NodeDescriptor>.*import ExtensionList<NodeDescriptor>import ExtensionList<NodeDescriptor>.*import static ExtensionList<NodeDescriptor>.*import AbstractList<NodeDescriptor>import AbstractList<NodeDescriptor>.*import static AbstractList<NodeDescriptor>.*import AbstractCollection<NodeDescriptor>import AbstractCollection<NodeDescriptor>.*import static AbstractCollection<NodeDescriptor>.*import DescriptorList<Node>import DescriptorList<Node>.*import static DescriptorList<Node>.*import AbstractList<Descriptor<Node>>import AbstractList<Descriptor<Node>>.*import static AbstractList<Descriptor<Node>>.*import AbstractCollection<Descriptor<Node>>import AbstractCollection<Descriptor<Node>>.*import static AbstractCollection<Descriptor<Node>>.*import Collection<Descriptor<Node>>import Collection<Descriptor<Node>>.*import static Collection<Descriptor<Node>>.*import Iterable<Descriptor<Node>>import Iterable<Descriptor<Node>>.*import static Iterable<Descriptor<Node>>.*import List<Descriptor<Node>>import List<Descriptor<Node>>.*import static List<Descriptor<Node>>.*import ArrayList<Node>import ArrayList<Node>.*import static ArrayList<Node>.*import AbstractList<Node>import AbstractList<Node>.*import static AbstractList<Node>.*import AbstractCollection<Node>import AbstractCollection<Node>.*import static AbstractCollection<Node>.*import Spliterator<Node>import Spliterator<Node>.*import static Spliterator<Node>.*import ? super Nodeimport ? super Node.*import static ? super Node.*import Consumer<? super Node>import Consumer<? super Node>.*import static Consumer<? super Node>.*import Iterator<Node>import Iterator<Node>.*import static Iterator<Node>.*import Stream<Node>import Stream<Node>.*import static Stream<Node>.*import BaseStream<Node,Stream<Node>>import BaseStream<Node,Stream<Node>>.*import static BaseStream<Node,Stream<Node>>.*import Predicate<? super Node>import Predicate<? super Node>.*import static Predicate<? super Node>.*import Collection<? extends Node>import Collection<? extends Node>.*import static Collection<? extends Node>.*import Iterable<? extends Node>import Iterable<? extends Node>.*import static Iterable<? extends Node>.*import ListIterator<Node>import ListIterator<Node>.*import static ListIterator<Node>.*import Comparator<? super Node>import Comparator<? super Node>.*import static Comparator<? super Node>.*import UnaryOperator<Node>import UnaryOperator<Node>.*import static UnaryOperator<Node>.*import Function<Node,Node>import Function<Node,Node>.*import static Function<Node,Node>.*import Descriptor<NodeProperty<?>>import Descriptor<NodeProperty<?>>.*import static Descriptor<NodeProperty<?>>.*import NodeProperty<>import NodeProperty<>.*import static NodeProperty<>.*import DescriptorExtensionList<NodeProperty<?>,NodePropertyDescriptor>import DescriptorExtensionList<NodeProperty<?>,NodePropertyDescriptor>.*import static DescriptorExtensionList<NodeProperty<?>,NodePropertyDescriptor>.*import ExtensionList<NodePropertyDescriptor>import ExtensionList<NodePropertyDescriptor>.*import static ExtensionList<NodePropertyDescriptor>.*import AbstractList<NodePropertyDescriptor>import AbstractList<NodePropertyDescriptor>.*import static AbstractList<NodePropertyDescriptor>.*import AbstractCollection<NodePropertyDescriptor>import AbstractCollection<NodePropertyDescriptor>.*import static AbstractCollection<NodePropertyDescriptor>.*import PropertyDescriptorimport PropertyDescriptor.*import static PropertyDescriptor.*import PropertyDescriptor<NodeProperty<?>,Node>import PropertyDescriptor<NodeProperty<?>,Node>.*import static PropertyDescriptor<NodeProperty<?>,Node>.*import Class<NodeProperty<?>>import Class<NodeProperty<?>>.*import static Class<NodeProperty<?>>.*import Class<? extends NodeProperty<?>>import Class<? extends NodeProperty<?>>.*import static Class<? extends NodeProperty<?>>.*import PropertyDescriptor<?,T>import PropertyDescriptor<?,T>.*import static PropertyDescriptor<?,T>.*import ? extends Pimport ? extends P.*import static ? extends P.*import Class<? extends P>import Class<? extends P>.*import static Class<? extends P>.*import Future<Node>import Future<Node>.*import static Future<Node>.*import List<PlannedNode>import List<PlannedNode>.*import static List<PlannedNode>.*import Alwaysimport Always.*import static Always.*import RetentionStrategy<SlaveComputer>import RetentionStrategy<SlaveComputer>.*import static RetentionStrategy<SlaveComputer>.*import RetentionStrategy<?>import RetentionStrategy<?>.*import static RetentionStrategy<?>.*import AbstractDescribableImpl<RetentionStrategy<?>>import AbstractDescribableImpl<RetentionStrategy<?>>.*import static AbstractDescribableImpl<RetentionStrategy<?>>.*import Describable<RetentionStrategy<?>>import Describable<RetentionStrategy<?>>.*import static Describable<RetentionStrategy<?>>.*import Descriptor<RetentionStrategy<?>>import Descriptor<RetentionStrategy<?>>.*import static Descriptor<RetentionStrategy<?>>.*import DescriptorExtensionList<RetentionStrategy<?>,Descriptor<RetentionStrategy<?>>>import DescriptorExtensionList<RetentionStrategy<?>,Descriptor<RetentionStrategy<?>>>.*import static DescriptorExtensionList<RetentionStrategy<?>,Descriptor<RetentionStrategy<?>>>.*import ExtensionList<Descriptor<RetentionStrategy<?>>>import ExtensionList<Descriptor<RetentionStrategy<?>>>.*import static ExtensionList<Descriptor<RetentionStrategy<?>>>.*import AbstractList<Descriptor<RetentionStrategy<?>>>import AbstractList<Descriptor<RetentionStrategy<?>>>.*import static AbstractList<Descriptor<RetentionStrategy<?>>>.*import AbstractCollection<Descriptor<RetentionStrategy<?>>>import AbstractCollection<Descriptor<RetentionStrategy<?>>>.*import static AbstractCollection<Descriptor<RetentionStrategy<?>>>.*import Collection<Descriptor<RetentionStrategy<?>>>import Collection<Descriptor<RetentionStrategy<?>>>.*import static Collection<Descriptor<RetentionStrategy<?>>>.*import Iterable<Descriptor<RetentionStrategy<?>>>import Iterable<Descriptor<RetentionStrategy<?>>>.*import static Iterable<Descriptor<RetentionStrategy<?>>>.*import List<Descriptor<RetentionStrategy<?>>>import List<Descriptor<RetentionStrategy<?>>>.*import static List<Descriptor<RetentionStrategy<?>>>.*import RetentionStrategy<Computer>import RetentionStrategy<Computer>.*import static RetentionStrategy<Computer>.*import DescriptorList<RetentionStrategy<?>>import DescriptorList<RetentionStrategy<?>>.*import static DescriptorList<RetentionStrategy<?>>.*import SlaveSystemInfoimport SlaveSystemInfo.*import static SlaveSystemInfo.*import List<SlaveSystemInfo>import List<SlaveSystemInfo>.*import static List<SlaveSystemInfo>.*import Collection<SlaveSystemInfo>import Collection<SlaveSystemInfo>.*import static Collection<SlaveSystemInfo>.*import Iterable<SlaveSystemInfo>import Iterable<SlaveSystemInfo>.*import static Iterable<SlaveSystemInfo>.*import PublisherListimport PublisherList.*import static PublisherList.*import AbstractList<Descriptor<Publisher>>import AbstractList<Descriptor<Publisher>>.*import static AbstractList<Descriptor<Publisher>>.*import AbstractCollection<Descriptor<Publisher>>import AbstractCollection<Descriptor<Publisher>>.*import static AbstractCollection<Descriptor<Publisher>>.*import Collection<Descriptor<Publisher>>import Collection<Descriptor<Publisher>>.*import static Collection<Descriptor<Publisher>>.*import Iterable<Descriptor<Publisher>>import Iterable<Descriptor<Publisher>>.*import static Iterable<Descriptor<Publisher>>.*import List<Descriptor<Publisher>>import List<Descriptor<Publisher>>.*import static List<Descriptor<Publisher>>.*import Spliterator<Descriptor<Publisher>>import Spliterator<Descriptor<Publisher>>.*import static Spliterator<Descriptor<Publisher>>.*import ? super Descriptor<Publisher>import ? super Descriptor<Publisher>.*import static ? super Descriptor<Publisher>.*import Consumer<? super Descriptor<Publisher>>import Consumer<? super Descriptor<Publisher>>.*import static Consumer<? super Descriptor<Publisher>>.*import Iterator<Descriptor<Publisher>>import Iterator<Descriptor<Publisher>>.*import static Iterator<Descriptor<Publisher>>.*import Stream<Descriptor<Publisher>>import Stream<Descriptor<Publisher>>.*import static Stream<Descriptor<Publisher>>.*import BaseStream<Descriptor<Publisher>,Stream<Descriptor<Publisher>>>import BaseStream<Descriptor<Publisher>,Stream<Descriptor<Publisher>>>.*import static BaseStream<Descriptor<Publisher>,Stream<Descriptor<Publisher>>>.*import Predicate<? super Descriptor<Publisher>>import Predicate<? super Descriptor<Publisher>>.*import static Predicate<? super Descriptor<Publisher>>.*import ? extends Descriptor<Publisher>import ? extends Descriptor<Publisher>.*import static ? extends Descriptor<Publisher>.*import Collection<? extends Descriptor<Publisher>>import Collection<? extends Descriptor<Publisher>>.*import static Collection<? extends Descriptor<Publisher>>.*import Iterable<? extends Descriptor<Publisher>>import Iterable<? extends Descriptor<Publisher>>.*import static Iterable<? extends Descriptor<Publisher>>.*import ListIterator<Descriptor<Publisher>>import ListIterator<Descriptor<Publisher>>.*import static ListIterator<Descriptor<Publisher>>.*import Comparator<? super Descriptor<Publisher>>import Comparator<? super Descriptor<Publisher>>.*import static Comparator<? super Descriptor<Publisher>>.*import UnaryOperator<Descriptor<Publisher>>import UnaryOperator<Descriptor<Publisher>>.*import static UnaryOperator<Descriptor<Publisher>>.*import Function<Descriptor<Publisher>,Descriptor<Publisher>>import Function<Descriptor<Publisher>,Descriptor<Publisher>>.*import static Function<Descriptor<Publisher>,Descriptor<Publisher>>.*import WeakHashMapimport WeakHashMap.*import static WeakHashMap.*import WeakHashMap<Descriptor<Publisher>,Class<? extends Publisher>>import WeakHashMap<Descriptor<Publisher>,Class<? extends Publisher>>.*import static WeakHashMap<Descriptor<Publisher>,Class<? extends Publisher>>.*import AbstractMap<Descriptor<Publisher>,Class<? extends Publisher>>import AbstractMap<Descriptor<Publisher>,Class<? extends Publisher>>.*import static AbstractMap<Descriptor<Publisher>,Class<? extends Publisher>>.*import Map<Descriptor<Publisher>,Class<? extends Publisher>>import Map<Descriptor<Publisher>,Class<? extends Publisher>>.*import static Map<Descriptor<Publisher>,Class<? extends Publisher>>.*import List<Descriptor<Builder>>import List<Descriptor<Builder>>.*import static List<Descriptor<Builder>>.*import Collection<Descriptor<Builder>>import Collection<Descriptor<Builder>>.*import static Collection<Descriptor<Builder>>.*import Iterable<Descriptor<Builder>>import Iterable<Descriptor<Builder>>.*import static Iterable<Descriptor<Builder>>.*import BuildStepCompatibilityLayerimport BuildStepCompatibilityLayer.*import static BuildStepCompatibilityLayer.*import Project<?,?>import Project<?,?>.*import static Project<?,?>.*import List<Descriptor<T>>import List<Descriptor<T>>.*import static List<Descriptor<T>>.*import Collection<Descriptor<T>>import Collection<Descriptor<T>>.*import static Collection<Descriptor<T>>.*import Iterable<Descriptor<T>>import Iterable<Descriptor<T>>.*import static Iterable<Descriptor<T>>.*import Enum<BuildStepMonitor>import Enum<BuildStepMonitor>.*import static Enum<BuildStepMonitor>.*import Comparable<BuildStepMonitor>import Comparable<BuildStepMonitor>.*import static Comparable<BuildStepMonitor>.*import Class<BuildStepMonitor>import Class<BuildStepMonitor>.*import static Class<BuildStepMonitor>.*import BuildStepMonitor[]import BuildStepMonitor[].*import static BuildStepMonitor[].*import AbstractDescribableImpl<BuildWrapper>import AbstractDescribableImpl<BuildWrapper>.*import static AbstractDescribableImpl<BuildWrapper>.*import Describable<BuildWrapper>import Describable<BuildWrapper>.*import static Describable<BuildWrapper>.*import DescriptorExtensionList<BuildWrapper,Descriptor<BuildWrapper>>import DescriptorExtensionList<BuildWrapper,Descriptor<BuildWrapper>>.*import static DescriptorExtensionList<BuildWrapper,Descriptor<BuildWrapper>>.*import ExtensionList<Descriptor<BuildWrapper>>import ExtensionList<Descriptor<BuildWrapper>>.*import static ExtensionList<Descriptor<BuildWrapper>>.*import AbstractList<Descriptor<BuildWrapper>>import AbstractList<Descriptor<BuildWrapper>>.*import static AbstractList<Descriptor<BuildWrapper>>.*import AbstractCollection<Descriptor<BuildWrapper>>import AbstractCollection<Descriptor<BuildWrapper>>.*import static AbstractCollection<Descriptor<BuildWrapper>>.*import Collection<Descriptor<BuildWrapper>>import Collection<Descriptor<BuildWrapper>>.*import static Collection<Descriptor<BuildWrapper>>.*import Iterable<Descriptor<BuildWrapper>>import Iterable<Descriptor<BuildWrapper>>.*import static Iterable<Descriptor<BuildWrapper>>.*import List<Descriptor<BuildWrapper>>import List<Descriptor<BuildWrapper>>.*import static List<Descriptor<BuildWrapper>>.*import Describable<Builder>import Describable<Builder>.*import static Describable<Builder>.*import DescriptorExtensionList<Builder,Descriptor<Builder>>import DescriptorExtensionList<Builder,Descriptor<Builder>>.*import static DescriptorExtensionList<Builder,Descriptor<Builder>>.*import ExtensionList<Descriptor<Builder>>import ExtensionList<Descriptor<Builder>>.*import static ExtensionList<Descriptor<Builder>>.*import AbstractList<Descriptor<Builder>>import AbstractList<Descriptor<Builder>>.*import static AbstractList<Descriptor<Builder>>.*import AbstractCollection<Descriptor<Builder>>import AbstractCollection<Descriptor<Builder>>.*import static AbstractCollection<Descriptor<Builder>>.*import BuildStepDescriptor<Builder>import BuildStepDescriptor<Builder>.*import static BuildStepDescriptor<Builder>.*import Class<Builder>import Class<Builder>.*import static Class<Builder>.*import Mavenimport Maven.*import static Maven.*import MavenInstallation[]import MavenInstallation[].*import static MavenInstallation[].*import SettingsProviderimport SettingsProvider.*import static SettingsProvider.*import GlobalSettingsProviderimport GlobalSettingsProvider.*import static GlobalSettingsProvider.*import EnvironmentSpecific<MavenInstallation>import EnvironmentSpecific<MavenInstallation>.*import static EnvironmentSpecific<MavenInstallation>.*import NodeSpecific<MavenInstallation>import NodeSpecific<MavenInstallation>.*import static NodeSpecific<MavenInstallation>.*import Describable<Publisher>import Describable<Publisher>.*import static Describable<Publisher>.*import DescriptorExtensionList<Publisher,Descriptor<Publisher>>import DescriptorExtensionList<Publisher,Descriptor<Publisher>>.*import static DescriptorExtensionList<Publisher,Descriptor<Publisher>>.*import ExtensionList<Descriptor<Publisher>>import ExtensionList<Descriptor<Publisher>>.*import static ExtensionList<Descriptor<Publisher>>.*import Descriptor<P>import Descriptor<P>.*import static Descriptor<P>.*import Class<P>import Class<P>.*import static Class<P>.*import Describable<P>import Describable<P>.*import static Describable<P>.*import ToolDescriptorimport ToolDescriptor.*import static ToolDescriptor.*import Descriptor<ToolInstallation>import Descriptor<ToolInstallation>.*import static Descriptor<ToolInstallation>.*import Class<ToolInstallation>import Class<ToolInstallation>.*import static Class<ToolInstallation>.*import ? extends ToolInstallationimport ? extends ToolInstallation.*import static ? extends ToolInstallation.*import Class<? extends ToolInstallation>import Class<? extends ToolInstallation>.*import static Class<? extends ToolInstallation>.*import ToolPropertyDescriptorimport ToolPropertyDescriptor.*import static ToolPropertyDescriptor.*import DescribableList<ToolProperty<?>,ToolPropertyDescriptor>import DescribableList<ToolProperty<?>,ToolPropertyDescriptor>.*import static DescribableList<ToolProperty<?>,ToolPropertyDescriptor>.*import PersistedList<ToolProperty<?>>import PersistedList<ToolProperty<?>>.*import static PersistedList<ToolProperty<?>>.*import AbstractList<ToolProperty<?>>import AbstractList<ToolProperty<?>>.*import static AbstractList<ToolProperty<?>>.*import AbstractCollection<ToolProperty<?>>import AbstractCollection<ToolProperty<?>>.*import static AbstractCollection<ToolProperty<?>>.*import Collection<ToolProperty<?>>import Collection<ToolProperty<?>>.*import static Collection<ToolProperty<?>>.*import Iterable<ToolProperty<?>>import Iterable<ToolProperty<?>>.*import static Iterable<ToolProperty<?>>.*import List<ToolProperty<?>>import List<ToolProperty<?>>.*import static List<ToolProperty<?>>.*import ToolInstallerimport ToolInstaller.*import static ToolInstaller.*import ? extends ToolInstallerimport ? extends ToolInstaller.*import static ? extends ToolInstaller.*import List<? extends ToolInstaller>import List<? extends ToolInstaller>.*import static List<? extends ToolInstaller>.*import Collection<? extends ToolInstaller>import Collection<? extends ToolInstaller>.*import static Collection<? extends ToolInstaller>.*import Iterable<? extends ToolInstaller>import Iterable<? extends ToolInstaller>.*import static Iterable<? extends ToolInstaller>.*import List<ToolPropertyDescriptor>import List<ToolPropertyDescriptor>.*import static List<ToolPropertyDescriptor>.*import Collection<ToolPropertyDescriptor>import Collection<ToolPropertyDescriptor>.*import static Collection<ToolPropertyDescriptor>.*import Iterable<ToolPropertyDescriptor>import Iterable<ToolPropertyDescriptor>.*import static Iterable<ToolPropertyDescriptor>.*import ToolInstallation[]import ToolInstallation[].*import static ToolInstallation[].*import AbstractDescribableImpl<ToolInstallation>import AbstractDescribableImpl<ToolInstallation>.*import static AbstractDescribableImpl<ToolInstallation>.*import Describable<ToolInstallation>import Describable<ToolInstallation>.*import static Describable<ToolInstallation>.*import ToolDescriptor<?>import ToolDescriptor<?>.*import static ToolDescriptor<?>.*import DescriptorExtensionList<ToolInstallation,ToolDescriptor<?>>import DescriptorExtensionList<ToolInstallation,ToolDescriptor<?>>.*import static DescriptorExtensionList<ToolInstallation,ToolDescriptor<?>>.*import ExtensionList<ToolDescriptor<?>>import ExtensionList<ToolDescriptor<?>>.*import static ExtensionList<ToolDescriptor<?>>.*import AbstractList<ToolDescriptor<?>>import AbstractList<ToolDescriptor<?>>.*import static AbstractList<ToolDescriptor<?>>.*import AbstractCollection<ToolDescriptor<?>>import AbstractCollection<ToolDescriptor<?>>.*import static AbstractCollection<ToolDescriptor<?>>.*import Collection<ToolDescriptor<?>>import Collection<ToolDescriptor<?>>.*import static Collection<ToolDescriptor<?>>.*import Iterable<ToolDescriptor<?>>import Iterable<ToolDescriptor<?>>.*import static Iterable<ToolDescriptor<?>>.*import List<ToolDescriptor<?>>import List<ToolDescriptor<?>>.*import static List<ToolDescriptor<?>>.*import Describable<ToolInstaller>import Describable<ToolInstaller>.*import static Describable<ToolInstaller>.*import Descriptor<ToolInstaller>import Descriptor<ToolInstaller>.*import static Descriptor<ToolInstaller>.*import ToolInstallerDescriptorimport ToolInstallerDescriptor.*import static ToolInstallerDescriptor.*import ToolInstallerDescriptor<>import ToolInstallerDescriptor<>.*import static ToolInstallerDescriptor<>.*import ToolInstallerDescriptor<?>import ToolInstallerDescriptor<?>.*import static ToolInstallerDescriptor<?>.*import Class<ToolInstaller>import Class<ToolInstaller>.*import static Class<ToolInstaller>.*import Class<? extends ToolInstaller>import Class<? extends ToolInstaller>.*import static Class<? extends ToolInstaller>.*import List<ToolInstallerDescriptor<?>>import List<ToolInstallerDescriptor<?>>.*import static List<ToolInstallerDescriptor<?>>.*import Collection<ToolInstallerDescriptor<?>>import Collection<ToolInstallerDescriptor<?>>.*import static Collection<ToolInstallerDescriptor<?>>.*import Iterable<ToolInstallerDescriptor<?>>import Iterable<ToolInstallerDescriptor<?>>.*import static Iterable<ToolInstallerDescriptor<?>>.*import DescriptorExtensionList<ToolInstaller,ToolInstallerDescriptor<?>>import DescriptorExtensionList<ToolInstaller,ToolInstallerDescriptor<?>>.*import static DescriptorExtensionList<ToolInstaller,ToolInstallerDescriptor<?>>.*import ExtensionList<ToolInstallerDescriptor<?>>import ExtensionList<ToolInstallerDescriptor<?>>.*import static ExtensionList<ToolInstallerDescriptor<?>>.*import AbstractList<ToolInstallerDescriptor<?>>import AbstractList<ToolInstallerDescriptor<?>>.*import static AbstractList<ToolInstallerDescriptor<?>>.*import AbstractCollection<ToolInstallerDescriptor<?>>import AbstractCollection<ToolInstallerDescriptor<?>>.*import static AbstractCollection<ToolInstallerDescriptor<?>>.*import Descriptor<ToolProperty<?>>import Descriptor<ToolProperty<?>>.*import static Descriptor<ToolProperty<?>>.*import DescriptorExtensionList<ToolProperty<?>,ToolPropertyDescriptor>import DescriptorExtensionList<ToolProperty<?>,ToolPropertyDescriptor>.*import static DescriptorExtensionList<ToolProperty<?>,ToolPropertyDescriptor>.*import ExtensionList<ToolPropertyDescriptor>import ExtensionList<ToolPropertyDescriptor>.*import static ExtensionList<ToolPropertyDescriptor>.*import AbstractList<ToolPropertyDescriptor>import AbstractList<ToolPropertyDescriptor>.*import static AbstractList<ToolPropertyDescriptor>.*import AbstractCollection<ToolPropertyDescriptor>import AbstractCollection<ToolPropertyDescriptor>.*import static AbstractCollection<ToolPropertyDescriptor>.*import PropertyDescriptor<ToolProperty<?>,ToolInstallation>import PropertyDescriptor<ToolProperty<?>,ToolInstallation>.*import static PropertyDescriptor<ToolProperty<?>,ToolInstallation>.*import ToolProperty<>import ToolProperty<>.*import static ToolProperty<>.*import Class<ToolProperty<?>>import Class<ToolProperty<?>>.*import static Class<ToolProperty<?>>.*import Class<? extends ToolProperty<?>>import Class<? extends ToolProperty<?>>.*import static Class<? extends ToolProperty<?>>.*import List<SCMTriggerItem>import List<SCMTriggerItem>.*import static List<SCMTriggerItem>.*import Collection<SCMTriggerItem>import Collection<SCMTriggerItem>.*import static Collection<SCMTriggerItem>.*import Iterable<SCMTriggerItem>import Iterable<SCMTriggerItem>.*import static Iterable<SCMTriggerItem>.*import List<Runner>import List<Runner>.*import static List<Runner>.*import Collection<Runner>import Collection<Runner>.*import static Collection<Runner>.*import Iterable<Runner>import Iterable<Runner>.*import static Iterable<Runner>.*import Trigger<Item>import Trigger<Item>.*import static Trigger<Item>.*import Class<Trigger<?>>import Class<Trigger<?>>.*import static Class<Trigger<?>>.*import ? extends Trigger<?>import ? extends Trigger<?>.*import static ? extends Trigger<?>.*import Class<? extends Trigger<?>>import Class<? extends Trigger<?>>.*import static Class<? extends Trigger<?>>.*import AbstractTaskListenerimport AbstractTaskListener.*import static AbstractTaskListener.*import Message<>import Message<>.*import static Message<>.*import Message<T>import Message<T>.*import static Message<T>.*import ExtensionList<AlternativeUiTextProvider>import ExtensionList<AlternativeUiTextProvider>.*import static ExtensionList<AlternativeUiTextProvider>.*import AbstractList<AlternativeUiTextProvider>import AbstractList<AlternativeUiTextProvider>.*import static AbstractList<AlternativeUiTextProvider>.*import AbstractCollection<AlternativeUiTextProvider>import AbstractCollection<AlternativeUiTextProvider>.*import static AbstractCollection<AlternativeUiTextProvider>.*import Collection<AlternativeUiTextProvider>import Collection<AlternativeUiTextProvider>.*import static Collection<AlternativeUiTextProvider>.*import Iterable<AlternativeUiTextProvider>import Iterable<AlternativeUiTextProvider>.*import static Iterable<AlternativeUiTextProvider>.*import List<AlternativeUiTextProvider>import List<AlternativeUiTextProvider>.*import static List<AlternativeUiTextProvider>.*import Collection<? super E>import Collection<? super E>.*import static Collection<? super E>.*import Iterable<? super E>import Iterable<? super E>.*import static Iterable<? super E>.*import CopyOnWriteList<? extends E>import CopyOnWriteList<? extends E>.*import static CopyOnWriteList<? extends E>.*import Ownerimport Owner.*import static Owner.*import PersistedList<T>import PersistedList<T>.*import static PersistedList<T>.*import Describable[]import Describable[].*import static Describable[].*import Describable<T>[]import Describable<T>[].*import static Describable<T>[].*import Describable<>[]import Describable<>[].*import static Describable<>[].*import Map<D,T>import Map<D,T>.*import static Map<D,T>.*import AbstractList<Descriptor<T>>import AbstractList<Descriptor<T>>.*import static AbstractList<Descriptor<T>>.*import AbstractCollection<Descriptor<T>>import AbstractCollection<Descriptor<T>>.*import static AbstractCollection<Descriptor<T>>.*import Spliterator<Descriptor<T>>import Spliterator<Descriptor<T>>.*import static Spliterator<Descriptor<T>>.*import ? super Descriptor<T>import ? super Descriptor<T>.*import static ? super Descriptor<T>.*import Consumer<? super Descriptor<T>>import Consumer<? super Descriptor<T>>.*import static Consumer<? super Descriptor<T>>.*import Iterator<Descriptor<T>>import Iterator<Descriptor<T>>.*import static Iterator<Descriptor<T>>.*import Stream<Descriptor<T>>import Stream<Descriptor<T>>.*import static Stream<Descriptor<T>>.*import BaseStream<Descriptor<T>,Stream<Descriptor<T>>>import BaseStream<Descriptor<T>,Stream<Descriptor<T>>>.*import static BaseStream<Descriptor<T>,Stream<Descriptor<T>>>.*import Predicate<? super Descriptor<T>>import Predicate<? super Descriptor<T>>.*import static Predicate<? super Descriptor<T>>.*import ListIterator<Descriptor<T>>import ListIterator<Descriptor<T>>.*import static ListIterator<Descriptor<T>>.*import Comparator<? super Descriptor<T>>import Comparator<? super Descriptor<T>>.*import static Comparator<? super Descriptor<T>>.*import UnaryOperator<Descriptor<T>>import UnaryOperator<Descriptor<T>>.*import static UnaryOperator<Descriptor<T>>.*import Function<Descriptor<T>,Descriptor<T>>import Function<Descriptor<T>,Descriptor<T>>.*import static Function<Descriptor<T>,Descriptor<T>>.*import Descriptor[]import Descriptor[].*import static Descriptor[].*import Descriptor<T>[]import Descriptor<T>[].*import static Descriptor<T>[].*import FileVisitorimport FileVisitor.*import static FileVisitor.*import FileValidatorimport FileValidator.*import static FileValidator.*import Kindimport Kind.*import static Kind.*import Enum<Kind>import Enum<Kind>.*import static Enum<Kind>.*import Comparable<Kind>import Comparable<Kind>.*import static Comparable<Kind>.*import Class<Kind>import Class<Kind>.*import static Class<Kind>.*import Kind[]import Kind[].*import static Kind[].*import Option[]import Option[].*import static Option[].*import HttpServletRequestimport HttpServletRequest.*import static HttpServletRequest.*import RemotingDiagnosticsimport RemotingDiagnostics.*import static RemotingDiagnostics.*import Future<Map<String,String>>import Future<Map<String,String>>.*import static Future<Map<String,String>>.*import Handlerimport Handler.*import static Handler.*import Stream<R>import Stream<R>.*import static Stream<R>.*import BaseStream<R,Stream<R>>import BaseStream<R,Stream<R>>.*import static BaseStream<R,Stream<R>>.*import Predicate<? super R>import Predicate<? super R>.*import static Predicate<? super R>.*import Collection<? extends R>import Collection<? extends R>.*import static Collection<? extends R>.*import Iterable<? extends R>import Iterable<? extends R>.*import static Iterable<? extends R>.*import ListIterator<R>import ListIterator<R>.*import static ListIterator<R>.*import Comparator<? super R>import Comparator<? super R>.*import static Comparator<? super R>.*import UnaryOperator<R>import UnaryOperator<R>.*import static UnaryOperator<R>.*import Function<R,R>import Function<R,R>.*import static Function<R,R>.*import Predicate<R>import Predicate<R>.*import static Predicate<R>.*import Cipherimport Cipher.*import static Cipher.*import UnsupportedEncodingExceptionimport UnsupportedEncodingException.*import static UnsupportedEncodingException.*import WeightFunctionimport WeightFunction.*import static WeightFunction.*import AbstractList<Entry>import AbstractList<Entry>.*import static AbstractList<Entry>.*import AbstractCollection<Entry>import AbstractCollection<Entry>.*import static AbstractCollection<Entry>.*import Collection<Entry>import Collection<Entry>.*import static Collection<Entry>.*import Iterable<Entry>import Iterable<Entry>.*import static Iterable<Entry>.*import List<Entry>import List<Entry>.*import static List<Entry>.*import Spliterator<Entry>import Spliterator<Entry>.*import static Spliterator<Entry>.*import ? super Entryimport ? super Entry.*import static ? super Entry.*import Consumer<? super Entry>import Consumer<? super Entry>.*import static Consumer<? super Entry>.*import Iterator<Entry>import Iterator<Entry>.*import static Iterator<Entry>.*import Stream<Entry>import Stream<Entry>.*import static Stream<Entry>.*import BaseStream<Entry,Stream<Entry>>import BaseStream<Entry,Stream<Entry>>.*import static BaseStream<Entry,Stream<Entry>>.*import Predicate<? super Entry>import Predicate<? super Entry>.*import static Predicate<? super Entry>.*import Collection<? extends Entry>import Collection<? extends Entry>.*import static Collection<? extends Entry>.*import ListIterator<Entry>import ListIterator<Entry>.*import static ListIterator<Entry>.*import Comparator<? super Entry>import Comparator<? super Entry>.*import static Comparator<? super Entry>.*import UnaryOperator<Entry>import UnaryOperator<Entry>.*import static UnaryOperator<Entry>.*import Function<Entry,Entry>import Function<Entry,Entry>.*import static Function<Entry,Entry>.*import WeightFunction<T>import WeightFunction<T>.*import static WeightFunction<T>.*import Comparable<VersionNumber>import Comparable<VersionNumber>.*import static Comparable<VersionNumber>.*import Comparator<VersionNumber>import Comparator<VersionNumber>.*import static Comparator<VersionNumber>.*import ClassOwnershipimport ClassOwnership.*import static ClassOwnership.*import Archiverimport Archiver.*import static Archiver.*import Describable<ListViewColumn>import Describable<ListViewColumn>.*import static Describable<ListViewColumn>.*import List<ListViewColumn>import List<ListViewColumn>.*import static List<ListViewColumn>.*import Collection<ListViewColumn>import Collection<ListViewColumn>.*import static Collection<ListViewColumn>.*import Iterable<ListViewColumn>import Iterable<ListViewColumn>.*import static Iterable<ListViewColumn>.*import DescriptorExtensionList<ListViewColumn,Descriptor<ListViewColumn>>import DescriptorExtensionList<ListViewColumn,Descriptor<ListViewColumn>>.*import static DescriptorExtensionList<ListViewColumn,Descriptor<ListViewColumn>>.*import ExtensionList<Descriptor<ListViewColumn>>import ExtensionList<Descriptor<ListViewColumn>>.*import static ExtensionList<Descriptor<ListViewColumn>>.*import AbstractList<Descriptor<ListViewColumn>>import AbstractList<Descriptor<ListViewColumn>>.*import static AbstractList<Descriptor<ListViewColumn>>.*import AbstractCollection<Descriptor<ListViewColumn>>import AbstractCollection<Descriptor<ListViewColumn>>.*import static AbstractCollection<Descriptor<ListViewColumn>>.*import DescriptorList<ListViewColumn>import DescriptorList<ListViewColumn>.*import static DescriptorList<ListViewColumn>.*import MyViewsTabBarimport MyViewsTabBar.*import static MyViewsTabBar.*import AbstractDescribableImpl<MyViewsTabBar>import AbstractDescribableImpl<MyViewsTabBar>.*import static AbstractDescribableImpl<MyViewsTabBar>.*import Describable<MyViewsTabBar>import Describable<MyViewsTabBar>.*import static Describable<MyViewsTabBar>.*import Descriptor<MyViewsTabBar>import Descriptor<MyViewsTabBar>.*import static Descriptor<MyViewsTabBar>.*import MyViewsTabBarDescriptorimport MyViewsTabBarDescriptor.*import static MyViewsTabBarDescriptor.*import DescriptorExtensionList<MyViewsTabBar,Descriptor<MyViewsTabBar>>import DescriptorExtensionList<MyViewsTabBar,Descriptor<MyViewsTabBar>>.*import static DescriptorExtensionList<MyViewsTabBar,Descriptor<MyViewsTabBar>>.*import ExtensionList<Descriptor<MyViewsTabBar>>import ExtensionList<Descriptor<MyViewsTabBar>>.*import static ExtensionList<Descriptor<MyViewsTabBar>>.*import AbstractList<Descriptor<MyViewsTabBar>>import AbstractList<Descriptor<MyViewsTabBar>>.*import static AbstractList<Descriptor<MyViewsTabBar>>.*import AbstractCollection<Descriptor<MyViewsTabBar>>import AbstractCollection<Descriptor<MyViewsTabBar>>.*import static AbstractCollection<Descriptor<MyViewsTabBar>>.*import Collection<Descriptor<MyViewsTabBar>>import Collection<Descriptor<MyViewsTabBar>>.*import static Collection<Descriptor<MyViewsTabBar>>.*import Iterable<Descriptor<MyViewsTabBar>>import Iterable<Descriptor<MyViewsTabBar>>.*import static Iterable<Descriptor<MyViewsTabBar>>.*import List<Descriptor<MyViewsTabBar>>import List<Descriptor<MyViewsTabBar>>.*import static List<Descriptor<MyViewsTabBar>>.*import Class<MyViewsTabBar>import Class<MyViewsTabBar>.*import static Class<MyViewsTabBar>.*import ? extends MyViewsTabBarimport ? extends MyViewsTabBar.*import static ? extends MyViewsTabBar.*import Class<? extends MyViewsTabBar>import Class<? extends MyViewsTabBar>.*import static Class<? extends MyViewsTabBar>.*import Describable<ViewJobFilter>import Describable<ViewJobFilter>.*import static Describable<ViewJobFilter>.*import DescriptorExtensionList<ViewJobFilter,Descriptor<ViewJobFilter>>import DescriptorExtensionList<ViewJobFilter,Descriptor<ViewJobFilter>>.*import static DescriptorExtensionList<ViewJobFilter,Descriptor<ViewJobFilter>>.*import ExtensionList<Descriptor<ViewJobFilter>>import ExtensionList<Descriptor<ViewJobFilter>>.*import static ExtensionList<Descriptor<ViewJobFilter>>.*import AbstractList<Descriptor<ViewJobFilter>>import AbstractList<Descriptor<ViewJobFilter>>.*import static AbstractList<Descriptor<ViewJobFilter>>.*import AbstractCollection<Descriptor<ViewJobFilter>>import AbstractCollection<Descriptor<ViewJobFilter>>.*import static AbstractCollection<Descriptor<ViewJobFilter>>.*import AbstractDescribableImpl<ViewsTabBar>import AbstractDescribableImpl<ViewsTabBar>.*import static AbstractDescribableImpl<ViewsTabBar>.*import Describable<ViewsTabBar>import Describable<ViewsTabBar>.*import static Describable<ViewsTabBar>.*import Descriptor<ViewsTabBar>import Descriptor<ViewsTabBar>.*import static Descriptor<ViewsTabBar>.*import ViewsTabBarDescriptorimport ViewsTabBarDescriptor.*import static ViewsTabBarDescriptor.*import DescriptorExtensionList<ViewsTabBar,Descriptor<ViewsTabBar>>import DescriptorExtensionList<ViewsTabBar,Descriptor<ViewsTabBar>>.*import static DescriptorExtensionList<ViewsTabBar,Descriptor<ViewsTabBar>>.*import ExtensionList<Descriptor<ViewsTabBar>>import ExtensionList<Descriptor<ViewsTabBar>>.*import static ExtensionList<Descriptor<ViewsTabBar>>.*import AbstractList<Descriptor<ViewsTabBar>>import AbstractList<Descriptor<ViewsTabBar>>.*import static AbstractList<Descriptor<ViewsTabBar>>.*import AbstractCollection<Descriptor<ViewsTabBar>>import AbstractCollection<Descriptor<ViewsTabBar>>.*import static AbstractCollection<Descriptor<ViewsTabBar>>.*import Collection<Descriptor<ViewsTabBar>>import Collection<Descriptor<ViewsTabBar>>.*import static Collection<Descriptor<ViewsTabBar>>.*import Iterable<Descriptor<ViewsTabBar>>import Iterable<Descriptor<ViewsTabBar>>.*import static Iterable<Descriptor<ViewsTabBar>>.*import List<Descriptor<ViewsTabBar>>import List<Descriptor<ViewsTabBar>>.*import static List<Descriptor<ViewsTabBar>>.*import Class<ViewsTabBar>import Class<ViewsTabBar>.*import static Class<ViewsTabBar>.*import ? extends ViewsTabBarimport ? extends ViewsTabBar.*import static ? extends ViewsTabBar.*import Class<? extends ViewsTabBar>import Class<? extends ViewsTabBar>.*import static Class<? extends ViewsTabBar>.*import Oimport O.*import static O.*import Headerimport Header.*import static Header.*import Adapter<? super T>import Adapter<? super T>.*import static Adapter<? super T>.*import Panelimport Panel.*import static Panel.*import AccessibleContextimport AccessibleContext.*import static AccessibleContext.*import String[][]import String[][].*import static String[][].*import AudioClipimport AudioClip.*import static AudioClip.*import Imageimport Image.*import static Image.*import Dimensionimport Dimension.*import static Dimension.*import AppletContextimport AppletContext.*import static AppletContext.*import AppletStubimport AppletStub.*import static AppletStub.*import HeadlessExceptionimport HeadlessException.*import static HeadlessException.*import Enumeration<Applet>import Enumeration<Applet>.*import static Enumeration<Applet>.*import AWTEventimport AWTEvent.*import static AWTEvent.*import AccessControlContextimport AccessControlContext.*import static AccessControlContext.*import AWTExceptionimport AWTException.*import static AWTException.*import AWTKeyStrokeimport AWTKeyStroke.*import static AWTKeyStroke.*import KeyEventimport KeyEvent.*import static KeyEvent.*import Characterimport Character.*import static Character.*import Adjustableimport Adjustable.*import static Adjustable.*import AdjustmentListenerimport AdjustmentListener.*import static AdjustmentListener.*import AlphaCompositeimport AlphaComposite.*import static AlphaComposite.*import Compositeimport Composite.*import static Composite.*import ColorModelimport ColorModel.*import static ColorModel.*import RenderingHintsimport RenderingHints.*import static RenderingHints.*import CompositeContextimport CompositeContext.*import static CompositeContext.*import AttributeValueimport AttributeValue.*import static AttributeValue.*import BasicStrokeimport BasicStroke.*import static BasicStroke.*import Strokeimport Stroke.*import static Stroke.*import Shapeimport Shape.*import static Shape.*import ConstructorPropertiesimport ConstructorProperties.*import static ConstructorProperties.*import FlipContentsimport FlipContents.*import static FlipContents.*import BufferCapabilitiesimport BufferCapabilities.*import static BufferCapabilities.*import ImageCapabilitiesimport ImageCapabilities.*import static ImageCapabilities.*import Buttonimport Button.*import static Button.*import Componentimport Component.*import static Component.*import Accessibleimport Accessible.*import static Accessible.*import ActionEventimport ActionEvent.*import static ActionEvent.*import EventListenerimport EventListener.*import static EventListener.*import EventListener[]import EventListener[].*import static EventListener[].*import ActionListenerimport ActionListener.*import static ActionListener.*import ActionListener[]import ActionListener[].*import static ActionListener[].*import Canvasimport Canvas.*import static Canvas.*import BufferStrategyimport BufferStrategy.*import static BufferStrategy.*import Graphicsimport Graphics.*import static Graphics.*import GraphicsConfigurationimport GraphicsConfiguration.*import static GraphicsConfiguration.*import Checkboximport Checkbox.*import static Checkbox.*import ItemSelectableimport ItemSelectable.*import static ItemSelectable.*import ItemEventimport ItemEvent.*import static ItemEvent.*import ItemListener[]import ItemListener[].*import static ItemListener[].*import CheckboxGroupimport CheckboxGroup.*import static CheckboxGroup.*import CheckboxMenuItemimport CheckboxMenuItem.*import static CheckboxMenuItem.*import MenuItemimport MenuItem.*import static MenuItem.*import Choiceimport Choice.*import static Choice.*import Vectorimport Vector.*import static Vector.*import Vector<String>import Vector<String>.*import static Vector<String>.*import Paintimport Paint.*import static Paint.*import Rectangleimport Rectangle.*import static Rectangle.*import Rectangle2Dimport Rectangle2D.*import static Rectangle2D.*import AffineTransformimport AffineTransform.*import static AffineTransform.*import PaintContextimport PaintContext.*import static PaintContext.*import ColorSpaceimport ColorSpace.*import static ColorSpace.*import BaselineResizeBehaviorimport BaselineResizeBehavior.*import static BaselineResizeBehavior.*import Enum<BaselineResizeBehavior>import Enum<BaselineResizeBehavior>.*import static Enum<BaselineResizeBehavior>.*import Comparable<BaselineResizeBehavior>import Comparable<BaselineResizeBehavior>.*import static Comparable<BaselineResizeBehavior>.*import Class<BaselineResizeBehavior>import Class<BaselineResizeBehavior>.*import static Class<BaselineResizeBehavior>.*import BaselineResizeBehavior[]import BaselineResizeBehavior[].*import static BaselineResizeBehavior[].*import ImageObserverimport ImageObserver.*import static ImageObserver.*import MenuContainerimport MenuContainer.*import static MenuContainer.*import Regionimport Region.*import static Region.*import ComponentPeerimport ComponentPeer.*import static ComponentPeer.*import Pointimport Point.*import static Point.*import AccessibleStateSetimport AccessibleStateSet.*import static AccessibleStateSet.*import ComponentOrientationimport ComponentOrientation.*import static ComponentOrientation.*import PropertyChangeListenerimport PropertyChangeListener.*import static PropertyChangeListener.*import PropertyChangeListener[]import PropertyChangeListener[].*import static PropertyChangeListener[].*import Containerimport Container.*import static Container.*import MenuComponentimport MenuComponent.*import static MenuComponent.*import PopupMenuimport PopupMenu.*import static PopupMenu.*import RequestFocusControllerimport RequestFocusController.*import static RequestFocusController.*import Set<AWTKeyStroke>import Set<AWTKeyStroke>.*import static Set<AWTKeyStroke>.*import Collection<AWTKeyStroke>import Collection<AWTKeyStroke>.*import static Collection<AWTKeyStroke>.*import Iterable<AWTKeyStroke>import Iterable<AWTKeyStroke>.*import static Iterable<AWTKeyStroke>.*import ? extends AWTKeyStrokeimport ? extends AWTKeyStroke.*import static ? extends AWTKeyStroke.*import Set<? extends AWTKeyStroke>import Set<? extends AWTKeyStroke>.*import static Set<? extends AWTKeyStroke>.*import Collection<? extends AWTKeyStroke>import Collection<? extends AWTKeyStroke>.*import static Collection<? extends AWTKeyStroke>.*import Iterable<? extends AWTKeyStroke>import Iterable<? extends AWTKeyStroke>.*import static Iterable<? extends AWTKeyStroke>.*import HierarchyEventimport HierarchyEvent.*import static HierarchyEvent.*import InputMethodEventimport InputMethodEvent.*import static InputMethodEvent.*import MouseWheelEventimport MouseWheelEvent.*import static MouseWheelEvent.*import FocusEventimport FocusEvent.*import static FocusEvent.*import ComponentEventimport ComponentEvent.*import static ComponentEvent.*import InputContextimport InputContext.*import static InputContext.*import InputMethodRequestsimport InputMethodRequests.*import static InputMethodRequests.*import InputMethodListenerimport InputMethodListener.*import static InputMethodListener.*import InputMethodListener[]import InputMethodListener[].*import static InputMethodListener[].*import MouseWheelListenerimport MouseWheelListener.*import static MouseWheelListener.*import MouseWheelListener[]import MouseWheelListener[].*import static MouseWheelListener[].*import MouseMotionListenerimport MouseMotionListener.*import static MouseMotionListener.*import MouseMotionListener[]import MouseMotionListener[].*import static MouseMotionListener[].*import MouseListenerimport MouseListener.*import static MouseListener.*import MouseListener[]import MouseListener[].*import static MouseListener[].*import KeyListenerimport KeyListener.*import static KeyListener.*import KeyListener[]import KeyListener[].*import static KeyListener[].*import HierarchyBoundsListenerimport HierarchyBoundsListener.*import static HierarchyBoundsListener.*import HierarchyBoundsListener[]import HierarchyBoundsListener[].*import static HierarchyBoundsListener[].*import HierarchyListenerimport HierarchyListener.*import static HierarchyListener.*import HierarchyListener[]import HierarchyListener[].*import static HierarchyListener[].*import FocusListenerimport FocusListener.*import static FocusListener.*import FocusListener[]import FocusListener[].*import static FocusListener[].*import ComponentListenerimport ComponentListener.*import static ComponentListener.*import ComponentListener[]import ComponentListener[].*import static ComponentListener[].*import VolatileImageimport VolatileImage.*import static VolatileImage.*import ImageProducerimport ImageProducer.*import static ImageProducer.*import Cursorimport Cursor.*import static Cursor.*import Fontimport Font.*import static Font.*import FontMetricsimport FontMetrics.*import static FontMetrics.*import Transientimport Transient.*import static Transient.*import PointerInfoimport PointerInfo.*import static PointerInfo.*import Toolkitimport Toolkit.*import static Toolkit.*import DropTargetimport DropTarget.*import static DropTarget.*import EventQueueItemimport EventQueueItem.*import static EventQueueItem.*import EventQueueItem[]import EventQueueItem[].*import static EventQueueItem[].*import Set[]import Set[].*import static Set[].*import Set<AWTKeyStroke>[]import Set<AWTKeyStroke>[].*import static Set<AWTKeyStroke>[].*import Vector<PopupMenu>import Vector<PopupMenu>.*import static Vector<PopupMenu>.*import AbstractList<PopupMenu>import AbstractList<PopupMenu>.*import static AbstractList<PopupMenu>.*import AbstractCollection<PopupMenu>import AbstractCollection<PopupMenu>.*import static AbstractCollection<PopupMenu>.*import Collection<PopupMenu>import Collection<PopupMenu>.*import static Collection<PopupMenu>.*import Iterable<PopupMenu>import Iterable<PopupMenu>.*import static Iterable<PopupMenu>.*import List<PopupMenu>import List<PopupMenu>.*import static List<PopupMenu>.*import AppContextimport AppContext.*import static AppContext.*import ResourceBundleimport ResourceBundle.*import static ResourceBundle.*import Rasterimport Raster.*import static Raster.*import WritableRasterimport WritableRaster.*import static WritableRaster.*import Conditionalimport Conditional.*import static Conditional.*import FocusTraversalPolicyimport FocusTraversalPolicy.*import static FocusTraversalPolicy.*import ContainerEventimport ContainerEvent.*import static ContainerEvent.*import ContainerListenerimport ContainerListener.*import static ContainerListener.*import ContainerListener[]import ContainerListener[].*import static ContainerListener[].*import LayoutManagerimport LayoutManager.*import static LayoutManager.*import Insetsimport Insets.*import static Insets.*import Component[]import Component[].*import static Component[].*import CursorDisposerimport CursorDisposer.*import static CursorDisposer.*import DisposerRecordimport DisposerRecord.*import static DisposerRecord.*import Cursor[]import Cursor[].*import static Cursor[].*import Enum<Action>import Enum<Action>.*import static Enum<Action>.*import Comparable<Action>import Comparable<Action>.*import static Comparable<Action>.*import Class<Action>import Class<Action>.*import static Class<Action>.*import Desktopimport Desktop.*import static Desktop.*import ModalExclusionTypeimport ModalExclusionType.*import static ModalExclusionType.*import Enum<ModalExclusionType>import Enum<ModalExclusionType>.*import static Enum<ModalExclusionType>.*import Comparable<ModalExclusionType>import Comparable<ModalExclusionType>.*import static Comparable<ModalExclusionType>.*import Class<ModalExclusionType>import Class<ModalExclusionType>.*import static Class<ModalExclusionType>.*import Dialogimport Dialog.*import static Dialog.*import ModalExclusionType[]import ModalExclusionType[].*import static ModalExclusionType[].*import ModalityTypeimport ModalityType.*import static ModalityType.*import Enum<ModalityType>import Enum<ModalityType>.*import static Enum<ModalityType>.*import Comparable<ModalityType>import Comparable<ModalityType>.*import static Comparable<ModalityType>.*import Class<ModalityType>import Class<ModalityType>.*import static Class<ModalityType>.*import ModalityType[]import ModalityType[].*import static ModalityType[].*import List<Window>import List<Window>.*import static List<Window>.*import Collection<Window>import Collection<Window>.*import static Collection<Window>.*import Iterable<Window>import Iterable<Window>.*import static Iterable<Window>.*import Frameimport Frame.*import static Frame.*import IdentityArrayListimport IdentityArrayList.*import static IdentityArrayList.*import IdentityArrayList<Window>import IdentityArrayList<Window>.*import static IdentityArrayList<Window>.*import AbstractList<Window>import AbstractList<Window>.*import static AbstractList<Window>.*import AbstractCollection<Window>import AbstractCollection<Window>.*import static AbstractCollection<Window>.*import IdentityArrayList<Dialog>import IdentityArrayList<Dialog>.*import static IdentityArrayList<Dialog>.*import AbstractList<Dialog>import AbstractList<Dialog>.*import static AbstractList<Dialog>.*import AbstractCollection<Dialog>import AbstractCollection<Dialog>.*import static AbstractCollection<Dialog>.*import Collection<Dialog>import Collection<Dialog>.*import static Collection<Dialog>.*import Iterable<Dialog>import Iterable<Dialog>.*import static Iterable<Dialog>.*import List<Dialog>import List<Dialog>.*import static List<Dialog>.*import Dimension2Dimport Dimension2D.*import static Dimension2D.*import DisplayModeimport DisplayMode.*import static DisplayMode.*import EventDispatchThreadimport EventDispatchThread.*import static EventDispatchThread.*import EventQueueimport EventQueue.*import static EventQueue.*import EventFilterimport EventFilter.*import static EventFilter.*import ThreadGroupimport ThreadGroup.*import static ThreadGroup.*import FilterActionimport FilterAction.*import static FilterAction.*import Enum<FilterAction>import Enum<FilterAction>.*import static Enum<FilterAction>.*import Comparable<FilterAction>import Comparable<FilterAction>.*import static Comparable<FilterAction>.*import Class<FilterAction>import Class<FilterAction>.*import static Class<FilterAction>.*import FilterAction[]import FilterAction[].*import static FilterAction[].*import SecondaryLoopimport SecondaryLoop.*import static SecondaryLoop.*import EmptyStackExceptionimport EmptyStackException.*import static EmptyStackException.*import FileDialogimport FileDialog.*import static FileDialog.*import FilenameFilterimport FilenameFilter.*import static FilenameFilter.*import FontRenderContextimport FontRenderContext.*import static FontRenderContext.*import GlyphVectorimport GlyphVector.*import static GlyphVector.*import CharacterIteratorimport CharacterIterator.*import static CharacterIterator.*import LineMetricsimport LineMetrics.*import static LineMetrics.*import Attributeimport Attribute.*import static Attribute.*import ? extends Attributeimport ? extends Attribute.*import static ? extends Attribute.*import Map<? extends Attribute,?>import Map<? extends Attribute,?>.*import static Map<? extends Attribute,?>.*import Attribute[]import Attribute[].*import static Attribute[].*import TextAttributeimport TextAttribute.*import static TextAttribute.*import Map<TextAttribute,?>import Map<TextAttribute,?>.*import static Map<TextAttribute,?>.*import FontFormatExceptionimport FontFormatException.*import static FontFormatException.*import FontPeerimport FontPeer.*import static FontPeer.*import Frame[]import Frame[].*import static Frame[].*import MenuBarimport MenuBar.*import static MenuBar.*import Vector<Window>import Vector<Window>.*import static Vector<Window>.*import GradientPaintimport GradientPaint.*import static GradientPaint.*import Point2Dimport Point2D.*import static Point2D.*import Floatimport Float.*import static Float.*import AttributedCharacterIteratorimport AttributedCharacterIterator.*import static AttributedCharacterIterator.*import Polygonimport Polygon.*import static Polygon.*import Graphics2Dimport Graphics2D.*import static Graphics2D.*import Map<?,?>import Map<?,?>.*import static Map<?,?>.*import RenderableImageimport RenderableImage.*import static RenderableImage.*import RenderedImageimport RenderedImage.*import static RenderedImage.*import BufferedImageimport BufferedImage.*import static BufferedImage.*import BufferedImageOpimport BufferedImageOp.*import static BufferedImageOp.*import GraphicsConfigTemplateimport GraphicsConfigTemplate.*import static GraphicsConfigTemplate.*import GraphicsConfiguration[]import GraphicsConfiguration[].*import static GraphicsConfiguration[].*import GraphicsDeviceimport GraphicsDevice.*import static GraphicsDevice.*import WindowTranslucencyimport WindowTranslucency.*import static WindowTranslucency.*import Enum<WindowTranslucency>import Enum<WindowTranslucency>.*import static Enum<WindowTranslucency>.*import Comparable<WindowTranslucency>import Comparable<WindowTranslucency>.*import static Comparable<WindowTranslucency>.*import Class<WindowTranslucency>import Class<WindowTranslucency>.*import static Class<WindowTranslucency>.*import WindowTranslucency[]import WindowTranslucency[].*import static WindowTranslucency[].*import DisplayMode[]import DisplayMode[].*import static DisplayMode[].*import IllegalComponentStateExceptionimport IllegalComponentStateException.*import static IllegalComponentStateException.*import SurfaceManagerimport SurfaceManager.*import static SurfaceManager.*import DefaultSelectionTypeimport DefaultSelectionType.*import static DefaultSelectionType.*import JobAttributesimport JobAttributes.*import static JobAttributes.*import DestinationTypeimport DestinationType.*import static DestinationType.*import DialogTypeimport DialogType.*import static DialogType.*import MultipleDocumentHandlingTypeimport MultipleDocumentHandlingType.*import static MultipleDocumentHandlingType.*import SidesTypeimport SidesType.*import static SidesType.*import int[][]import int[][].*import static int[][].*import Menuimport Menu.*import static Menu.*import MenuShortcutimport MenuShortcut.*import static MenuShortcut.*import Enumeration<MenuShortcut>import Enumeration<MenuShortcut>.*import static Enumeration<MenuShortcut>.*import Vector<MenuComponent>import Vector<MenuComponent>.*import static Vector<MenuComponent>.*import AbstractList<MenuComponent>import AbstractList<MenuComponent>.*import static AbstractList<MenuComponent>.*import AbstractCollection<MenuComponent>import AbstractCollection<MenuComponent>.*import static AbstractCollection<MenuComponent>.*import Collection<MenuComponent>import Collection<MenuComponent>.*import static Collection<MenuComponent>.*import Iterable<MenuComponent>import Iterable<MenuComponent>.*import static Iterable<MenuComponent>.*import List<MenuComponent>import List<MenuComponent>.*import static List<MenuComponent>.*import Vector<Menu>import Vector<Menu>.*import static Vector<Menu>.*import AbstractList<Menu>import AbstractList<Menu>.*import static AbstractList<Menu>.*import AbstractCollection<Menu>import AbstractCollection<Menu>.*import static AbstractCollection<Menu>.*import Collection<Menu>import Collection<Menu>.*import static Collection<Menu>.*import Iterable<Menu>import Iterable<Menu>.*import static Iterable<Menu>.*import List<Menu>import List<Menu>.*import static List<Menu>.*import MenuComponentPeerimport MenuComponentPeer.*import static MenuComponentPeer.*import ColorTypeimport ColorType.*import static ColorType.*import PageAttributesimport PageAttributes.*import static PageAttributes.*import MediaTypeimport MediaType.*import static MediaType.*import OrientationRequestedTypeimport OrientationRequestedType.*import static OrientationRequestedType.*import OriginTypeimport OriginType.*import static OriginType.*import PrintQualityTypeimport PrintQualityType.*import static PrintQualityType.*import Transparencyimport Transparency.*import static Transparency.*import PathIteratorimport PathIterator.*import static PathIterator.*import PrintJobimport PrintJob.*import static PrintJob.*import Map<Key,?>import Map<Key,?>.*import static Map<Key,?>.*import HashMap<Object,Object>import HashMap<Object,Object>.*import static HashMap<Object,Object>.*import AbstractMap<Object,Object>import AbstractMap<Object,Object>.*import static AbstractMap<Object,Object>.*import ScrollPaneimport ScrollPane.*import static ScrollPane.*import Scrollbarimport Scrollbar.*import static Scrollbar.*import AdjustmentEventimport AdjustmentEvent.*import static AdjustmentEvent.*import AdjustmentListener[]import AdjustmentListener[].*import static AdjustmentListener[].*import TextAreaimport TextArea.*import static TextArea.*import TextComponentimport TextComponent.*import static TextComponent.*import TextEventimport TextEvent.*import static TextEvent.*import TextListenerimport TextListener.*import static TextListener.*import TextListener[]import TextListener[].*import static TextListener[].*import TextFieldimport TextField.*import static TextField.*import InputMethodHighlightimport InputMethodHighlight.*import static InputMethodHighlight.*import AWTEventListenerimport AWTEventListener.*import static AWTEventListener.*import AWTEventListener[]import AWTEventListener[].*import static AWTEventListener[].*import DragSourceimport DragSource.*import static DragSource.*import DragGestureListenerimport DragGestureListener.*import static DragGestureListener.*import DragGestureRecognizerimport DragGestureRecognizer.*import static DragGestureRecognizer.*import DragGestureEventimport DragGestureEvent.*import static DragGestureEvent.*import DragSourceContextPeerimport DragSourceContextPeer.*import static DragSourceContextPeer.*import InvalidDnDOperationExceptionimport InvalidDnDOperationException.*import static InvalidDnDOperationException.*import IndexOutOfBoundsExceptionimport IndexOutOfBoundsException.*import static IndexOutOfBoundsException.*import Clipboardimport Clipboard.*import static Clipboard.*import LightweightPeerimport LightweightPeer.*import static LightweightPeer.*import MouseInfoPeerimport MouseInfoPeer.*import static MouseInfoPeer.*import CheckboxMenuItemPeerimport CheckboxMenuItemPeer.*import static CheckboxMenuItemPeer.*import FileDialogPeerimport FileDialogPeer.*import static FileDialogPeer.*import MenuItemPeerimport MenuItemPeer.*import static MenuItemPeer.*import PopupMenuPeerimport PopupMenuPeer.*import static PopupMenuPeer.*import MenuPeerimport MenuPeer.*import static MenuPeer.*import MenuBarPeerimport MenuBarPeer.*import static MenuBarPeer.*import DialogPeerimport DialogPeer.*import static DialogPeer.*import WindowPeerimport WindowPeer.*import static WindowPeer.*import PanelPeerimport PanelPeer.*import static PanelPeer.*import CanvasPeerimport CanvasPeer.*import static CanvasPeer.*import FramePeerimport FramePeer.*import static FramePeer.*import ChoicePeerimport ChoicePeer.*import static ChoicePeer.*import TextAreaPeerimport TextAreaPeer.*import static TextAreaPeer.*import ScrollPanePeerimport ScrollPanePeer.*import static ScrollPanePeer.*import ScrollbarPeerimport ScrollbarPeer.*import static ScrollbarPeer.*import CheckboxPeerimport CheckboxPeer.*import static CheckboxPeer.*import ListPeerimport ListPeer.*import static ListPeer.*import LabelPeerimport LabelPeer.*import static LabelPeer.*import TextFieldPeerimport TextFieldPeer.*import static TextFieldPeer.*import ButtonPeerimport ButtonPeer.*import static ButtonPeer.*import DesktopPeerimport DesktopPeer.*import static DesktopPeer.*import PropertyChangeSupportimport PropertyChangeSupport.*import static PropertyChangeSupport.*import WindowDisposerRecordimport WindowDisposerRecord.*import static WindowDisposerRecord.*import WeakReferenceimport WeakReference.*import static WeakReference.*import WeakReference<AppContext>import WeakReference<AppContext>.*import static WeakReference<AppContext>.*import Referenceimport Reference.*import static Reference.*import Reference<AppContext>import Reference<AppContext>.*import static Reference<AppContext>.*import WeakReference<Window>import WeakReference<Window>.*import static WeakReference<Window>.*import Reference<Window>import Reference<Window>.*import static Reference<Window>.*import WindowEventimport WindowEvent.*import static WindowEvent.*import WindowStateListenerimport WindowStateListener.*import static WindowStateListener.*import WindowStateListener[]import WindowStateListener[].*import static WindowStateListener[].*import WindowFocusListenerimport WindowFocusListener.*import static WindowFocusListener.*import WindowFocusListener[]import WindowFocusListener[].*import static WindowFocusListener[].*import WindowListenerimport WindowListener.*import static WindowListener.*import WindowListener[]import WindowListener[].*import static WindowListener[].*import Window[]import Window[].*import static Window[].*import IdentityArrayList<>import IdentityArrayList<>.*import static IdentityArrayList<>.*import ? extends Imageimport ? extends Image.*import static ? extends Image.*import List<? extends Image>import List<? extends Image>.*import static List<? extends Image>.*import Collection<? extends Image>import Collection<? extends Image>.*import static Collection<? extends Image>.*import Iterable<? extends Image>import Iterable<? extends Image>.*import static Iterable<? extends Image>.*import List<Image>import List<Image>.*import static List<Image>.*import Collection<Image>import Collection<Image>.*import static Collection<Image>.*import Iterable<Image>import Iterable<Image>.*import static Iterable<Image>.*import Vector<WeakReference<Window>>import Vector<WeakReference<Window>>.*import static Vector<WeakReference<Window>>.*import AbstractList<WeakReference<Window>>import AbstractList<WeakReference<Window>>.*import static AbstractList<WeakReference<Window>>.*import AbstractCollection<WeakReference<Window>>import AbstractCollection<WeakReference<Window>>.*import static AbstractCollection<WeakReference<Window>>.*import Collection<WeakReference<Window>>import Collection<WeakReference<Window>>.*import static Collection<WeakReference<Window>>.*import Iterable<WeakReference<Window>>import Iterable<WeakReference<Window>>.*import static Iterable<WeakReference<Window>>.*import List<WeakReference<Window>>import List<WeakReference<Window>>.*import static List<WeakReference<Window>>.*import ICC_ColorSpaceimport ICC_ColorSpace.*import static ICC_ColorSpace.*import ICC_Profileimport ICC_Profile.*import static ICC_Profile.*import short[]import short[].*import static short[].*import Profileimport Profile.*import static Profile.*import ProfileDataExceptionimport ProfileDataException.*import static ProfileDataException.*import ProfileDeferralInfoimport ProfileDeferralInfo.*import static ProfileDeferralInfo.*import FlavorListenerimport FlavorListener.*import static FlavorListener.*import FlavorListener[]import FlavorListener[].*import static FlavorListener[].*import DataFlavorimport DataFlavor.*import static DataFlavor.*import UnsupportedFlavorExceptionimport UnsupportedFlavorException.*import static UnsupportedFlavorException.*import DataFlavor[]import DataFlavor[].*import static DataFlavor[].*import Transferableimport Transferable.*import static Transferable.*import ClipboardOwnerimport ClipboardOwner.*import static ClipboardOwner.*import Externalizableimport Externalizable.*import static Externalizable.*import ObjectInputimport ObjectInput.*import static ObjectInput.*import ObjectOutputimport ObjectOutput.*import static ObjectOutput.*import FlavorEventimport FlavorEvent.*import static FlavorEvent.*import FlavorMapimport FlavorMap.*import static FlavorMap.*import Map<String,DataFlavor>import Map<String,DataFlavor>.*import static Map<String,DataFlavor>.*import Map<DataFlavor,String>import Map<DataFlavor,String>.*import static Map<DataFlavor,String>.*import MimeTypeParseExceptionimport MimeTypeParseException.*import static MimeTypeParseException.*import MimeTypeParameterListimport MimeTypeParameterList.*import static MimeTypeParameterList.*import Enumeration<String>import Enumeration<String>.*import static Enumeration<String>.*import DragSourceListenerimport DragSourceListener.*import static DragSourceListener.*import InputEventimport InputEvent.*import static InputEvent.*import Iterator<InputEvent>import Iterator<InputEvent>.*import static Iterator<InputEvent>.*import ? extends InputEventimport ? extends InputEvent.*import static ? extends InputEvent.*import List<? extends InputEvent>import List<? extends InputEvent>.*import static List<? extends InputEvent>.*import Collection<? extends InputEvent>import Collection<? extends InputEvent>.*import static Collection<? extends InputEvent>.*import Iterable<? extends InputEvent>import Iterable<? extends InputEvent>.*import static Iterable<? extends InputEvent>.*import TooManyListenersExceptionimport TooManyListenersException.*import static TooManyListenersException.*import ArrayList<InputEvent>import ArrayList<InputEvent>.*import static ArrayList<InputEvent>.*import AbstractList<InputEvent>import AbstractList<InputEvent>.*import static AbstractList<InputEvent>.*import AbstractCollection<InputEvent>import AbstractCollection<InputEvent>.*import static AbstractCollection<InputEvent>.*import Collection<InputEvent>import Collection<InputEvent>.*import static Collection<InputEvent>.*import Iterable<InputEvent>import Iterable<InputEvent>.*import static Iterable<InputEvent>.*import List<InputEvent>import List<InputEvent>.*import static List<InputEvent>.*import DragSourceDragEventimport DragSourceDragEvent.*import static DragSourceDragEvent.*import DragSourceDropEventimport DragSourceDropEvent.*import static DragSourceDropEvent.*import DragSourceEventimport DragSourceEvent.*import static DragSourceEvent.*import DragSourceMotionListenerimport DragSourceMotionListener.*import static DragSourceMotionListener.*import DragSourceMotionListener[]import DragSourceMotionListener[].*import static DragSourceMotionListener[].*import DragSourceListener[]import DragSourceListener[].*import static DragSourceListener[].*import DragSourceContextimport DragSourceContext.*import static DragSourceContext.*import DropTargetAutoScrollerimport DropTargetAutoScroller.*import static DropTargetAutoScroller.*import DropTargetListenerimport DropTargetListener.*import static DropTargetListener.*import DropTargetContextimport DropTargetContext.*import static DropTargetContext.*import DropTargetDropEventimport DropTargetDropEvent.*import static DropTargetDropEvent.*import DropTargetEventimport DropTargetEvent.*import static DropTargetEvent.*import DropTargetDragEventimport DropTargetDragEvent.*import static DropTargetDragEvent.*import DropTargetContextPeerimport DropTargetContextPeer.*import static DropTargetContextPeer.*import List<DataFlavor>import List<DataFlavor>.*import static List<DataFlavor>.*import Collection<DataFlavor>import Collection<DataFlavor>.*import static Collection<DataFlavor>.*import Iterable<DataFlavor>import Iterable<DataFlavor>.*import static Iterable<DataFlavor>.*import TextHitInfoimport TextHitInfo.*import static TextHitInfo.*import PaintEventimport PaintEvent.*import static PaintEvent.*import GlyphJustificationInfoimport GlyphJustificationInfo.*import static GlyphJustificationInfo.*import GlyphMetricsimport GlyphMetrics.*import static GlyphMetrics.*import InvalidObjectExceptionimport InvalidObjectException.*import static InvalidObjectException.*import double[]import double[].*import static double[].*import NoninvertibleTransformExceptionimport NoninvertibleTransformException.*import static NoninvertibleTransformException.*import Point2D[]import Point2D[].*import static Point2D[].*import GeneralPathimport GeneralPath.*import static GeneralPath.*import Line2Dimport Line2D.*import static Line2D.*import Path2Dimport Path2D.*import static Path2D.*import RectangularShapeimport RectangularShape.*import static RectangularShape.*import Subsetimport Subset.*import static Subset.*import Subset[]import Subset[].*import static Subset[].*import WritableRenderedImageimport WritableRenderedImage.*import static WritableRenderedImage.*import Point[]import Point[].*import static Point[].*import TileObserverimport TileObserver.*import static TileObserver.*import SampleModelimport SampleModel.*import static SampleModel.*import Vector<>import Vector<>.*import static Vector<>.*import Vector<RenderedImage>import Vector<RenderedImage>.*import static Vector<RenderedImage>.*import AbstractList<RenderedImage>import AbstractList<RenderedImage>.*import static AbstractList<RenderedImage>.*import AbstractCollection<RenderedImage>import AbstractCollection<RenderedImage>.*import static AbstractCollection<RenderedImage>.*import Collection<RenderedImage>import Collection<RenderedImage>.*import static Collection<RenderedImage>.*import Iterable<RenderedImage>import Iterable<RenderedImage>.*import static Iterable<RenderedImage>.*import List<RenderedImage>import List<RenderedImage>.*import static List<RenderedImage>.*import Hashtable<?,?>import Hashtable<?,?>.*import static Hashtable<?,?>.*import Dictionary<?,?>import Dictionary<?,?>.*import static Dictionary<?,?>.*import IndexColorModelimport IndexColorModel.*import static IndexColorModel.*import Map<ICC_ColorSpace,short[]>import Map<ICC_ColorSpace,short[]>.*import static Map<ICC_ColorSpace,short[]>.*import Map<ICC_ColorSpace,byte[]>import Map<ICC_ColorSpace,byte[]>.*import static Map<ICC_ColorSpace,byte[]>.*import DataBufferimport DataBuffer.*import static DataBuffer.*import Stateimport State.*import static State.*import StateTrackableDelegateimport StateTrackableDelegate.*import static StateTrackableDelegate.*import ImageConsumerimport ImageConsumer.*import static ImageConsumer.*import BigIntegerimport BigInteger.*import static BigInteger.*import RenderContextimport RenderContext.*import static RenderContext.*import Vector<RenderableImage>import Vector<RenderableImage>.*import static Vector<RenderableImage>.*import AbstractList<RenderableImage>import AbstractList<RenderableImage>.*import static AbstractList<RenderableImage>.*import AbstractCollection<RenderableImage>import AbstractCollection<RenderableImage>.*import static AbstractCollection<RenderableImage>.*import Collection<RenderableImage>import Collection<RenderableImage>.*import static Collection<RenderableImage>.*import Iterable<RenderableImage>import Iterable<RenderableImage>.*import static Iterable<RenderableImage>.*import List<RenderableImage>import List<RenderableImage>.*import static List<RenderableImage>.*import ContainerPeerimport ContainerPeer.*import static ContainerPeer.*import TextComponentPeerimport TextComponentPeer.*import static TextComponentPeer.*import FeatureDescriptorimport FeatureDescriptor.*import static FeatureDescriptor.*import Reference<?>import Reference<?>.*import static Reference<?>.*import Reference<>import Reference<>.*import static Reference<>.*import Reference<T>import Reference<T>.*import static Reference<T>.*import IntrospectionExceptionimport IntrospectionException.*import static IntrospectionException.*import PropertyChangeEventimport PropertyChangeEvent.*import static PropertyChangeEvent.*import PropertyEditorimport PropertyEditor.*import static PropertyEditor.*import ByteArrayInputStreamimport ByteArrayInputStream.*import static ByteArrayInputStream.*import ByteArrayOutputStreamimport ByteArrayOutputStream.*import static ByteArrayOutputStream.*import Consoleimport Console.*import static Console.*import Flushableimport Flushable.*import static Flushable.*import DataInputimport DataInput.*import static DataInput.*import FilterInputStreamimport FilterInputStream.*import static FilterInputStream.*import DataOutputimport DataOutput.*import static DataOutput.*import DataOutputStreamimport DataOutputStream.*import static DataOutputStream.*import FilterOutputStreamimport FilterOutputStream.*import static FilterOutputStream.*import Comparable<File>import Comparable<File>.*import static Comparable<File>.*import FileDescriptorimport FileDescriptor.*import static FileDescriptor.*import SyncFailedExceptionimport SyncFailedException.*import static SyncFailedException.*import FileInputStreamimport FileInputStream.*import static FileInputStream.*import FileChannelimport FileChannel.*import static FileChannel.*import FileNotFoundExceptionimport FileNotFoundException.*import static FileNotFoundException.*import FileOutputStreamimport FileOutputStream.*import static FileOutputStream.*import InvalidClassExceptionimport InvalidClassException.*import static InvalidClassException.*import NotActiveExceptionimport NotActiveException.*import static NotActiveException.*import GetFieldimport GetField.*import static GetField.*import ObjectStreamClassimport ObjectStreamClass.*import static ObjectStreamClass.*import ObjectStreamConstantsimport ObjectStreamConstants.*import static ObjectStreamConstants.*import StreamCorruptedExceptionimport StreamCorruptedException.*import static StreamCorruptedException.*import ObjectInputValidationimport ObjectInputValidation.*import static ObjectInputValidation.*import PutFieldimport PutField.*import static PutField.*import ClassDataSlotimport ClassDataSlot.*import static ClassDataSlot.*import ReferenceQueue<Class<?>>import ReferenceQueue<Class<?>>.*import static ReferenceQueue<Class<?>>.*import WeakReference<Class<?>>import WeakReference<Class<?>>.*import static WeakReference<Class<?>>.*import Reference<Class<?>>import Reference<Class<?>>.*import static Reference<Class<?>>.*import ? extends WeakReference<Class<?>>import ? extends WeakReference<Class<?>>.*import static ? extends WeakReference<Class<?>>.*import ConcurrentMap<? extends WeakReference<Class<?>>,?>import ConcurrentMap<? extends WeakReference<Class<?>>,?>.*import static ConcurrentMap<? extends WeakReference<Class<?>>,?>.*import Map<? extends WeakReference<Class<?>>,?>import Map<? extends WeakReference<Class<?>>,?>.*import static Map<? extends WeakReference<Class<?>>,?>.*import ClassDataSlot[]import ClassDataSlot[].*import static ClassDataSlot[].*import ObjectStreamFieldimport ObjectStreamField.*import static ObjectStreamField.*import ObjectStreamField[]import ObjectStreamField[].*import static ObjectStreamField[].*import CallerSensitiveimport CallerSensitive.*import static CallerSensitive.*import SerializablePermissionimport SerializablePermission.*import static SerializablePermission.*import Comparable<Object>import Comparable<Object>.*import static Comparable<Object>.*import OptionalDataExceptionimport OptionalDataException.*import static OptionalDataException.*import Appendableimport Appendable.*import static Appendable.*import RandomAccessFileimport RandomAccessFile.*import static RandomAccessFile.*import Readableimport Readable.*import static Readable.*import CharBufferimport CharBuffer.*import static CharBuffer.*import BasicPermissionimport BasicPermission.*import static BasicPermission.*import AbstractStringBuilderimport AbstractStringBuilder.*import static AbstractStringBuilder.*import ArrayIndexOutOfBoundsExceptionimport ArrayIndexOutOfBoundsException.*import static ArrayIndexOutOfBoundsException.*import AssertionErrorimport AssertionError.*import static AssertionError.*import Errorimport Error.*import static Error.*import Comparable<Boolean>import Comparable<Boolean>.*import static Comparable<Boolean>.*import Class<Boolean>import Class<Boolean>.*import static Class<Boolean>.*import Byteimport Byte.*import static Byte.*import Comparable<Byte>import Comparable<Byte>.*import static Comparable<Byte>.*import Class<Byte>import Class<Byte>.*import static Class<Byte>.*import IntStreamimport IntStream.*import static IntStream.*import Comparable<Character>import Comparable<Character>.*import static Comparable<Character>.*import Class<Character>import Class<Character>.*import static Class<Character>.*import ClassFormatErrorimport ClassFormatError.*import static ClassFormatError.*import LinkageErrorimport LinkageError.*import static LinkageError.*import Package[]import Package[].*import static Package[].*import URLClassPathimport URLClassPath.*import static URLClassPath.*import Map<String,Boolean>import Map<String,Boolean>.*import static Map<String,Boolean>.*import ReflectiveOperationExceptionimport ReflectiveOperationException.*import static ReflectiveOperationException.*import Identityimport Identity.*import static Identity.*import Entry<?>import Entry<?>.*import static Entry<?>.*import Versionimport Version.*import static Version.*import Version<?>import Version<?>.*import static Version<?>.*import ClassValueimport ClassValue.*import static ClassValue.*import ClassValue<>import ClassValue<>.*import static ClassValue<>.*import WeakReference<Version<?>>import WeakReference<Version<?>>.*import static WeakReference<Version<?>>.*import Reference<Version<?>>import Reference<Version<?>>.*import static Reference<Version<?>>.*import WeakHashMap<Identity,Entry<?>>import WeakHashMap<Identity,Entry<?>>.*import static WeakHashMap<Identity,Entry<?>>.*import AbstractMap<Identity,Entry<?>>import AbstractMap<Identity,Entry<?>>.*import static AbstractMap<Identity,Entry<?>>.*import Map<Identity,Entry<?>>import Map<Identity,Entry<?>>.*import static Map<Identity,Entry<?>>.*import ? super Entry<?>import ? super Entry<?>.*import static ? super Entry<?>.*import ? extends Entry<?>import ? extends Entry<?>.*import static ? extends Entry<?>.*import BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>import BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>.*import static BiFunction<? super Entry<?>,? super Entry<?>,? extends Entry<?>>.*import WeakReference<>import WeakReference<>.*import static WeakReference<>.*import ? super Identityimport ? super Identity.*import static ? super Identity.*import BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>import BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>.*import static BiFunction<? super Identity,? super Entry<?>,? extends Entry<?>>.*import Function<? super Identity,? extends Entry<?>>import Function<? super Identity,? extends Entry<?>>.*import static Function<? super Identity,? extends Entry<?>>.*import BiConsumer<? super Identity,? super Entry<?>>import BiConsumer<? super Identity,? super Entry<?>>.*import static BiConsumer<? super Identity,? super Entry<?>>.*import Entry<Identity,Entry<?>>import Entry<Identity,Entry<?>>.*import static Entry<Identity,Entry<?>>.*import Set<Entry<Identity,Entry<?>>>import Set<Entry<Identity,Entry<?>>>.*import static Set<Entry<Identity,Entry<?>>>.*import Collection<Entry<Identity,Entry<?>>>import Collection<Entry<Identity,Entry<?>>>.*import static Collection<Entry<Identity,Entry<?>>>.*import Iterable<Entry<Identity,Entry<?>>>import Iterable<Entry<Identity,Entry<?>>>.*import static Iterable<Entry<Identity,Entry<?>>>.*import Collection<Entry<?>>import Collection<Entry<?>>.*import static Collection<Entry<?>>.*import Iterable<Entry<?>>import Iterable<Entry<?>>.*import static Iterable<Entry<?>>.*import Set<Identity>import Set<Identity>.*import static Set<Identity>.*import Collection<Identity>import Collection<Identity>.*import static Collection<Identity>.*import Iterable<Identity>import Iterable<Identity>.*import static Iterable<Identity>.*import ? extends Identityimport ? extends Identity.*import static ? extends Identity.*import Map<? extends Identity,? extends Entry<?>>import Map<? extends Identity,? extends Entry<?>>.*import static Map<? extends Identity,? extends Entry<?>>.*import WeakHashMap<>import WeakHashMap<>.*import static WeakHashMap<>.*import WeakReference<Object>import WeakReference<Object>.*import static WeakReference<Object>.*import Reference<Object>import Reference<Object>.*import static Reference<Object>.*import Entry[]import Entry[].*import static Entry[].*import Entry<K,V>[]import Entry<K,V>[].*import static Entry<K,V>[].*import Entry<>[]import Entry<>[].*import static Entry<>[].*import Entry<T>import Entry<T>.*import static Entry<T>.*import Version<T>import Version<T>.*import static Version<T>.*import WeakReference<Version<T>>import WeakReference<Version<T>>.*import static WeakReference<Version<T>>.*import Reference<Version<T>>import Reference<Version<T>>.*import static Reference<Version<T>>.*import Entry<?>[]import Entry<?>[].*import static Entry<?>[].*import ClassValue<T>import ClassValue<T>.*import static ClassValue<T>.*import ClassValue<?>import ClassValue<?>.*import static ClassValue<?>.*import ReferenceQueue<? super T>import ReferenceQueue<? super T>.*import static ReferenceQueue<? super T>.*import ? super Version<T>import ? super Version<T>.*import static ? super Version<T>.*import ReferenceQueue<? super Version<T>>import ReferenceQueue<? super Version<T>>.*import static ReferenceQueue<? super Version<T>>.*import Version<>import Version<>.*import static Version<>.*import WeakReference<Version>import WeakReference<Version>.*import static WeakReference<Version>.*import Reference<Version>import Reference<Version>.*import static Reference<Version>.*import Doubleimport Double.*import static Double.*import Comparable<Double>import Comparable<Double>.*import static Comparable<Double>.*import Class<Double>import Class<Double>.*import static Class<Double>.*import Comparable<Float>import Comparable<Float>.*import static Comparable<Float>.*import Class<Float>import Class<Float>.*import static Class<Float>.*import IllegalThreadStateExceptionimport IllegalThreadStateException.*import static IllegalThreadStateException.*import Comparable<Integer>import Comparable<Integer>.*import static Comparable<Integer>.*import Class<Integer>import Class<Integer>.*import static Class<Integer>.*import Comparable<Long>import Comparable<Long>.*import static Comparable<Long>.*import Class<Long>import Class<Long>.*import static Class<Long>.*import Processimport Process.*import static Process.*import Redirectimport Redirect.*import static Redirect.*import SafeVarargsimport SafeVarargs.*import static SafeVarargs.*import SecurityManagerimport SecurityManager.*import static SecurityManager.*import Comparable<Short>import Comparable<Short>.*import static Comparable<Short>.*import Class<Short>import Class<Short>.*import static Class<Short>.*import StackTraceElementimport StackTraceElement.*import static StackTraceElement.*import Comparable<String>import Comparable<String>.*import static Comparable<String>.*import ? extends CharSequenceimport ? extends CharSequence.*import static ? extends CharSequence.*import Iterable<? extends CharSequence>import Iterable<? extends CharSequence>.*import static Iterable<? extends CharSequence>.*import CharSequence[]import CharSequence[].*import static CharSequence[].*import Comparator<String>import Comparator<String>.*import static Comparator<String>.*import Enum<State>import Enum<State>.*import static Enum<State>.*import Comparable<State>import Comparable<State>.*import static Comparable<State>.*import Class<State>import Class<State>.*import static Class<State>.*import State[]import State[].*import static State[].*import UncaughtExceptionHandlerimport UncaughtExceptionHandler.*import static UncaughtExceptionHandler.*import StackTraceElement[]import StackTraceElement[].*import static StackTraceElement[].*import Map<Thread,StackTraceElement[]>import Map<Thread,StackTraceElement[]>.*import static Map<Thread,StackTraceElement[]>.*import Thread[]import Thread[].*import static Thread[].*import Interruptibleimport Interruptible.*import static Interruptible.*import Contendedimport Contended.*import static Contended.*import ThreadLocalMapimport ThreadLocalMap.*import static ThreadLocalMap.*import ThreadGroup[]import ThreadGroup[].*import static ThreadGroup[].*import ThreadLocal<>import ThreadLocal<>.*import static ThreadLocal<>.*import ThreadLocal<?>import ThreadLocal<?>.*import static ThreadLocal<?>.*import ThreadLocal<S>import ThreadLocal<S>.*import static ThreadLocal<S>.*import Supplier<? extends S>import Supplier<? extends S>.*import static Supplier<? extends S>.*import Throwable[]import Throwable[].*import static Throwable[].*import TypeNotPresentExceptionimport TypeNotPresentException.*import static TypeNotPresentException.*import Voidimport Void.*import static Void.*import Class<Void>import Class<Void>.*import static Class<Void>.*import Enum<ElementType>import Enum<ElementType>.*import static Enum<ElementType>.*import Comparable<ElementType>import Comparable<ElementType>.*import static Comparable<ElementType>.*import Class<ElementType>import Class<ElementType>.*import static Class<ElementType>.*import Enum<RetentionPolicy>import Enum<RetentionPolicy>.*import static Enum<RetentionPolicy>.*import Comparable<RetentionPolicy>import Comparable<RetentionPolicy>.*import static Comparable<RetentionPolicy>.*import Class<RetentionPolicy>import Class<RetentionPolicy>.*import static Class<RetentionPolicy>.*import RetentionPolicy[]import RetentionPolicy[].*import static RetentionPolicy[].*import SpeciesDataimport SpeciesData.*import static SpeciesData.*import BoundMethodHandleimport BoundMethodHandle.*import static BoundMethodHandle.*import BasicTypeimport BasicType.*import static BasicType.*import ? extends BoundMethodHandleimport ? extends BoundMethodHandle.*import static ? extends BoundMethodHandle.*import Class<? extends BoundMethodHandle>import Class<? extends BoundMethodHandle>.*import static Class<? extends BoundMethodHandle>.*import MethodHandleimport MethodHandle.*import static MethodHandle.*import MethodHandle[]import MethodHandle[].*import static MethodHandle[].*import NamedFunctionimport NamedFunction.*import static NamedFunction.*import NamedFunction[]import NamedFunction[].*import static NamedFunction[].*import MethodTypeimport MethodType.*import static MethodType.*import LambdaFormimport LambdaForm.*import static LambdaForm.*import LambdaFormEditorimport LambdaFormEditor.*import static LambdaFormEditor.*import DontInlineimport DontInline.*import static DontInline.*import ForceInlineimport ForceInline.*import static ForceInline.*import Invokersimport Invokers.*import static Invokers.*import MemberNameimport MemberName.*import static MemberName.*import WrongMethodTypeExceptionimport WrongMethodTypeException.*import static WrongMethodTypeException.*import Enum<BasicType>import Enum<BasicType>.*import static Enum<BasicType>.*import Comparable<BasicType>import Comparable<BasicType>.*import static Comparable<BasicType>.*import Class<BasicType>import Class<BasicType>.*import static Class<BasicType>.*import BasicType[]import BasicType[].*import static BasicType[].*import List<Class<?>>import List<Class<?>>.*import static List<Class<?>>.*import Collection<Class<?>>import Collection<Class<?>>.*import static Collection<Class<?>>.*import Iterable<Class<?>>import Iterable<Class<?>>.*import static Iterable<Class<?>>.*import Hiddenimport Hidden.*import static Hidden.*import Nameimport Name.*import static Name.*import Name[]import Name[].*import static Name[].*import Stableimport Stable.*import static Stable.*import Intrinsicimport Intrinsic.*import static Intrinsic.*import Factoryimport Factory.*import static Factory.*import List<MemberName>import List<MemberName>.*import static List<MemberName>.*import Collection<MemberName>import Collection<MemberName>.*import static Collection<MemberName>.*import Iterable<MemberName>import Iterable<MemberName>.*import static Iterable<MemberName>.*import NoSuchMemberExceptionimport NoSuchMemberException.*import static NoSuchMemberException.*import Class<NoSuchMemberException>import Class<NoSuchMemberException>.*import static Class<NoSuchMemberException>.*import PolymorphicSignatureimport PolymorphicSignature.*import static PolymorphicSignature.*import Enum<Intrinsic>import Enum<Intrinsic>.*import static Enum<Intrinsic>.*import Comparable<Intrinsic>import Comparable<Intrinsic>.*import static Comparable<Intrinsic>.*import Class<Intrinsic>import Class<Intrinsic>.*import static Class<Intrinsic>.*import MethodHandleImplimport MethodHandleImpl.*import static MethodHandleImpl.*import Intrinsic[]import Intrinsic[].*import static Intrinsic[].*import Emptyimport Empty.*import static Empty.*import ? extends Throwableimport ? extends Throwable.*import static ? extends Throwable.*import Class<? extends Throwable>import Class<? extends Throwable>.*import static Class<? extends Throwable>.*import ConcurrentWeakInternSetimport ConcurrentWeakInternSet.*import static ConcurrentWeakInternSet.*import MethodTypeFormimport MethodTypeForm.*import static MethodTypeForm.*import ConcurrentWeakInternSet<MethodType>import ConcurrentWeakInternSet<MethodType>.*import static ConcurrentWeakInternSet<MethodType>.*import SoftReferenceimport SoftReference.*import static SoftReference.*import SoftReference[]import SoftReference[].*import static SoftReference[].*import SoftReference<LambdaForm>import SoftReference<LambdaForm>.*import static SoftReference<LambdaForm>.*import Reference<LambdaForm>import Reference<LambdaForm>.*import static Reference<LambdaForm>.*import SoftReference<LambdaForm>[]import SoftReference<LambdaForm>[].*import static SoftReference<LambdaForm>[].*import SoftReference<MethodHandle>import SoftReference<MethodHandle>.*import static SoftReference<MethodHandle>.*import Reference<MethodHandle>import Reference<MethodHandle>.*import static Reference<MethodHandle>.*import SoftReference<MethodHandle>[]import SoftReference<MethodHandle>[].*import static SoftReference<MethodHandle>[].*import Reference<? extends T>import Reference<? extends T>.*import static Reference<? extends T>.*import ? super Reference<? extends T>import ? super Reference<? extends T>.*import static ? super Reference<? extends T>.*import Consumer<? super Reference<? extends T>>import Consumer<? super Reference<? extends T>>.*import static Consumer<? super Reference<? extends T>>.*import ReferenceQueue<Object>import ReferenceQueue<Object>.*import static ReferenceQueue<Object>.*import AccessibleObject[]import AccessibleObject[].*import static AccessibleObject[].*import ReflectionFactoryimport ReflectionFactory.*import static ReflectionFactory.*import Annotation[][]import Annotation[][].*import static Annotation[][].*import ConstructorAccessorimport ConstructorAccessor.*import static ConstructorAccessor.*import TypeVariable<Constructor>import TypeVariable<Constructor>.*import static TypeVariable<Constructor>.*import TypeVariable<Constructor>[]import TypeVariable<Constructor>[].*import static TypeVariable<Constructor>[].*import ConstructorRepositoryimport ConstructorRepository.*import static ConstructorRepository.*import Parameterimport Parameter.*import static Parameter.*import Parameter[]import Parameter[].*import static Parameter[].*import TypeVariable<?>import TypeVariable<?>.*import static TypeVariable<?>.*import TypeVariable<?>[]import TypeVariable<?>[].*import static TypeVariable<?>[].*import MethodAccessorimport MethodAccessor.*import static MethodAccessor.*import TypeVariable<Method>import TypeVariable<Method>.*import static TypeVariable<Method>.*import TypeVariable<Method>[]import TypeVariable<Method>[].*import static TypeVariable<Method>[].*import MethodRepositoryimport MethodRepository.*import static MethodRepository.*import ParameterizedTypeimport ParameterizedType.*import static ParameterizedType.*import WildcardTypeimport WildcardType.*import static WildcardType.*import BigDecimalimport BigDecimal.*import static BigDecimal.*import Comparable<BigDecimal>import Comparable<BigDecimal>.*import static Comparable<BigDecimal>.*import RoundingModeimport RoundingMode.*import static RoundingMode.*import MathContextimport MathContext.*import static MathContext.*import BigDecimal[]import BigDecimal[].*import static BigDecimal[].*import Comparable<BigInteger>import Comparable<BigInteger>.*import static Comparable<BigInteger>.*import BigInteger[]import BigInteger[].*import static BigInteger[].*import Randomimport Random.*import static Random.*import Enum<RoundingMode>import Enum<RoundingMode>.*import static Enum<RoundingMode>.*import Comparable<RoundingMode>import Comparable<RoundingMode>.*import static Comparable<RoundingMode>.*import Class<RoundingMode>import Class<RoundingMode>.*import static Class<RoundingMode>.*import RoundingMode[]import RoundingMode[].*import static RoundingMode[].*import ContentHandlerFactoryimport ContentHandlerFactory.*import static ContentHandlerFactory.*import DatagramPacketimport DatagramPacket.*import static DatagramPacket.*import SocketAddressimport SocketAddress.*import static SocketAddress.*import DatagramSocketimport DatagramSocket.*import static DatagramSocket.*import DatagramSocketImplFactoryimport DatagramSocketImplFactory.*import static DatagramSocketImplFactory.*import DatagramChannelimport DatagramChannel.*import static DatagramChannel.*import SocketExceptionimport SocketException.*import static SocketException.*import DatagramSocketImplimport DatagramSocketImpl.*import static DatagramSocketImpl.*import SocketOptionsimport SocketOptions.*import static SocketOptions.*import SocketOptionimport SocketOption.*import static SocketOption.*import SocketOption<>import SocketOption<>.*import static SocketOption<>.*import SocketOption<T>import SocketOption<T>.*import static SocketOption<T>.*import NetworkInterfaceimport NetworkInterface.*import static NetworkInterface.*import FileNameMapimport FileNameMap.*import static FileNameMap.*import InetAddressHolderimport InetAddressHolder.*import static InetAddressHolder.*import InetAddressImplimport InetAddressImpl.*import static InetAddressImpl.*import UnknownHostExceptionimport UnknownHostException.*import static UnknownHostException.*import InetAddress[]import InetAddress[].*import static InetAddress[].*import InetSocketAddressimport InetSocketAddress.*import static InetSocketAddress.*import InterfaceAddressimport InterfaceAddress.*import static InterfaceAddress.*import Enumeration<NetworkInterface>import Enumeration<NetworkInterface>.*import static Enumeration<NetworkInterface>.*import List<InterfaceAddress>import List<InterfaceAddress>.*import static List<InterfaceAddress>.*import Collection<InterfaceAddress>import Collection<InterfaceAddress>.*import static Collection<InterfaceAddress>.*import Iterable<InterfaceAddress>import Iterable<InterfaceAddress>.*import static Iterable<InterfaceAddress>.*import Enumeration<InetAddress>import Enumeration<InetAddress>.*import static Enumeration<InetAddress>.*import ProtocolFamilyimport ProtocolFamily.*import static ProtocolFamily.*import ServerSocketimport ServerSocket.*import static ServerSocket.*import SocketImplFactoryimport SocketImplFactory.*import static SocketImplFactory.*import ServerSocketChannelimport ServerSocketChannel.*import static ServerSocketChannel.*import SocketImplimport SocketImpl.*import static SocketImpl.*import Comparable<URI>import Comparable<URI>.*import static Comparable<URI>.*import URISyntaxExceptionimport URISyntaxException.*import static URISyntaxException.*import URLStreamHandlerimport URLStreamHandler.*import static URLStreamHandler.*import URLStreamHandlerFactoryimport URLStreamHandlerFactory.*import static URLStreamHandlerFactory.*import Hashtable<String,URLStreamHandler>import Hashtable<String,URLStreamHandler>.*import static Hashtable<String,URLStreamHandler>.*import Dictionary<String,URLStreamHandler>import Dictionary<String,URLStreamHandler>.*import static Dictionary<String,URLStreamHandler>.*import Map<String,URLStreamHandler>import Map<String,URLStreamHandler>.*import static Map<String,URLStreamHandler>.*import SecureClassLoaderimport SecureClassLoader.*import static SecureClassLoader.*import CodeSourceimport CodeSource.*import static CodeSource.*import PermissionCollectionimport PermissionCollection.*import static PermissionCollection.*import UnknownServiceExceptionimport UnknownServiceException.*import static UnknownServiceException.*import Map<String,List<String>>import Map<String,List<String>>.*import static Map<String,List<String>>.*import Bufferimport Buffer.*import static Buffer.*import Comparable<ByteBuffer>import Comparable<ByteBuffer>.*import static Comparable<ByteBuffer>.*import DoubleBufferimport DoubleBuffer.*import static DoubleBuffer.*import FloatBufferimport FloatBuffer.*import static FloatBuffer.*import LongBufferimport LongBuffer.*import static LongBuffer.*import IntBufferimport IntBuffer.*import static IntBuffer.*import ShortBufferimport ShortBuffer.*import static ShortBuffer.*import ByteOrderimport ByteOrder.*import static ByteOrder.*import Comparable<CharBuffer>import Comparable<CharBuffer>.*import static Comparable<CharBuffer>.*import Comparable<DoubleBuffer>import Comparable<DoubleBuffer>.*import static Comparable<DoubleBuffer>.*import Comparable<FloatBuffer>import Comparable<FloatBuffer>.*import static Comparable<FloatBuffer>.*import Comparable<IntBuffer>import Comparable<IntBuffer>.*import static Comparable<IntBuffer>.*import Comparable<LongBuffer>import Comparable<LongBuffer>.*import static Comparable<LongBuffer>.*import MappedByteBufferimport MappedByteBuffer.*import static MappedByteBuffer.*import Comparable<ShortBuffer>import Comparable<ShortBuffer>.*import static Comparable<ShortBuffer>.*import AsynchronousChannelimport AsynchronousChannel.*import static AsynchronousChannel.*import AsynchronousCloseExceptionimport AsynchronousCloseException.*import static AsynchronousCloseException.*import ClosedChannelExceptionimport ClosedChannelException.*import static ClosedChannelException.*import AsynchronousFileChannelimport AsynchronousFileChannel.*import static AsynchronousFileChannel.*import Future<Integer>import Future<Integer>.*import static Future<Integer>.*import CompletionHandlerimport CompletionHandler.*import static CompletionHandler.*import CompletionHandler<>import CompletionHandler<>.*import static CompletionHandler<>.*import ? super Aimport ? super A.*import static ? super A.*import CompletionHandler<Integer,? super A>import CompletionHandler<Integer,? super A>.*import static CompletionHandler<Integer,? super A>.*import FileLockimport FileLock.*import static FileLock.*import Future<FileLock>import Future<FileLock>.*import static Future<FileLock>.*import CompletionHandler<FileLock,? super A>import CompletionHandler<FileLock,? super A>.*import static CompletionHandler<FileLock,? super A>.*import OpenOptionimport OpenOption.*import static OpenOption.*import OpenOption[]import OpenOption[].*import static OpenOption[].*import ? extends OpenOptionimport ? extends OpenOption.*import static ? extends OpenOption.*import Set<? extends OpenOption>import Set<? extends OpenOption>.*import static Set<? extends OpenOption>.*import Collection<? extends OpenOption>import Collection<? extends OpenOption>.*import static Collection<? extends OpenOption>.*import Iterable<? extends OpenOption>import Iterable<? extends OpenOption>.*import static Iterable<? extends OpenOption>.*import FileAttributeimport FileAttribute.*import static FileAttribute.*import FileAttribute[]import FileAttribute[].*import static FileAttribute[].*import FileAttribute<?>import FileAttribute<?>.*import static FileAttribute<?>.*import FileAttribute<?>[]import FileAttribute<?>[].*import static FileAttribute<?>[].*import ByteChannelimport ByteChannel.*import static ByteChannel.*import ReadableByteChannelimport ReadableByteChannel.*import static ReadableByteChannel.*import WritableByteChannelimport WritableByteChannel.*import static WritableByteChannel.*import AbstractSelectableChannelimport AbstractSelectableChannel.*import static AbstractSelectableChannel.*import ScatteringByteChannelimport ScatteringByteChannel.*import static ScatteringByteChannel.*import GatheringByteChannelimport GatheringByteChannel.*import static GatheringByteChannel.*import MulticastChannelimport MulticastChannel.*import static MulticastChannel.*import ByteBuffer[]import ByteBuffer[].*import static ByteBuffer[].*import SelectorProviderimport SelectorProvider.*import static SelectorProvider.*import MapModeimport MapMode.*import static MapMode.*import AbstractInterruptibleChannelimport AbstractInterruptibleChannel.*import static AbstractInterruptibleChannel.*import SeekableByteChannelimport SeekableByteChannel.*import static SeekableByteChannel.*import InterruptibleChannelimport InterruptibleChannel.*import static InterruptibleChannel.*import MembershipKeyimport MembershipKey.*import static MembershipKey.*import NetworkChannelimport NetworkChannel.*import static NetworkChannel.*import SocketOption<?>import SocketOption<?>.*import static SocketOption<?>.*import Set<SocketOption<?>>import Set<SocketOption<?>>.*import static Set<SocketOption<?>>.*import Collection<SocketOption<?>>import Collection<SocketOption<?>>.*import static Collection<SocketOption<?>>.*import Iterable<SocketOption<?>>import Iterable<SocketOption<?>>.*import static Iterable<SocketOption<?>>.*import SinkChannelimport SinkChannel.*import static SinkChannel.*import Pipeimport Pipe.*import static Pipe.*import SourceChannelimport SourceChannel.*import static SourceChannel.*import ReadPendingExceptionimport ReadPendingException.*import static ReadPendingException.*import SelectableChannelimport SelectableChannel.*import static SelectableChannel.*import SelectionKeyimport SelectionKey.*import static SelectionKey.*import Set<SelectionKey>import Set<SelectionKey>.*import static Set<SelectionKey>.*import Collection<SelectionKey>import Collection<SelectionKey>.*import static Collection<SelectionKey>.*import Iterable<SelectionKey>import Iterable<SelectionKey>.*import static Iterable<SelectionKey>.*import WritePendingExceptionimport WritePendingException.*import static WritePendingException.*import AbstractSelectionKeyimport AbstractSelectionKey.*import static AbstractSelectionKey.*import AbstractSelectorimport AbstractSelector.*import static AbstractSelector.*import CharacterCodingExceptionimport CharacterCodingException.*import static CharacterCodingException.*import Comparable<Charset>import Comparable<Charset>.*import static Comparable<Charset>.*import CharsetEncoderimport CharsetEncoder.*import static CharsetEncoder.*import CharsetDecoderimport CharsetDecoder.*import static CharsetDecoder.*import SortedMap<String,Charset>import SortedMap<String,Charset>.*import static SortedMap<String,Charset>.*import Map<String,Charset>import Map<String,Charset>.*import static Map<String,Charset>.*import CoderResultimport CoderResult.*import static CoderResult.*import CodingErrorActionimport CodingErrorAction.*import static CodingErrorAction.*import AccessModeimport AccessMode.*import static AccessMode.*import Enum<AccessMode>import Enum<AccessMode>.*import static Enum<AccessMode>.*import Comparable<AccessMode>import Comparable<AccessMode>.*import static Comparable<AccessMode>.*import Class<AccessMode>import Class<AccessMode>.*import static Class<AccessMode>.*import AccessMode[]import AccessMode[].*import static AccessMode[].*import CopyOptionimport CopyOption.*import static CopyOption.*import DirectoryStreamimport DirectoryStream.*import static DirectoryStream.*import DirectoryStream<>import DirectoryStream<>.*import static DirectoryStream<>.*import FileStoreimport FileStore.*import static FileStore.*import FileStoreAttributeViewimport FileStoreAttributeView.*import static FileStoreAttributeView.*import Class<V>import Class<V>.*import static Class<V>.*import FileAttributeViewimport FileAttributeView.*import static FileAttributeView.*import ? extends FileAttributeViewimport ? extends FileAttributeView.*import static ? extends FileAttributeView.*import Class<? extends FileAttributeView>import Class<? extends FileAttributeView>.*import static Class<? extends FileAttributeView>.*import FileSystemimport FileSystem.*import static FileSystem.*import WatchServiceimport WatchService.*import static WatchService.*import UserPrincipalLookupServiceimport UserPrincipalLookupService.*import static UserPrincipalLookupService.*import PathMatcherimport PathMatcher.*import static PathMatcher.*import Iterable<FileStore>import Iterable<FileStore>.*import static Iterable<FileStore>.*import FileSystemProviderimport FileSystemProvider.*import static FileSystemProvider.*import LinkOptionimport LinkOption.*import static LinkOption.*import Enum<LinkOption>import Enum<LinkOption>.*import static Enum<LinkOption>.*import Comparable<LinkOption>import Comparable<LinkOption>.*import static Comparable<LinkOption>.*import Class<LinkOption>import Class<LinkOption>.*import static Class<LinkOption>.*import LinkOption[]import LinkOption[].*import static LinkOption[].*import Comparable<Path>import Comparable<Path>.*import static Comparable<Path>.*import Spliterator<Path>import Spliterator<Path>.*import static Spliterator<Path>.*import ? super Pathimport ? super Path.*import static ? super Path.*import Consumer<? super Path>import Consumer<? super Path>.*import static Consumer<? super Path>.*import Iterator<Path>import Iterator<Path>.*import static Iterator<Path>.*import Watchableimport Watchable.*import static Watchable.*import Kind<?>import Kind<?>.*import static Kind<?>.*import WatchEventimport WatchEvent.*import static WatchEvent.*import WatchEvent<>import WatchEvent<>.*import static WatchEvent<>.*import Kind<?>[]import Kind<?>[].*import static Kind<?>[].*import WatchKeyimport WatchKey.*import static WatchKey.*import Modifierimport Modifier.*import static Modifier.*import Modifier[]import Modifier[].*import static Modifier[].*import Kind<>import Kind<>.*import static Kind<>.*import Kind<T>import Kind<T>.*import static Kind<T>.*import WatchEvent<?>import WatchEvent<?>.*import static WatchEvent<?>.*import List<WatchEvent<?>>import List<WatchEvent<?>>.*import static List<WatchEvent<?>>.*import Collection<WatchEvent<?>>import Collection<WatchEvent<?>>.*import static Collection<WatchEvent<?>>.*import Iterable<WatchEvent<?>>import Iterable<WatchEvent<?>>.*import static Iterable<WatchEvent<?>>.*import AttributeViewimport AttributeView.*import static AttributeView.*import BasicFileAttributesimport BasicFileAttributes.*import static BasicFileAttributes.*import FileTimeimport FileTime.*import static FileTime.*import Comparable<FileTime>import Comparable<FileTime>.*import static Comparable<FileTime>.*import Instantimport Instant.*import static Instant.*import GroupPrincipalimport GroupPrincipal.*import static GroupPrincipal.*import UserPrincipalimport UserPrincipal.*import static UserPrincipal.*import CopyOption[]import CopyOption[].*import static CopyOption[].*import Filter<? super Path>import Filter<? super Path>.*import static Filter<? super Path>.*import DirectoryStream<Path>import DirectoryStream<Path>.*import static DirectoryStream<Path>.*import List<FileSystemProvider>import List<FileSystemProvider>.*import static List<FileSystemProvider>.*import Collection<FileSystemProvider>import Collection<FileSystemProvider>.*import static Collection<FileSystemProvider>.*import Iterable<FileSystemProvider>import Iterable<FileSystemProvider>.*import static Iterable<FileSystemProvider>.*import AccessControlExceptionimport AccessControlException.*import static AccessControlException.*import DomainCombinerimport DomainCombiner.*import static DomainCombiner.*import ProtectionDomain[]import ProtectionDomain[].*import static ProtectionDomain[].*import Permission[]import Permission[].*import static Permission[].*import Debugimport Debug.*import static Debug.*import AlgorithmParametersimport AlgorithmParameters.*import static AlgorithmParameters.*import AlgorithmParameterSpecimport AlgorithmParameterSpec.*import static AlgorithmParameterSpec.*import InvalidParameterSpecExceptionimport InvalidParameterSpecException.*import static InvalidParameterSpecException.*import NoSuchAlgorithmExceptionimport NoSuchAlgorithmException.*import static NoSuchAlgorithmException.*import NoSuchProviderExceptionimport NoSuchProviderException.*import static NoSuchProviderException.*import AlgorithmParametersSpiimport AlgorithmParametersSpi.*import static AlgorithmParametersSpi.*import CodeSignerimport CodeSigner.*import static CodeSigner.*import Timestampimport Timestamp.*import static Timestamp.*import CertPathimport CertPath.*import static CertPath.*import CodeSigner[]import CodeSigner[].*import static CodeSigner[].*import Certificateimport Certificate.*import static Certificate.*import Certificate[]import Certificate[].*import static Certificate[].*import DigestExceptionimport DigestException.*import static DigestException.*import Guardimport Guard.*import static Guard.*import InvalidAlgorithmParameterExceptionimport InvalidAlgorithmParameterException.*import static InvalidAlgorithmParameterException.*import InvalidKeyExceptionimport InvalidKeyException.*import static InvalidKeyException.*import KeyExceptionimport KeyException.*import static KeyException.*import Set<Attribute>import Set<Attribute>.*import static Set<Attribute>.*import Collection<Attribute>import Collection<Attribute>.*import static Collection<Attribute>.*import Iterable<Attribute>import Iterable<Attribute>.*import static Iterable<Attribute>.*import LoadStoreParameterimport LoadStoreParameter.*import static LoadStoreParameter.*import ProtectionParameterimport ProtectionParameter.*import static ProtectionParameter.*import Class<? extends Entry>import Class<? extends Entry>.*import static Class<? extends Entry>.*import KeyStoreExceptionimport KeyStoreException.*import static KeyStoreException.*import UnrecoverableEntryExceptionimport UnrecoverableEntryException.*import static UnrecoverableEntryException.*import CertificateExceptionimport CertificateException.*import static CertificateException.*import UnrecoverableKeyExceptionimport UnrecoverableKeyException.*import static UnrecoverableKeyException.*import KeyStoreSpiimport KeyStoreSpi.*import static KeyStoreSpi.*import MessageDigestimport MessageDigest.*import static MessageDigest.*import MessageDigestSpiimport MessageDigestSpi.*import static MessageDigestSpi.*import Enumeration<Permission>import Enumeration<Permission>.*import static Enumeration<Permission>.*import Subjectimport Subject.*import static Subject.*import PrivilegedActionimport PrivilegedAction.*import static PrivilegedAction.*import PrivilegedActionExceptionimport PrivilegedActionException.*import static PrivilegedActionException.*import PrivilegedExceptionActionimport PrivilegedExceptionAction.*import static PrivilegedExceptionAction.*import Principal[]import Principal[].*import static Principal[].*import Serviceimport Service.*import static Service.*import Set<Service>import Set<Service>.*import static Set<Service>.*import Collection<Service>import Collection<Service>.*import static Collection<Service>.*import Iterable<Service>import Iterable<Service>.*import static Iterable<Service>.*import PublicKeyimport PublicKey.*import static PublicKey.*import SecureRandomimport SecureRandom.*import static SecureRandom.*import SecureRandomSpiimport SecureRandomSpi.*import static SecureRandomSpi.*import SignatureExceptionimport SignatureException.*import static SignatureException.*import CRLimport CRL.*import static CRL.*import CRLExceptionimport CRLException.*import static CRLException.*import ? extends Certificateimport ? extends Certificate.*import static ? extends Certificate.*import List<? extends Certificate>import List<? extends Certificate>.*import static List<? extends Certificate>.*import Collection<? extends Certificate>import Collection<? extends Certificate>.*import static Collection<? extends Certificate>.*import Iterable<? extends Certificate>import Iterable<? extends Certificate>.*import static Iterable<? extends Certificate>.*import CertificateEncodingExceptionimport CertificateEncodingException.*import static CertificateEncodingException.*import CertificateExpiredExceptionimport CertificateExpiredException.*import static CertificateExpiredException.*import CertificateFactoryimport CertificateFactory.*import static CertificateFactory.*import ? extends CRLimport ? extends CRL.*import static ? extends CRL.*import Collection<? extends CRL>import Collection<? extends CRL>.*import static Collection<? extends CRL>.*import Iterable<? extends CRL>import Iterable<? extends CRL>.*import static Iterable<? extends CRL>.*import CertificateFactorySpiimport CertificateFactorySpi.*import static CertificateFactorySpi.*import CertificateNotYetValidExceptionimport CertificateNotYetValidException.*import static CertificateNotYetValidException.*import CertificateParsingExceptionimport CertificateParsingException.*import static CertificateParsingException.*import TrustAnchorimport TrustAnchor.*import static TrustAnchor.*import X500Principalimport X500Principal.*import static X500Principal.*import X509Certificateimport X509Certificate.*import static X509Certificate.*import X509Extensionimport X509Extension.*import static X509Extension.*import Collection<List<?>>import Collection<List<?>>.*import static Collection<List<?>>.*import Iterable<List<?>>import Iterable<List<?>>.*import static Iterable<List<?>>.*import Map<Attribute,Object>import Map<Attribute,Object>.*import static Map<Attribute,Object>.*import Set<? extends Attribute>import Set<? extends Attribute>.*import static Set<? extends Attribute>.*import Collection<? extends Attribute>import Collection<? extends Attribute>.*import static Collection<? extends Attribute>.*import Iterable<? extends Attribute>import Iterable<? extends Attribute>.*import static Iterable<? extends Attribute>.*import AttributedStringimport AttributedString.*import static AttributedString.*import AttributedCharacterIterator[]import AttributedCharacterIterator[].*import static AttributedCharacterIterator[].*import Vector[]import Vector[].*import static Vector[].*import Vector<Object>import Vector<Object>.*import static Vector<Object>.*import AbstractList<Object>import AbstractList<Object>.*import static AbstractList<Object>.*import AbstractCollection<Object>import AbstractCollection<Object>.*import static AbstractCollection<Object>.*import Vector<Object>[]import Vector<Object>[].*import static Vector<Object>[].*import Vector<Attribute>import Vector<Attribute>.*import static Vector<Attribute>.*import AbstractList<Attribute>import AbstractList<Attribute>.*import static AbstractList<Attribute>.*import AbstractCollection<Attribute>import AbstractCollection<Attribute>.*import static AbstractCollection<Attribute>.*import List<Attribute>import List<Attribute>.*import static List<Attribute>.*import Vector<Attribute>[]import Vector<Attribute>[].*import static Vector<Attribute>[].*import Formatimport Format.*import static Format.*import TimeZoneimport TimeZone.*import static TimeZone.*import NumberFormatimport NumberFormat.*import static NumberFormat.*import Locale[]import Locale[].*import static Locale[].*import ParsePositionimport ParsePosition.*import static ParsePosition.*import ParseExceptionimport ParseException.*import static ParseException.*import FieldPositionimport FieldPosition.*import static FieldPosition.*import DateFormatSymbolsimport DateFormatSymbols.*import static DateFormatSymbols.*import FieldDelegateimport FieldDelegate.*import static FieldDelegate.*import Currencyimport Currency.*import static Currency.*import SimpleDateFormatimport SimpleDateFormat.*import static SimpleDateFormat.*import Clockimport Clock.*import static Clock.*import ZoneIdimport ZoneId.*import static ZoneId.*import Durationimport Duration.*import static Duration.*import DayOfWeekimport DayOfWeek.*import static DayOfWeek.*import Enum<DayOfWeek>import Enum<DayOfWeek>.*import static Enum<DayOfWeek>.*import Comparable<DayOfWeek>import Comparable<DayOfWeek>.*import static Comparable<DayOfWeek>.*import Class<DayOfWeek>import Class<DayOfWeek>.*import static Class<DayOfWeek>.*import TemporalAccessorimport TemporalAccessor.*import static TemporalAccessor.*import TemporalAdjusterimport TemporalAdjuster.*import static TemporalAdjuster.*import Temporalimport Temporal.*import static Temporal.*import TemporalQueryimport TemporalQuery.*import static TemporalQuery.*import TemporalQuery<>import TemporalQuery<>.*import static TemporalQuery<>.*import TemporalQuery<R>import TemporalQuery<R>.*import static TemporalQuery<R>.*import TemporalFieldimport TemporalField.*import static TemporalField.*import ValueRangeimport ValueRange.*import static ValueRange.*import TextStyleimport TextStyle.*import static TextStyle.*import DayOfWeek[]import DayOfWeek[].*import static DayOfWeek[].*import TemporalAmountimport TemporalAmount.*import static TemporalAmount.*import Comparable<Duration>import Comparable<Duration>.*import static Comparable<Duration>.*import TemporalUnitimport TemporalUnit.*import static TemporalUnit.*import List<TemporalUnit>import List<TemporalUnit>.*import static List<TemporalUnit>.*import Collection<TemporalUnit>import Collection<TemporalUnit>.*import static Collection<TemporalUnit>.*import Iterable<TemporalUnit>import Iterable<TemporalUnit>.*import static Iterable<TemporalUnit>.*import Comparable<Instant>import Comparable<Instant>.*import static Comparable<Instant>.*import ZonedDateTimeimport ZonedDateTime.*import static ZonedDateTime.*import ZoneOffsetimport ZoneOffset.*import static ZoneOffset.*import OffsetDateTimeimport OffsetDateTime.*import static OffsetDateTime.*import LocalDateimport LocalDate.*import static LocalDate.*import ChronoLocalDateimport ChronoLocalDate.*import static ChronoLocalDate.*import LocalDateTimeimport LocalDateTime.*import static LocalDateTime.*import OffsetTimeimport OffsetTime.*import static OffsetTime.*import LocalTimeimport LocalTime.*import static LocalTime.*import DateTimeFormatterimport DateTimeFormatter.*import static DateTimeFormatter.*import Periodimport Period.*import static Period.*import Monthimport Month.*import static Month.*import Eraimport Era.*import static Era.*import IsoChronologyimport IsoChronology.*import static IsoChronology.*import ChronoLocalDateTimeimport ChronoLocalDateTime.*import static ChronoLocalDateTime.*import ChronoLocalDateTime<LocalDate>import ChronoLocalDateTime<LocalDate>.*import static ChronoLocalDateTime<LocalDate>.*import ChronoLocalDateTime<?>import ChronoLocalDateTime<?>.*import static ChronoLocalDateTime<?>.*import Comparable<ChronoLocalDateTime<?>>import Comparable<ChronoLocalDateTime<?>>.*import static Comparable<ChronoLocalDateTime<?>>.*import ChronoZonedDateTimeimport ChronoZonedDateTime.*import static ChronoZonedDateTime.*import ChronoZonedDateTime<>import ChronoZonedDateTime<>.*import static ChronoZonedDateTime<>.*import ChronoZonedDateTime<D>import ChronoZonedDateTime<D>.*import static ChronoZonedDateTime<D>.*import ChronoZonedDateTime<?>import ChronoZonedDateTime<?>.*import static ChronoZonedDateTime<?>.*import Comparable<ChronoZonedDateTime<?>>import Comparable<ChronoZonedDateTime<?>>.*import static Comparable<ChronoZonedDateTime<?>>.*import ChronoZonedDateTime<LocalDate>import ChronoZonedDateTime<LocalDate>.*import static ChronoZonedDateTime<LocalDate>.*import ChronoLocalDateTime<>import ChronoLocalDateTime<>.*import static ChronoLocalDateTime<>.*import Chronologyimport Chronology.*import static Chronology.*import Comparator<ChronoLocalDateTime<?>>import Comparator<ChronoLocalDateTime<?>>.*import static Comparator<ChronoLocalDateTime<?>>.*import Comparable<LocalTime>import Comparable<LocalTime>.*import static Comparable<LocalTime>.*import Enum<Month>import Enum<Month>.*import static Enum<Month>.*import Comparable<Month>import Comparable<Month>.*import static Comparable<Month>.*import Class<Month>import Class<Month>.*import static Class<Month>.*import Month[]import Month[].*import static Month[].*import Comparable<OffsetDateTime>import Comparable<OffsetDateTime>.*import static Comparable<OffsetDateTime>.*import Comparator<OffsetDateTime>import Comparator<OffsetDateTime>.*import static Comparator<OffsetDateTime>.*import Comparable<OffsetTime>import Comparable<OffsetTime>.*import static Comparable<OffsetTime>.*import ChronoPeriodimport ChronoPeriod.*import static ChronoPeriod.*import ZoneRulesimport ZoneRules.*import static ZoneRules.*import Comparable<ZoneOffset>import Comparable<ZoneOffset>.*import static Comparable<ZoneOffset>.*import ChronoLocalDateTime<D>import ChronoLocalDateTime<D>.*import static ChronoLocalDateTime<D>.*import Comparator<ChronoZonedDateTime<?>>import Comparator<ChronoZonedDateTime<?>>.*import static Comparator<ChronoZonedDateTime<?>>.*import AbstractChronologyimport AbstractChronology.*import static AbstractChronology.*import Map<TemporalField,Long>import Map<TemporalField,Long>.*import static Map<TemporalField,Long>.*import ChronoFieldimport ChronoField.*import static ChronoField.*import ResolverStyleimport ResolverStyle.*import static ResolverStyle.*import Set<Chronology>import Set<Chronology>.*import static Set<Chronology>.*import Collection<Chronology>import Collection<Chronology>.*import static Collection<Chronology>.*import Iterable<Chronology>import Iterable<Chronology>.*import static Iterable<Chronology>.*import ? extends ChronoLocalDateimport ? extends ChronoLocalDate.*import static ? extends ChronoLocalDate.*import ChronoLocalDateTime<? extends ChronoLocalDate>import ChronoLocalDateTime<? extends ChronoLocalDate>.*import static ChronoLocalDateTime<? extends ChronoLocalDate>.*import Comparator<ChronoLocalDateTime<? extends ChronoLocalDate>>import Comparator<ChronoLocalDateTime<? extends ChronoLocalDate>>.*import static Comparator<ChronoLocalDateTime<? extends ChronoLocalDate>>.*import Comparator<ChronoLocalDate>import Comparator<ChronoLocalDate>.*import static Comparator<ChronoLocalDate>.*import Comparable<ChronoLocalDate>import Comparable<ChronoLocalDate>.*import static Comparable<ChronoLocalDate>.*import Comparable<Chronology>import Comparable<Chronology>.*import static Comparable<Chronology>.*import List<Era>import List<Era>.*import static List<Era>.*import Collection<Era>import Collection<Era>.*import static Collection<Era>.*import Iterable<Era>import Iterable<Era>.*import static Iterable<Era>.*import ChronoZonedDateTime<? extends ChronoLocalDate>import ChronoZonedDateTime<? extends ChronoLocalDate>.*import static ChronoZonedDateTime<? extends ChronoLocalDate>.*import IsoEraimport IsoEra.*import static IsoEra.*import Enum<IsoEra>import Enum<IsoEra>.*import static Enum<IsoEra>.*import Comparable<IsoEra>import Comparable<IsoEra>.*import static Comparable<IsoEra>.*import Class<IsoEra>import Class<IsoEra>.*import static Class<IsoEra>.*import IsoEra[]import IsoEra[].*import static IsoEra[].*import TemporalQuery<?>import TemporalQuery<?>.*import static TemporalQuery<?>.*import CompositePrinterParserimport CompositePrinterParser.*import static CompositePrinterParser.*import TemporalQuery[]import TemporalQuery[].*import static TemporalQuery[].*import TemporalQuery<?>[]import TemporalQuery<?>[].*import static TemporalQuery<?>[].*import TemporalQuery<T>import TemporalQuery<T>.*import static TemporalQuery<T>.*import Set<TemporalField>import Set<TemporalField>.*import static Set<TemporalField>.*import Collection<TemporalField>import Collection<TemporalField>.*import static Collection<TemporalField>.*import Iterable<TemporalField>import Iterable<TemporalField>.*import static Iterable<TemporalField>.*import TemporalField[]import TemporalField[].*import static TemporalField[].*import DecimalStyleimport DecimalStyle.*import static DecimalStyle.*import TemporalQuery<Boolean>import TemporalQuery<Boolean>.*import static TemporalQuery<Boolean>.*import TemporalQuery<Period>import TemporalQuery<Period>.*import static TemporalQuery<Period>.*import FormatStyleimport FormatStyle.*import static FormatStyle.*import DateTimePrinterParserimport DateTimePrinterParser.*import static DateTimePrinterParser.*import DateTimeFormatterBuilderimport DateTimeFormatterBuilder.*import static DateTimeFormatterBuilder.*import DateTimeParseContextimport DateTimeParseContext.*import static DateTimeParseContext.*import DateTimePrintContextimport DateTimePrintContext.*import static DateTimePrintContext.*import DateTimePrinterParser[]import DateTimePrinterParser[].*import static DateTimePrinterParser[].*import List<DateTimePrinterParser>import List<DateTimePrinterParser>.*import static List<DateTimePrinterParser>.*import Collection<DateTimePrinterParser>import Collection<DateTimePrinterParser>.*import static Collection<DateTimePrinterParser>.*import Iterable<DateTimePrinterParser>import Iterable<DateTimePrinterParser>.*import static Iterable<DateTimePrinterParser>.*import Set<ZoneId>import Set<ZoneId>.*import static Set<ZoneId>.*import Collection<ZoneId>import Collection<ZoneId>.*import static Collection<ZoneId>.*import Iterable<ZoneId>import Iterable<ZoneId>.*import static Iterable<ZoneId>.*import Map<Long,String>import Map<Long,String>.*import static Map<Long,String>.*import SignStyleimport SignStyle.*import static SignStyle.*import Consumer<Chronology>import Consumer<Chronology>.*import static Consumer<Chronology>.*import Parsedimport Parsed.*import static Parsed.*import Set<Locale>import Set<Locale>.*import static Set<Locale>.*import Collection<Locale>import Collection<Locale>.*import static Collection<Locale>.*import Iterable<Locale>import Iterable<Locale>.*import static Iterable<Locale>.*import Enum<FormatStyle>import Enum<FormatStyle>.*import static Enum<FormatStyle>.*import Comparable<FormatStyle>import Comparable<FormatStyle>.*import static Comparable<FormatStyle>.*import Class<FormatStyle>import Class<FormatStyle>.*import static Class<FormatStyle>.*import FormatStyle[]import FormatStyle[].*import static FormatStyle[].*import Enum<ResolverStyle>import Enum<ResolverStyle>.*import static Enum<ResolverStyle>.*import Comparable<ResolverStyle>import Comparable<ResolverStyle>.*import static Comparable<ResolverStyle>.*import Class<ResolverStyle>import Class<ResolverStyle>.*import static Class<ResolverStyle>.*import ResolverStyle[]import ResolverStyle[].*import static ResolverStyle[].*import Enum<SignStyle>import Enum<SignStyle>.*import static Enum<SignStyle>.*import Comparable<SignStyle>import Comparable<SignStyle>.*import static Comparable<SignStyle>.*import Class<SignStyle>import Class<SignStyle>.*import static Class<SignStyle>.*import SignStyle[]import SignStyle[].*import static SignStyle[].*import Enum<TextStyle>import Enum<TextStyle>.*import static Enum<TextStyle>.*import Comparable<TextStyle>import Comparable<TextStyle>.*import static Comparable<TextStyle>.*import Class<TextStyle>import Class<TextStyle>.*import static Class<TextStyle>.*import TextStyle[]import TextStyle[].*import static TextStyle[].*import Enum<ChronoField>import Enum<ChronoField>.*import static Enum<ChronoField>.*import Comparable<ChronoField>import Comparable<ChronoField>.*import static Comparable<ChronoField>.*import Class<ChronoField>import Class<ChronoField>.*import static Class<ChronoField>.*import ChronoField[]import ChronoField[].*import static ChronoField[].*import ZoneOffsetTransitionimport ZoneOffsetTransition.*import static ZoneOffsetTransition.*import Comparable<ZoneOffsetTransition>import Comparable<ZoneOffsetTransition>.*import static Comparable<ZoneOffsetTransition>.*import List<ZoneOffset>import List<ZoneOffset>.*import static List<ZoneOffset>.*import Collection<ZoneOffset>import Collection<ZoneOffset>.*import static Collection<ZoneOffset>.*import Iterable<ZoneOffset>import Iterable<ZoneOffset>.*import static Iterable<ZoneOffset>.*import TimeDefinitionimport TimeDefinition.*import static TimeDefinition.*import Enum<TimeDefinition>import Enum<TimeDefinition>.*import static Enum<TimeDefinition>.*import Comparable<TimeDefinition>import Comparable<TimeDefinition>.*import static Comparable<TimeDefinition>.*import Class<TimeDefinition>import Class<TimeDefinition>.*import static Class<TimeDefinition>.*import ZoneOffsetTransitionRuleimport ZoneOffsetTransitionRule.*import static ZoneOffsetTransitionRule.*import TimeDefinition[]import TimeDefinition[].*import static TimeDefinition[].*import List<ZoneOffsetTransitionRule>import List<ZoneOffsetTransitionRule>.*import static List<ZoneOffsetTransitionRule>.*import Collection<ZoneOffsetTransitionRule>import Collection<ZoneOffsetTransitionRule>.*import static Collection<ZoneOffsetTransitionRule>.*import Iterable<ZoneOffsetTransitionRule>import Iterable<ZoneOffsetTransitionRule>.*import static Iterable<ZoneOffsetTransitionRule>.*import List<ZoneOffsetTransition>import List<ZoneOffsetTransition>.*import static List<ZoneOffsetTransition>.*import Collection<ZoneOffsetTransition>import Collection<ZoneOffsetTransition>.*import static Collection<ZoneOffsetTransition>.*import Iterable<ZoneOffsetTransition>import Iterable<ZoneOffsetTransition>.*import static Iterable<ZoneOffsetTransition>.*import DoubleStreamimport DoubleStream.*import static DoubleStream.*import LongStreamimport LongStream.*import static LongStream.*import OfDoubleimport OfDouble.*import static OfDouble.*import OfLongimport OfLong.*import static OfLong.*import OfIntimport OfInt.*import static OfInt.*import IntToDoubleFunctionimport IntToDoubleFunction.*import static IntToDoubleFunction.*import IntToLongFunctionimport IntToLongFunction.*import static IntToLongFunction.*import IntUnaryOperatorimport IntUnaryOperator.*import static IntUnaryOperator.*import IntFunctionimport IntFunction.*import static IntFunction.*import IntFunction<>import IntFunction<>.*import static IntFunction<>.*import IntFunction<? extends T>import IntFunction<? extends T>.*import static IntFunction<? extends T>.*import U[]import U[].*import static U[].*import ? extends T[]import ? extends T[].*import static ? extends T[].*import Class<? extends T[]>import Class<? extends T[]>.*import static Class<? extends T[]>.*import IntBinaryOperatorimport IntBinaryOperator.*import static IntBinaryOperator.*import DoubleBinaryOperatorimport DoubleBinaryOperator.*import static DoubleBinaryOperator.*import LongBinaryOperatorimport LongBinaryOperator.*import static LongBinaryOperator.*import BinaryOperatorimport BinaryOperator.*import static BinaryOperator.*import BinaryOperator<>import BinaryOperator<>.*import static BinaryOperator<>.*import BiFunction<>import BiFunction<>.*import static BiFunction<>.*import BinaryOperator<T>import BinaryOperator<T>.*import static BinaryOperator<T>.*import BiFunction<T,T,T>import BiFunction<T,T,T>.*import static BiFunction<T,T,T>.*import Comparable[]import Comparable[].*import static Comparable[].*import Comparable<>[]import Comparable<>[].*import static Comparable<>[].*import Comparable<? super T>[]import Comparable<? super T>[].*import static Comparable<? super T>[].*import Comparable<Calendar>import Comparable<Calendar>.*import static Comparable<Calendar>.*import Map<String,Integer>import Map<String,Integer>.*import static Map<String,Integer>.*import Set<Currency>import Set<Currency>.*import static Set<Currency>.*import Collection<Currency>import Collection<Currency>.*import static Collection<Currency>.*import Iterable<Currency>import Iterable<Currency>.*import static Iterable<Currency>.*import Comparable<Date>import Comparable<Date>.*import static Comparable<Date>.*import DoubleSummaryStatisticsimport DoubleSummaryStatistics.*import static DoubleSummaryStatistics.*import DoubleConsumerimport DoubleConsumer.*import static DoubleConsumer.*import EnumSetimport EnumSet.*import static EnumSet.*import AbstractSet<E>import AbstractSet<E>.*import static AbstractSet<E>.*import EnumSet<>import EnumSet<>.*import static EnumSet<>.*import AbstractSet<>import AbstractSet<>.*import static AbstractSet<>.*import EnumSet<E>import EnumSet<E>.*import static EnumSet<E>.*import Enum<E>[]import Enum<E>[].*import static Enum<E>[].*import Enum<?>import Enum<?>.*import static Enum<?>.*import Enum<?>[]import Enum<?>[].*import static Enum<?>[].*import HashMap<K,V>import HashMap<K,V>.*import static HashMap<K,V>.*import Dictionary<K,V>import Dictionary<K,V>.*import static Dictionary<K,V>.*import IntSummaryStatisticsimport IntSummaryStatistics.*import static IntSummaryStatistics.*import IntConsumerimport IntConsumer.*import static IntConsumer.*import InvalidPropertiesFormatExceptionimport InvalidPropertiesFormatException.*import static InvalidPropertiesFormatException.*import Categoryimport Category.*import static Category.*import Enum<Category>import Enum<Category>.*import static Enum<Category>.*import Comparable<Category>import Comparable<Category>.*import static Comparable<Category>.*import Class<Category>import Class<Category>.*import static Class<Category>.*import Category[]import Category[].*import static Category[].*import FilteringModeimport FilteringMode.*import static FilteringMode.*import Enum<FilteringMode>import Enum<FilteringMode>.*import static Enum<FilteringMode>.*import Comparable<FilteringMode>import Comparable<FilteringMode>.*import static Comparable<FilteringMode>.*import Class<FilteringMode>import Class<FilteringMode>.*import static Class<FilteringMode>.*import FilteringMode[]import FilteringMode[].*import static FilteringMode[].*import LanguageRangeimport LanguageRange.*import static LanguageRange.*import List<LanguageRange>import List<LanguageRange>.*import static List<LanguageRange>.*import Collection<LanguageRange>import Collection<LanguageRange>.*import static Collection<LanguageRange>.*import Iterable<LanguageRange>import Iterable<LanguageRange>.*import static Iterable<LanguageRange>.*import List<Locale>import List<Locale>.*import static List<Locale>.*import MissingResourceExceptionimport MissingResourceException.*import static MissingResourceException.*import LocaleExtensionsimport LocaleExtensions.*import static LocaleExtensions.*import BaseLocaleimport BaseLocale.*import static BaseLocale.*import Set<Character>import Set<Character>.*import static Set<Character>.*import Collection<Character>import Collection<Character>.*import static Collection<Character>.*import Iterable<Character>import Iterable<Character>.*import static Iterable<Character>.*import LongSummaryStatisticsimport LongSummaryStatistics.*import static LongSummaryStatistics.*import LongConsumerimport LongConsumer.*import static LongConsumer.*import SortedSet<E>import SortedSet<E>.*import static SortedSet<E>.*import Supplier<String>import Supplier<String>.*import static Supplier<String>.*import Optionalimport Optional.*import static Optional.*import ? extends Ximport ? extends X.*import static ? extends X.*import Supplier<? extends X>import Supplier<? extends X>.*import static Supplier<? extends X>.*import Supplier<? extends T>import Supplier<? extends T>.*import static Supplier<? extends T>.*import Optional<>import Optional<>.*import static Optional<>.*import Optional<U>import Optional<U>.*import static Optional<U>.*import Function<? super T,Optional<U>>import Function<? super T,Optional<U>>.*import static Function<? super T,Optional<U>>.*import Optional<T>import Optional<T>.*import static Optional<T>.*import OptionalDoubleimport OptionalDouble.*import static OptionalDouble.*import Supplier<X>import Supplier<X>.*import static Supplier<X>.*import DoubleSupplierimport DoubleSupplier.*import static DoubleSupplier.*import OptionalIntimport OptionalInt.*import static OptionalInt.*import IntSupplierimport IntSupplier.*import static IntSupplier.*import OptionalLongimport OptionalLong.*import static OptionalLong.*import LongSupplierimport LongSupplier.*import static LongSupplier.*import PrimitiveIteratorimport PrimitiveIterator.*import static PrimitiveIterator.*import PrimitiveIterator<Double,DoubleConsumer>import PrimitiveIterator<Double,DoubleConsumer>.*import static PrimitiveIterator<Double,DoubleConsumer>.*import Iterator<Double>import Iterator<Double>.*import static Iterator<Double>.*import ? super Doubleimport ? super Double.*import static ? super Double.*import Consumer<? super Double>import Consumer<? super Double>.*import static Consumer<? super Double>.*import T_CONSimport T_CONS.*import static T_CONS.*import PrimitiveIterator<>import PrimitiveIterator<>.*import static PrimitiveIterator<>.*import PrimitiveIterator<Integer,IntConsumer>import PrimitiveIterator<Integer,IntConsumer>.*import static PrimitiveIterator<Integer,IntConsumer>.*import Iterator<Integer>import Iterator<Integer>.*import static Iterator<Integer>.*import Consumer<? super Integer>import Consumer<? super Integer>.*import static Consumer<? super Integer>.*import PrimitiveIterator<Long,LongConsumer>import PrimitiveIterator<Long,LongConsumer>.*import static PrimitiveIterator<Long,LongConsumer>.*import Iterator<Long>import Iterator<Long>.*import static Iterator<Long>.*import ? super Longimport ? super Long.*import static ? super Long.*import Consumer<? super Long>import Consumer<? super Long>.*import static Consumer<? super Long>.*import Enumeration<?>import Enumeration<?>.*import static Enumeration<?>.*import Controlimport Control.*import static Control.*import OfPrimitiveimport OfPrimitive.*import static OfPrimitive.*import OfPrimitive<Double,DoubleConsumer,OfDouble>import OfPrimitive<Double,DoubleConsumer,OfDouble>.*import static OfPrimitive<Double,DoubleConsumer,OfDouble>.*import Spliterator<Double>import Spliterator<Double>.*import static Spliterator<Double>.*import Comparator<? super Double>import Comparator<? super Double>.*import static Comparator<? super Double>.*import OfPrimitive<>import OfPrimitive<>.*import static OfPrimitive<>.*import T_SPLITRimport T_SPLITR.*import static T_SPLITR.*import OfPrimitive<Integer,IntConsumer,OfInt>import OfPrimitive<Integer,IntConsumer,OfInt>.*import static OfPrimitive<Integer,IntConsumer,OfInt>.*import Spliterator<Integer>import Spliterator<Integer>.*import static Spliterator<Integer>.*import OfPrimitive<Long,LongConsumer,OfLong>import OfPrimitive<Long,LongConsumer,OfLong>.*import static OfPrimitive<Long,LongConsumer,OfLong>.*import Spliterator<Long>import Spliterator<Long>.*import static Spliterator<Long>.*import Comparator<? super Long>import Comparator<? super Long>.*import static Comparator<? super Long>.*import Stackimport Stack.*import static Stack.*import Vector<E>import Vector<E>.*import static Vector<E>.*import Enumeration<E>import Enumeration<E>.*import static Enumeration<E>.*import TimerTaskimport TimerTask.*import static TimerTask.*import Comparable<UUID>import Comparable<UUID>.*import static Comparable<UUID>.*import ReferenceQueue<? super Object>import ReferenceQueue<? super Object>.*import static ReferenceQueue<? super Object>.*import AbstractExecutorServiceimport AbstractExecutorService.*import static AbstractExecutorService.*import RunnableFutureimport RunnableFuture.*import static RunnableFuture.*import RunnableFuture<>import RunnableFuture<>.*import static RunnableFuture<>.*import RunnableFuture<T>import RunnableFuture<T>.*import static RunnableFuture<T>.*import AltResultimport AltResult.*import static AltResult.*import CompletableFutureimport CompletableFuture.*import static CompletableFuture.*import CompletableFuture<>import CompletableFuture<>.*import static CompletableFuture<>.*import CompletionStageimport CompletionStage.*import static CompletionStage.*import CompletionStage<>import CompletionStage<>.*import static CompletionStage<>.*import AsynchronousCompletionTaskimport AsynchronousCompletionTask.*import static AsynchronousCompletionTask.*import BiAcceptimport BiAccept.*import static BiAccept.*import BiCompletionimport BiCompletion.*import static BiCompletion.*import BiCompletion<T,U,Void>import BiCompletion<T,U,Void>.*import static BiCompletion<T,U,Void>.*import UniCompletionimport UniCompletion.*import static UniCompletion.*import UniCompletion<T,Void>import UniCompletion<T,Void>.*import static UniCompletion<T,Void>.*import Completionimport Completion.*import static Completion.*import CompletableFuture<V>import CompletableFuture<V>.*import static CompletableFuture<V>.*import CompletionStage<V>import CompletionStage<V>.*import static CompletionStage<V>.*import CompletableFuture<T>import CompletableFuture<T>.*import static CompletableFuture<T>.*import CompletionStage<T>import CompletionStage<T>.*import static CompletionStage<T>.*import CompletableFuture<Void>import CompletableFuture<Void>.*import static CompletableFuture<Void>.*import Future<Void>import Future<Void>.*import static Future<Void>.*import CompletionStage<Void>import CompletionStage<Void>.*import static CompletionStage<Void>.*import CompletableFuture<U>import CompletableFuture<U>.*import static CompletableFuture<U>.*import Future<U>import Future<U>.*import static Future<U>.*import CompletionStage<U>import CompletionStage<U>.*import static CompletionStage<U>.*import BiConsumer<? super T,? super U>import BiConsumer<? super T,? super U>.*import static BiConsumer<? super T,? super U>.*import BiApplyimport BiApply.*import static BiApply.*import BiCompletion<T,U,V>import BiCompletion<T,U,V>.*import static BiCompletion<T,U,V>.*import UniCompletion<T,V>import UniCompletion<T,V>.*import static UniCompletion<T,V>.*import BiFunction<? super T,? super U,? extends V>import BiFunction<? super T,? super U,? extends V>.*import static BiFunction<? super T,? super U,? extends V>.*import BiRunimport BiRun.*import static BiRun.*import ForkJoinTaskimport ForkJoinTask.*import static ForkJoinTask.*import ForkJoinTask<Void>import ForkJoinTask<Void>.*import static ForkJoinTask<Void>.*import ForkJoinTask<>import ForkJoinTask<>.*import static ForkJoinTask<>.*import ForkJoinTask<T>import ForkJoinTask<T>.*import static ForkJoinTask<T>.*import Callable<? extends T>import Callable<? extends T>.*import static Callable<? extends T>.*import ForkJoinTask<?>import ForkJoinTask<?>.*import static ForkJoinTask<?>.*import ForkJoinPoolimport ForkJoinPool.*import static ForkJoinPool.*import ForkJoinTask[]import ForkJoinTask[].*import static ForkJoinTask[].*import ForkJoinTask<?>[]import ForkJoinTask<?>[].*import static ForkJoinTask<?>[].*import CompletableFuture<?>import CompletableFuture<?>.*import static CompletableFuture<?>.*import CompletionStage<?>import CompletionStage<?>.*import static CompletionStage<?>.*import OrAcceptimport OrAccept.*import static OrAccept.*import OrApplyimport OrApply.*import static OrApply.*import Function<? super T,? extends V>import Function<? super T,? extends V>.*import static Function<? super T,? extends V>.*import OrRunimport OrRun.*import static OrRun.*import UniAcceptimport UniAccept.*import static UniAccept.*import UniApplyimport UniApply.*import static UniApply.*import UniComposeimport UniCompose.*import static UniCompose.*import ? extends CompletionStage<V>import ? extends CompletionStage<V>.*import static ? extends CompletionStage<V>.*import Function<? super T,? extends CompletionStage<V>>import Function<? super T,? extends CompletionStage<V>>.*import static Function<? super T,? extends CompletionStage<V>>.*import UniExceptionallyimport UniExceptionally.*import static UniExceptionally.*import UniCompletion<T,T>import UniCompletion<T,T>.*import static UniCompletion<T,T>.*import ? super Throwableimport ? super Throwable.*import static ? super Throwable.*import Function<? super Throwable,? extends T>import Function<? super Throwable,? extends T>.*import static Function<? super Throwable,? extends T>.*import UniHandleimport UniHandle.*import static UniHandle.*import BiFunction<? super T,Throwable,? extends V>import BiFunction<? super T,Throwable,? extends V>.*import static BiFunction<? super T,Throwable,? extends V>.*import UniRunimport UniRun.*import static UniRun.*import UniWhenCompleteimport UniWhenComplete.*import static UniWhenComplete.*import BiConsumer<? super T,? super Throwable>import BiConsumer<? super T,? super Throwable>.*import static BiConsumer<? super T,? super Throwable>.*import BiFunction<? super T,Throwable,? extends U>import BiFunction<? super T,Throwable,? extends U>.*import static BiFunction<? super T,Throwable,? extends U>.*import Function<Throwable,? extends T>import Function<Throwable,? extends T>.*import static Function<Throwable,? extends T>.*import ? extends CompletionStage<U>import ? extends CompletionStage<U>.*import static ? extends CompletionStage<U>.*import Function<? super T,? extends CompletionStage<U>>import Function<? super T,? extends CompletionStage<U>>.*import static Function<? super T,? extends CompletionStage<U>>.*import CompletionStage<? extends T>import CompletionStage<? extends T>.*import static CompletionStage<? extends T>.*import Function<? super T,U>import Function<? super T,U>.*import static Function<? super T,U>.*import BiConsumer<>import BiConsumer<>.*import static BiConsumer<>.*import CompletionStage<? extends U>import CompletionStage<? extends U>.*import static CompletionStage<? extends U>.*import CompletableFuture[]import CompletableFuture[].*import static CompletableFuture[].*import CompletableFuture<?>[]import CompletableFuture<?>[].*import static CompletableFuture<?>[].*import CompletableFuture<Object>import CompletableFuture<Object>.*import static CompletableFuture<Object>.*import Future<Object>import Future<Object>.*import static Future<Object>.*import CompletionStage<Object>import CompletionStage<Object>.*import static CompletionStage<Object>.*import Supplier<U>import Supplier<U>.*import static Supplier<U>.*import OrRun<?,?>import OrRun<?,?>.*import static OrRun<?,?>.*import BiCompletion<?,?,Void>import BiCompletion<?,?,Void>.*import static BiCompletion<?,?,Void>.*import UniCompletion<?,Void>import UniCompletion<?,Void>.*import static UniCompletion<?,Void>.*import OrAccept<>import OrAccept<>.*import static OrAccept<>.*import BiCompletion<>import BiCompletion<>.*import static BiCompletion<>.*import UniCompletion<>import UniCompletion<>.*import static UniCompletion<>.*import CompletableFuture<R>import CompletableFuture<R>.*import static CompletableFuture<R>.*import CompletionStage<R>import CompletionStage<R>.*import static CompletionStage<R>.*import CompletableFuture<S>import CompletableFuture<S>.*import static CompletableFuture<S>.*import Future<S>import Future<S>.*import static Future<S>.*import CompletionStage<S>import CompletionStage<S>.*import static CompletionStage<S>.*import OrAccept<R,S>import OrAccept<R,S>.*import static OrAccept<R,S>.*import BiCompletion<R,S,Void>import BiCompletion<R,S,Void>.*import static BiCompletion<R,S,Void>.*import UniCompletion<R,Void>import UniCompletion<R,Void>.*import static UniCompletion<R,Void>.*import OrApply<>import OrApply<>.*import static OrApply<>.*import Function<? super R,? extends T>import Function<? super R,? extends T>.*import static Function<? super R,? extends T>.*import OrApply<R,S,T>import OrApply<R,S,T>.*import static OrApply<R,S,T>.*import BiCompletion<R,S,T>import BiCompletion<R,S,T>.*import static BiCompletion<R,S,T>.*import UniCompletion<R,T>import UniCompletion<R,T>.*import static UniCompletion<R,T>.*import BiCompletion<?,?,?>import BiCompletion<?,?,?>.*import static BiCompletion<?,?,?>.*import UniCompletion<?,?>import UniCompletion<?,?>.*import static UniCompletion<?,?>.*import BiRun<?,?>import BiRun<?,?>.*import static BiRun<?,?>.*import BiAccept<>import BiAccept<>.*import static BiAccept<>.*import ? super Simport ? super S.*import static ? super S.*import BiConsumer<? super R,? super S>import BiConsumer<? super R,? super S>.*import static BiConsumer<? super R,? super S>.*import BiAccept<R,S>import BiAccept<R,S>.*import static BiAccept<R,S>.*import BiApply<>import BiApply<>.*import static BiApply<>.*import BiFunction<? super R,? super S,? extends T>import BiFunction<? super R,? super S,? extends T>.*import static BiFunction<? super R,? super S,? extends T>.*import BiApply<R,S,T>import BiApply<R,S,T>.*import static BiApply<R,S,T>.*import UniCompose<>import UniCompose<>.*import static UniCompose<>.*import ? extends CompletionStage<T>import ? extends CompletionStage<T>.*import static ? extends CompletionStage<T>.*import Function<? super S,? extends CompletionStage<T>>import Function<? super S,? extends CompletionStage<T>>.*import static Function<? super S,? extends CompletionStage<T>>.*import UniCompose<S,T>import UniCompose<S,T>.*import static UniCompose<S,T>.*import UniCompletion<S,T>import UniCompletion<S,T>.*import static UniCompletion<S,T>.*import UniExceptionally<T>import UniExceptionally<T>.*import static UniExceptionally<T>.*import UniHandle<>import UniHandle<>.*import static UniHandle<>.*import BiFunction<? super S,Throwable,? extends T>import BiFunction<? super S,Throwable,? extends T>.*import static BiFunction<? super S,Throwable,? extends T>.*import UniHandle<S,T>import UniHandle<S,T>.*import static UniHandle<S,T>.*import UniWhenComplete<T>import UniWhenComplete<T>.*import static UniWhenComplete<T>.*import UniRun<?>import UniRun<?>.*import static UniRun<?>.*import UniAccept<>import UniAccept<>.*import static UniAccept<>.*import Consumer<? super S>import Consumer<? super S>.*import static Consumer<? super S>.*import UniAccept<S>import UniAccept<S>.*import static UniAccept<S>.*import UniCompletion<S,Void>import UniCompletion<S,Void>.*import static UniCompletion<S,Void>.*import UniApply<>import UniApply<>.*import static UniApply<>.*import Function<? super S,? extends T>import Function<? super S,? extends T>.*import static Function<? super S,? extends T>.*import UniApply<S,T>import UniApply<S,T>.*import static UniApply<S,T>.*import CollectionViewimport CollectionView.*import static CollectionView.*import ConcurrentHashMapimport ConcurrentHashMap.*import static ConcurrentHashMap.*import ConcurrentHashMap<>import ConcurrentHashMap<>.*import static ConcurrentHashMap<>.*import ConcurrentHashMap<K,V>import ConcurrentHashMap<K,V>.*import static ConcurrentHashMap<K,V>.*import KeySetViewimport KeySetView.*import static KeySetView.*import CollectionView<K,V,K>import CollectionView<K,V,K>.*import static CollectionView<K,V,K>.*import Consumer<? super K>import Consumer<? super K>.*import static Consumer<? super K>.*import Stream<K>import Stream<K>.*import static Stream<K>.*import BaseStream<K,Stream<K>>import BaseStream<K,Stream<K>>.*import static BaseStream<K,Stream<K>>.*import Predicate<? super K>import Predicate<? super K>.*import static Predicate<? super K>.*import ToIntFunction<Entry<K,V>>import ToIntFunction<Entry<K,V>>.*import static ToIntFunction<Entry<K,V>>.*import ToLongFunction<Entry<K,V>>import ToLongFunction<Entry<K,V>>.*import static ToLongFunction<Entry<K,V>>.*import ToDoubleFunction<Entry<K,V>>import ToDoubleFunction<Entry<K,V>>.*import static ToDoubleFunction<Entry<K,V>>.*import Function<Entry<K,V>,? extends U>import Function<Entry<K,V>,? extends U>.*import static Function<Entry<K,V>,? extends U>.*import BiFunction<? super U,? super U,? extends U>import BiFunction<? super U,? super U,? extends U>.*import static BiFunction<? super U,? super U,? extends U>.*import ? extends Entry<K,V>import ? extends Entry<K,V>.*import static ? extends Entry<K,V>.*import BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>import BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>.*import static BiFunction<Entry<K,V>,Entry<K,V>,? extends Entry<K,V>>.*import Consumer<? super U>import Consumer<? super U>.*import static Consumer<? super U>.*import ? super Entry<K,V>import ? super Entry<K,V>.*import static ? super Entry<K,V>.*import Consumer<? super Entry<K,V>>import Consumer<? super Entry<K,V>>.*import static Consumer<? super Entry<K,V>>.*import ToIntFunction<? super V>import ToIntFunction<? super V>.*import static ToIntFunction<? super V>.*import ToLongFunction<? super V>import ToLongFunction<? super V>.*import static ToLongFunction<? super V>.*import ToDoubleFunction<? super V>import ToDoubleFunction<? super V>.*import static ToDoubleFunction<? super V>.*import Function<? super V,? extends U>import Function<? super V,? extends U>.*import static Function<? super V,? extends U>.*import Consumer<? super V>import Consumer<? super V>.*import static Consumer<? super V>.*import ToIntFunction<? super K>import ToIntFunction<? super K>.*import static ToIntFunction<? super K>.*import ToLongFunction<? super K>import ToLongFunction<? super K>.*import static ToLongFunction<? super K>.*import ToDoubleFunction<? super K>import ToDoubleFunction<? super K>.*import static ToDoubleFunction<? super K>.*import Function<? super K,? extends U>import Function<? super K,? extends U>.*import static Function<? super K,? extends U>.*import BiFunction<? super K,? super K,? extends K>import BiFunction<? super K,? super K,? extends K>.*import static BiFunction<? super K,? super K,? extends K>.*import ToIntBiFunctionimport ToIntBiFunction.*import static ToIntBiFunction.*import ToIntBiFunction<? super K,? super V>import ToIntBiFunction<? super K,? super V>.*import static ToIntBiFunction<? super K,? super V>.*import ToLongBiFunctionimport ToLongBiFunction.*import static ToLongBiFunction.*import ToLongBiFunction<? super K,? super V>import ToLongBiFunction<? super K,? super V>.*import static ToLongBiFunction<? super K,? super V>.*import ToDoubleBiFunctionimport ToDoubleBiFunction.*import static ToDoubleBiFunction.*import ToDoubleBiFunction<? super K,? super V>import ToDoubleBiFunction<? super K,? super V>.*import static ToDoubleBiFunction<? super K,? super V>.*import BiFunction<? super K,? super V,? extends U>import BiFunction<? super K,? super V,? extends U>.*import static BiFunction<? super K,? super V,? extends U>.*import KeySetView<>import KeySetView<>.*import static KeySetView<>.*import CollectionView<>import CollectionView<>.*import static CollectionView<>.*import KeySetView<K,V>import KeySetView<K,V>.*import static KeySetView<K,V>.*import KeySetView<K,Boolean>import KeySetView<K,Boolean>.*import static KeySetView<K,Boolean>.*import CollectionView<K,Boolean,K>import CollectionView<K,Boolean,K>.*import static CollectionView<K,Boolean,K>.*import CountedCompleterimport CountedCompleter.*import static CountedCompleter.*import CountedCompleter<>import CountedCompleter<>.*import static CountedCompleter<>.*import CountedCompleter<?>import CountedCompleter<?>.*import static CountedCompleter<?>.*import List<Runnable>import List<Runnable>.*import static List<Runnable>.*import Collection<Runnable>import Collection<Runnable>.*import static Collection<Runnable>.*import Iterable<Runnable>import Iterable<Runnable>.*import static Iterable<Runnable>.*import ForkJoinWorkerThreadFactoryimport ForkJoinWorkerThreadFactory.*import static ForkJoinWorkerThreadFactory.*import ForkJoinWorkerThreadimport ForkJoinWorkerThread.*import static ForkJoinWorkerThread.*import ManagedBlockerimport ManagedBlocker.*import static ManagedBlocker.*import WorkQueueimport WorkQueue.*import static WorkQueue.*import ForkJoinTask<>[]import ForkJoinTask<>[].*import static ForkJoinTask<>[].*import ? super ForkJoinTask<?>import ? super ForkJoinTask<?>.*import static ? super ForkJoinTask<?>.*import Collection<? super ForkJoinTask<?>>import Collection<? super ForkJoinTask<?>>.*import static Collection<? super ForkJoinTask<?>>.*import Iterable<? super ForkJoinTask<?>>import Iterable<? super ForkJoinTask<?>>.*import static Iterable<? super ForkJoinTask<?>>.*import WorkQueue[]import WorkQueue[].*import static WorkQueue[].*import Enum<TimeUnit>import Enum<TimeUnit>.*import static Enum<TimeUnit>.*import Comparable<TimeUnit>import Comparable<TimeUnit>.*import static Comparable<TimeUnit>.*import Class<TimeUnit>import Class<TimeUnit>.*import static Class<TimeUnit>.*import TimeUnit[]import TimeUnit[].*import static TimeUnit[].*import LongUnaryOperatorimport LongUnaryOperator.*import static LongUnaryOperator.*import BinaryOperator<E>import BinaryOperator<E>.*import static BinaryOperator<E>.*import BiFunction<E,E,E>import BiFunction<E,E,E>.*import static BiFunction<E,E,E>.*import LongAccumulatorimport LongAccumulator.*import static LongAccumulator.*import Striped64import Striped64.*import static Striped64.*import LongAdderimport LongAdder.*import static LongAdder.*import Cellimport Cell.*import static Cell.*import Cell[]import Cell[].*import static Cell[].*import Lockimport Lock.*import static Lock.*import Collection<Thread>import Collection<Thread>.*import static Collection<Thread>.*import Iterable<Thread>import Iterable<Thread>.*import static Iterable<Thread>.*import BiFunction<T,U,V>import BiFunction<T,U,V>.*import static BiFunction<T,U,V>.*import Function<? super R,? extends V>import Function<? super R,? extends V>.*import static Function<? super R,? extends V>.*import BiFunction<T,T,V>import BiFunction<T,T,V>.*import static BiFunction<T,T,V>.*import DoubleFunctionimport DoubleFunction.*import static DoubleFunction.*import DoublePredicateimport DoublePredicate.*import static DoublePredicate.*import DoubleToIntFunctionimport DoubleToIntFunction.*import static DoubleToIntFunction.*import DoubleToLongFunctionimport DoubleToLongFunction.*import static DoubleToLongFunction.*import DoubleUnaryOperatorimport DoubleUnaryOperator.*import static DoubleUnaryOperator.*import Function<T,V>import Function<T,V>.*import static Function<T,V>.*import Function<V,R>import Function<V,R>.*import static Function<V,R>.*import Function<? super V,? extends T>import Function<? super V,? extends T>.*import static Function<? super V,? extends T>.*import IntPredicateimport IntPredicate.*import static IntPredicate.*import LongFunctionimport LongFunction.*import static LongFunction.*import LongPredicateimport LongPredicate.*import static LongPredicate.*import LongToDoubleFunctionimport LongToDoubleFunction.*import static LongToDoubleFunction.*import LongToIntFunctionimport LongToIntFunction.*import static LongToIntFunction.*import ObjDoubleConsumerimport ObjDoubleConsumer.*import static ObjDoubleConsumer.*import ObjIntConsumerimport ObjIntConsumer.*import static ObjIntConsumer.*import ObjLongConsumerimport ObjLongConsumer.*import static ObjLongConsumer.*import Function<V,T>import Function<V,T>.*import static Function<V,T>.*import UnaryOperator<>import UnaryOperator<>.*import static UnaryOperator<>.*import FastInputStreamimport FastInputStream.*import static FastInputStream.*import JarEntryimport JarEntry.*import static JarEntry.*import ZipEntryimport ZipEntry.*import static ZipEntry.*import JarExceptionimport JarException.*import static JarException.*import ZipExceptionimport ZipException.*import static ZipException.*import JarFileimport JarFile.*import static JarFile.*import ZipFileimport ZipFile.*import static ZipFile.*import CodeSource[]import CodeSource[].*import static CodeSource[].*import Enumeration<JarEntry>import Enumeration<JarEntry>.*import static Enumeration<JarEntry>.*import Stream<JarEntry>import Stream<JarEntry>.*import static Stream<JarEntry>.*import BaseStream<JarEntry,Stream<JarEntry>>import BaseStream<JarEntry,Stream<JarEntry>>.*import static BaseStream<JarEntry,Stream<JarEntry>>.*import JarVerifierimport JarVerifier.*import static JarVerifier.*import ? extends ZipEntryimport ? extends ZipEntry.*import static ? extends ZipEntry.*import Enumeration<? extends ZipEntry>import Enumeration<? extends ZipEntry>.*import static Enumeration<? extends ZipEntry>.*import ManifestEntryVerifierimport ManifestEntryVerifier.*import static ManifestEntryVerifier.*import Map<String,Attributes>import Map<String,Attributes>.*import static Map<String,Attributes>.*import ErrorManagerimport ErrorManager.*import static ErrorManager.*import LogNodeimport LogNode.*import static LogNode.*import LogManagerimport LogManager.*import static LogManager.*import LoggerContextimport LoggerContext.*import static LoggerContext.*import LoggerWeakRefimport LoggerWeakRef.*import static LoggerWeakRef.*import HashMap<String,LogNode>import HashMap<String,LogNode>.*import static HashMap<String,LogNode>.*import AbstractMap<String,LogNode>import AbstractMap<String,LogNode>.*import static AbstractMap<String,LogNode>.*import Map<String,LogNode>import Map<String,LogNode>.*import static Map<String,LogNode>.*import WeakReference<Logger>import WeakReference<Logger>.*import static WeakReference<Logger>.*import Reference<Logger>import Reference<Logger>.*import static Reference<Logger>.*import ? super Loggerimport ? super Logger.*import static ? super Logger.*import ReferenceQueue<? super Logger>import ReferenceQueue<? super Logger>.*import static ReferenceQueue<? super Logger>.*import LoggingMXBeanimport LoggingMXBean.*import static LoggingMXBean.*import Handler[]import Handler[].*import static Handler[].*import MatchResultimport MatchResult.*import static MatchResult.*import GroupHeadimport GroupHead.*import static GroupHead.*import TreeInfoimport TreeInfo.*import static TreeInfo.*import Predicate<String>import Predicate<String>.*import static Predicate<String>.*import GroupHead[]import GroupHead[].*import static GroupHead[].*import Characteristicsimport Characteristics.*import static Characteristics.*import Enum<Characteristics>import Enum<Characteristics>.*import static Enum<Characteristics>.*import Comparable<Characteristics>import Comparable<Characteristics>.*import static Comparable<Characteristics>.*import Class<Characteristics>import Class<Characteristics>.*import static Class<Characteristics>.*import Collectorimport Collector.*import static Collector.*import Collector<>import Collector<>.*import static Collector<>.*import Characteristics[]import Characteristics[].*import static Characteristics[].*import Collector<T,A,R>import Collector<T,A,R>.*import static Collector<T,A,R>.*import Supplier<A>import Supplier<A>.*import static Supplier<A>.*import BiConsumer<A,T>import BiConsumer<A,T>.*import static BiConsumer<A,T>.*import BinaryOperator<A>import BinaryOperator<A>.*import static BinaryOperator<A>.*import BiFunction<A,A,A>import BiFunction<A,A,A>.*import static BiFunction<A,A,A>.*import Function<A,R>import Function<A,R>.*import static Function<A,R>.*import Collector<T,R,R>import Collector<T,R,R>.*import static Collector<T,R,R>.*import Supplier<R>import Supplier<R>.*import static Supplier<R>.*import BiConsumer<R,T>import BiConsumer<R,T>.*import static BiConsumer<R,T>.*import BinaryOperator<R>import BinaryOperator<R>.*import static BinaryOperator<R>.*import BiFunction<R,R,R>import BiFunction<R,R,R>.*import static BiFunction<R,R,R>.*import Set<Characteristics>import Set<Characteristics>.*import static Set<Characteristics>.*import Collection<Characteristics>import Collection<Characteristics>.*import static Collection<Characteristics>.*import Iterable<Characteristics>import Iterable<Characteristics>.*import static Iterable<Characteristics>.*import BaseStream<Double,DoubleStream>import BaseStream<Double,DoubleStream>.*import static BaseStream<Double,DoubleStream>.*import Stream<Double>import Stream<Double>.*import static Stream<Double>.*import BaseStream<Double,Stream<Double>>import BaseStream<Double,Stream<Double>>.*import static BaseStream<Double,Stream<Double>>.*import ObjDoubleConsumer<>import ObjDoubleConsumer<>.*import static ObjDoubleConsumer<>.*import ObjDoubleConsumer<R>import ObjDoubleConsumer<R>.*import static ObjDoubleConsumer<R>.*import BiConsumer<R,R>import BiConsumer<R,R>.*import static BiConsumer<R,R>.*import ? extends DoubleStreamimport ? extends DoubleStream.*import static ? extends DoubleStream.*import DoubleFunction<? extends DoubleStream>import DoubleFunction<? extends DoubleStream>.*import static DoubleFunction<? extends DoubleStream>.*import DoubleFunction<>import DoubleFunction<>.*import static DoubleFunction<>.*import Stream<U>import Stream<U>.*import static Stream<U>.*import BaseStream<U,Stream<U>>import BaseStream<U,Stream<U>>.*import static BaseStream<U,Stream<U>>.*import DoubleFunction<? extends U>import DoubleFunction<? extends U>.*import static DoubleFunction<? extends U>.*import BaseStream<Integer,IntStream>import BaseStream<Integer,IntStream>.*import static BaseStream<Integer,IntStream>.*import Stream<Integer>import Stream<Integer>.*import static Stream<Integer>.*import BaseStream<Integer,Stream<Integer>>import BaseStream<Integer,Stream<Integer>>.*import static BaseStream<Integer,Stream<Integer>>.*import ObjIntConsumer<>import ObjIntConsumer<>.*import static ObjIntConsumer<>.*import ObjIntConsumer<R>import ObjIntConsumer<R>.*import static ObjIntConsumer<R>.*import ? extends IntStreamimport ? extends IntStream.*import static ? extends IntStream.*import IntFunction<? extends IntStream>import IntFunction<? extends IntStream>.*import static IntFunction<? extends IntStream>.*import IntFunction<? extends U>import IntFunction<? extends U>.*import static IntFunction<? extends U>.*import BaseStream<Long,LongStream>import BaseStream<Long,LongStream>.*import static BaseStream<Long,LongStream>.*import Stream<Long>import Stream<Long>.*import static Stream<Long>.*import BaseStream<Long,Stream<Long>>import BaseStream<Long,Stream<Long>>.*import static BaseStream<Long,Stream<Long>>.*import ObjLongConsumer<>import ObjLongConsumer<>.*import static ObjLongConsumer<>.*import ObjLongConsumer<R>import ObjLongConsumer<R>.*import static ObjLongConsumer<R>.*import ? extends LongStreamimport ? extends LongStream.*import static ? extends LongStream.*import LongFunction<? extends LongStream>import LongFunction<? extends LongStream>.*import static LongFunction<? extends LongStream>.*import LongFunction<>import LongFunction<>.*import static LongFunction<>.*import LongFunction<? extends U>import LongFunction<? extends U>.*import static LongFunction<? extends U>.*import Consumer<T>import Consumer<T>.*import static Consumer<T>.*import BaseStream<T,Stream>import BaseStream<T,Stream>.*import static BaseStream<T,Stream>.*import Stream<? extends T>import Stream<? extends T>.*import static Stream<? extends T>.*import BaseStream<? extends T,Stream<? extends T>>import BaseStream<? extends T,Stream<? extends T>>.*import static BaseStream<? extends T,Stream<? extends T>>.*import Supplier<T>import Supplier<T>.*import static Supplier<T>.*import Builder<T>import Builder<T>.*import static Builder<T>.*import Collector<? super T,A,R>import Collector<? super T,A,R>.*import static Collector<? super T,A,R>.*import BiConsumer<R,? super T>import BiConsumer<R,? super T>.*import static BiConsumer<R,? super T>.*import BiFunction<U,? super T,U>import BiFunction<U,? super T,U>.*import static BiFunction<U,? super T,U>.*import BinaryOperator<U>import BinaryOperator<U>.*import static BinaryOperator<U>.*import BiFunction<U,U,U>import BiFunction<U,U,U>.*import static BiFunction<U,U,U>.*import IntFunction<A[]>import IntFunction<A[]>.*import static IntFunction<A[]>.*import Function<? super T,? extends DoubleStream>import Function<? super T,? extends DoubleStream>.*import static Function<? super T,? extends DoubleStream>.*import Function<? super T,? extends LongStream>import Function<? super T,? extends LongStream>.*import static Function<? super T,? extends LongStream>.*import Function<? super T,? extends IntStream>import Function<? super T,? extends IntStream>.*import static Function<? super T,? extends IntStream>.*import Stream<? extends R>import Stream<? extends R>.*import static Stream<? extends R>.*import BaseStream<? extends R,Stream<? extends R>>import BaseStream<? extends R,Stream<? extends R>>.*import static BaseStream<? extends R,Stream<? extends R>>.*import ? extends Stream<? extends R>import ? extends Stream<? extends R>.*import static ? extends Stream<? extends R>.*import Function<? super T,? extends Stream<? extends R>>import Function<? super T,? extends Stream<? extends R>>.*import static Function<? super T,? extends Stream<? extends R>>.*import Function<? super T,? extends R>import Function<? super T,? extends R>.*import static Function<? super T,? extends R>.*import ZipConstantsimport ZipConstants.*import static ZipConstants.*import Stream<? extends ZipEntry>import Stream<? extends ZipEntry>.*import static Stream<? extends ZipEntry>.*import BaseStream<? extends ZipEntry,Stream<? extends ZipEntry>>import BaseStream<? extends ZipEntry,Stream<? extends ZipEntry>>.*import static BaseStream<? extends ZipEntry,Stream<? extends ZipEntry>>.*import AccessibleActionimport AccessibleAction.*import static AccessibleAction.*import AccessibleBundleimport AccessibleBundle.*import static AccessibleBundle.*import AccessibleComponentimport AccessibleComponent.*import static AccessibleComponent.*import AccessibleTableimport AccessibleTable.*import static AccessibleTable.*import AccessibleRelationSetimport AccessibleRelationSet.*import static AccessibleRelationSet.*import AccessibleIconimport AccessibleIcon.*import static AccessibleIcon.*import AccessibleIcon[]import AccessibleIcon[].*import static AccessibleIcon[].*import AccessibleValueimport AccessibleValue.*import static AccessibleValue.*import AccessibleEditableTextimport AccessibleEditableText.*import static AccessibleEditableText.*import AccessibleTextimport AccessibleText.*import static AccessibleText.*import AccessibleSelectionimport AccessibleSelection.*import static AccessibleSelection.*import AccessibleRoleimport AccessibleRole.*import static AccessibleRole.*import AttributeSetimport AttributeSet.*import static AttributeSet.*import AccessibleRelationimport AccessibleRelation.*import static AccessibleRelation.*import AccessibleRelation[]import AccessibleRelation[].*import static AccessibleRelation[].*import Vector<AccessibleRelation>import Vector<AccessibleRelation>.*import static Vector<AccessibleRelation>.*import AbstractList<AccessibleRelation>import AbstractList<AccessibleRelation>.*import static AbstractList<AccessibleRelation>.*import AbstractCollection<AccessibleRelation>import AbstractCollection<AccessibleRelation>.*import static AbstractCollection<AccessibleRelation>.*import Collection<AccessibleRelation>import Collection<AccessibleRelation>.*import static Collection<AccessibleRelation>.*import Iterable<AccessibleRelation>import Iterable<AccessibleRelation>.*import static Iterable<AccessibleRelation>.*import List<AccessibleRelation>import List<AccessibleRelation>.*import static List<AccessibleRelation>.*import AccessibleStateimport AccessibleState.*import static AccessibleState.*import AccessibleState[]import AccessibleState[].*import static AccessibleState[].*import Vector<AccessibleState>import Vector<AccessibleState>.*import static Vector<AccessibleState>.*import AbstractList<AccessibleState>import AbstractList<AccessibleState>.*import static AbstractList<AccessibleState>.*import AbstractCollection<AccessibleState>import AbstractCollection<AccessibleState>.*import static AbstractCollection<AccessibleState>.*import Collection<AccessibleState>import Collection<AccessibleState>.*import static Collection<AccessibleState>.*import Iterable<AccessibleState>import Iterable<AccessibleState>.*import static Iterable<AccessibleState>.*import List<AccessibleState>import List<AccessibleState>.*import static List<AccessibleState>.*import TypeQualifierimport TypeQualifier.*import static TypeQualifier.*import Filerimport Filer.*import static Filer.*import FileObjectimport FileObject.*import static FileObject.*import Element[]import Element[].*import static Element[].*import JavaFileObjectimport JavaFileObject.*import static JavaFileObject.*import Messagerimport Messager.*import static Messager.*import AnnotationMirrorimport AnnotationMirror.*import static AnnotationMirror.*import AnnotationValueimport AnnotationValue.*import static AnnotationValue.*import ProcessingEnvironmentimport ProcessingEnvironment.*import static ProcessingEnvironment.*import SourceVersionimport SourceVersion.*import static SourceVersion.*import Typesimport Types.*import static Types.*import Elementsimport Elements.*import static Elements.*import RoundEnvironmentimport RoundEnvironment.*import static RoundEnvironment.*import ? extends Elementimport ? extends Element.*import static ? extends Element.*import Set<? extends Element>import Set<? extends Element>.*import static Set<? extends Element>.*import Collection<? extends Element>import Collection<? extends Element>.*import static Collection<? extends Element>.*import Iterable<? extends Element>import Iterable<? extends Element>.*import static Iterable<? extends Element>.*import TypeElementimport TypeElement.*import static TypeElement.*import BadPaddingExceptionimport BadPaddingException.*import static BadPaddingException.*import IllegalBlockSizeExceptionimport IllegalBlockSizeException.*import static IllegalBlockSizeException.*import ShortBufferExceptionimport ShortBufferException.*import static ShortBufferException.*import ExemptionMechanismimport ExemptionMechanism.*import static ExemptionMechanism.*import NoSuchPaddingExceptionimport NoSuchPaddingException.*import static NoSuchPaddingException.*import CipherSpiimport CipherSpi.*import static CipherSpi.*import ExemptionMechanismExceptionimport ExemptionMechanismException.*import static ExemptionMechanismException.*import ExemptionMechanismSpiimport ExemptionMechanismSpi.*import static ExemptionMechanismSpi.*import Destroyableimport Destroyable.*import static Destroyable.*import AnnotatedConstructimport AnnotatedConstruct.*import static AnnotatedConstruct.*import ? extends AnnotationMirrorimport ? extends AnnotationMirror.*import static ? extends AnnotationMirror.*import List<? extends AnnotationMirror>import List<? extends AnnotationMirror>.*import static List<? extends AnnotationMirror>.*import Collection<? extends AnnotationMirror>import Collection<? extends AnnotationMirror>.*import static Collection<? extends AnnotationMirror>.*import Iterable<? extends AnnotationMirror>import Iterable<? extends AnnotationMirror>.*import static Iterable<? extends AnnotationMirror>.*import Enum<SourceVersion>import Enum<SourceVersion>.*import static Enum<SourceVersion>.*import Comparable<SourceVersion>import Comparable<SourceVersion>.*import static Comparable<SourceVersion>.*import Class<SourceVersion>import Class<SourceVersion>.*import static Class<SourceVersion>.*import SourceVersion[]import SourceVersion[].*import static SourceVersion[].*import ExecutableElementimport ExecutableElement.*import static ExecutableElement.*import ? extends ExecutableElementimport ? extends ExecutableElement.*import static ? extends ExecutableElement.*import ? extends AnnotationValueimport ? extends AnnotationValue.*import static ? extends AnnotationValue.*import Map<? extends ExecutableElement,? extends AnnotationValue>import Map<? extends ExecutableElement,? extends AnnotationValue>.*import static Map<? extends ExecutableElement,? extends AnnotationValue>.*import DeclaredTypeimport DeclaredType.*import static DeclaredType.*import AnnotationValueVisitorimport AnnotationValueVisitor.*import static AnnotationValueVisitor.*import AnnotationValueVisitor<>import AnnotationValueVisitor<>.*import static AnnotationValueVisitor<>.*import AnnotationValueVisitor<R,P>import AnnotationValueVisitor<R,P>.*import static AnnotationValueVisitor<R,P>.*import List<? extends AnnotationValue>import List<? extends AnnotationValue>.*import static List<? extends AnnotationValue>.*import Collection<? extends AnnotationValue>import Collection<? extends AnnotationValue>.*import static Collection<? extends AnnotationValue>.*import Iterable<? extends AnnotationValue>import Iterable<? extends AnnotationValue>.*import static Iterable<? extends AnnotationValue>.*import VariableElementimport VariableElement.*import static VariableElement.*import TypeMirrorimport TypeMirror.*import static TypeMirror.*import ElementVisitor<R,P>import ElementVisitor<R,P>.*import static ElementVisitor<R,P>.*import List<? extends Element>import List<? extends Element>.*import static List<? extends Element>.*import Set<Modifier>import Set<Modifier>.*import static Set<Modifier>.*import Collection<Modifier>import Collection<Modifier>.*import static Collection<Modifier>.*import Iterable<Modifier>import Iterable<Modifier>.*import static Iterable<Modifier>.*import ElementKindimport ElementKind.*import static ElementKind.*import Enum<ElementKind>import Enum<ElementKind>.*import static Enum<ElementKind>.*import Comparable<ElementKind>import Comparable<ElementKind>.*import static Comparable<ElementKind>.*import Class<ElementKind>import Class<ElementKind>.*import static Class<ElementKind>.*import ElementKind[]import ElementKind[].*import static ElementKind[].*import TypeParameterElementimport TypeParameterElement.*import static TypeParameterElement.*import PackageElementimport PackageElement.*import static PackageElement.*import Parameterizableimport Parameterizable.*import static Parameterizable.*import ? extends TypeMirrorimport ? extends TypeMirror.*import static ? extends TypeMirror.*import List<? extends TypeMirror>import List<? extends TypeMirror>.*import static List<? extends TypeMirror>.*import Collection<? extends TypeMirror>import Collection<? extends TypeMirror>.*import static Collection<? extends TypeMirror>.*import Iterable<? extends TypeMirror>import Iterable<? extends TypeMirror>.*import static Iterable<? extends TypeMirror>.*import ? extends VariableElementimport ? extends VariableElement.*import static ? extends VariableElement.*import List<? extends VariableElement>import List<? extends VariableElement>.*import static List<? extends VariableElement>.*import Collection<? extends VariableElement>import Collection<? extends VariableElement>.*import static Collection<? extends VariableElement>.*import Iterable<? extends VariableElement>import Iterable<? extends VariableElement>.*import static Iterable<? extends VariableElement>.*import ? extends TypeParameterElementimport ? extends TypeParameterElement.*import static ? extends TypeParameterElement.*import List<? extends TypeParameterElement>import List<? extends TypeParameterElement>.*import static List<? extends TypeParameterElement>.*import Collection<? extends TypeParameterElement>import Collection<? extends TypeParameterElement>.*import static Collection<? extends TypeParameterElement>.*import Iterable<? extends TypeParameterElement>import Iterable<? extends TypeParameterElement>.*import static Iterable<? extends TypeParameterElement>.*import Enum<Modifier>import Enum<Modifier>.*import static Enum<Modifier>.*import Comparable<Modifier>import Comparable<Modifier>.*import static Comparable<Modifier>.*import Class<Modifier>import Class<Modifier>.*import static Class<Modifier>.*import NestingKindimport NestingKind.*import static NestingKind.*import Enum<NestingKind>import Enum<NestingKind>.*import static Enum<NestingKind>.*import Comparable<NestingKind>import Comparable<NestingKind>.*import static Comparable<NestingKind>.*import Class<NestingKind>import Class<NestingKind>.*import static Class<NestingKind>.*import NestingKind[]import NestingKind[].*import static NestingKind[].*import QualifiedNameableimport QualifiedNameable.*import static QualifiedNameable.*import ArrayTypeimport ArrayType.*import static ArrayType.*import ReferenceTypeimport ReferenceType.*import static ReferenceType.*import ErrorTypeimport ErrorType.*import static ErrorType.*import ExecutableTypeimport ExecutableType.*import static ExecutableType.*import ? extends TypeVariableimport ? extends TypeVariable.*import static ? extends TypeVariable.*import List<? extends TypeVariable>import List<? extends TypeVariable>.*import static List<? extends TypeVariable>.*import Collection<? extends TypeVariable>import Collection<? extends TypeVariable>.*import static Collection<? extends TypeVariable>.*import Iterable<? extends TypeVariable>import Iterable<? extends TypeVariable>.*import static Iterable<? extends TypeVariable>.*import IntersectionTypeimport IntersectionType.*import static IntersectionType.*import NoTypeimport NoType.*import static NoType.*import NullTypeimport NullType.*import static NullType.*import PrimitiveTypeimport PrimitiveType.*import static PrimitiveType.*import TypeKindimport TypeKind.*import static TypeKind.*import Enum<TypeKind>import Enum<TypeKind>.*import static Enum<TypeKind>.*import Comparable<TypeKind>import Comparable<TypeKind>.*import static Comparable<TypeKind>.*import Class<TypeKind>import Class<TypeKind>.*import static Class<TypeKind>.*import TypeKind[]import TypeKind[].*import static TypeKind[].*import TypeVisitorimport TypeVisitor.*import static TypeVisitor.*import TypeVisitor<>import TypeVisitor<>.*import static TypeVisitor<>.*import TypeVisitor<R,P>import TypeVisitor<R,P>.*import static TypeVisitor<R,P>.*import UnionTypeimport UnionType.*import static UnionType.*import TypeMirror[]import TypeMirror[].*import static TypeMirror[].*import TrustManagerimport TrustManager.*import static TrustManager.*import DestroyFailedExceptionimport DestroyFailedException.*import static DestroyFailedException.*import Set<Principal>import Set<Principal>.*import static Set<Principal>.*import Collection<Principal>import Collection<Principal>.*import static Collection<Principal>.*import Iterable<Principal>import Iterable<Principal>.*import static Iterable<Principal>.*import PrivilegedExceptionAction<>import PrivilegedExceptionAction<>.*import static PrivilegedExceptionAction<>.*import PrivilegedExceptionAction<T>import PrivilegedExceptionAction<T>.*import static PrivilegedExceptionAction<T>.*import PrivilegedAction<>import PrivilegedAction<>.*import static PrivilegedAction<>.*import PrivilegedAction<T>import PrivilegedAction<T>.*import static PrivilegedAction<T>.*import ? extends Principalimport ? extends Principal.*import static ? extends Principal.*import Set<? extends Principal>import Set<? extends Principal>.*import static Set<? extends Principal>.*import Collection<? extends Principal>import Collection<? extends Principal>.*import static Collection<? extends Principal>.*import Iterable<? extends Principal>import Iterable<? extends Principal>.*import static Iterable<? extends Principal>.*import Set<?>import Set<?>.*import static Set<?>.*import X500Nameimport X500Name.*import static X500Name.*import AsyncContextimport AsyncContext.*import static AsyncContext.*import AsyncListenerimport AsyncListener.*import static AsyncListener.*import AsyncEventimport AsyncEvent.*import static AsyncEvent.*import DispatcherTypeimport DispatcherType.*import static DispatcherType.*import Enum<DispatcherType>import Enum<DispatcherType>.*import static Enum<DispatcherType>.*import Comparable<DispatcherType>import Comparable<DispatcherType>.*import static Comparable<DispatcherType>.*import Class<DispatcherType>import Class<DispatcherType>.*import static Class<DispatcherType>.*import DispatcherType[]import DispatcherType[].*import static DispatcherType[].*import FilterChainimport FilterChain.*import static FilterChain.*import Dynamicimport Dynamic.*import static Dynamic.*import FilterRegistrationimport FilterRegistration.*import static FilterRegistration.*import Registrationimport Registration.*import static Registration.*import EnumSet<DispatcherType>import EnumSet<DispatcherType>.*import static EnumSet<DispatcherType>.*import AbstractSet<DispatcherType>import AbstractSet<DispatcherType>.*import static AbstractSet<DispatcherType>.*import AbstractCollection<DispatcherType>import AbstractCollection<DispatcherType>.*import static AbstractCollection<DispatcherType>.*import Collection<DispatcherType>import Collection<DispatcherType>.*import static Collection<DispatcherType>.*import Iterable<DispatcherType>import Iterable<DispatcherType>.*import static Iterable<DispatcherType>.*import Set<DispatcherType>import Set<DispatcherType>.*import static Set<DispatcherType>.*import GenericServletimport GenericServlet.*import static GenericServlet.*import Servletimport Servlet.*import static Servlet.*import ServletConfigimport ServletConfig.*import static ServletConfig.*import HttpConstraintElementimport HttpConstraintElement.*import static HttpConstraintElement.*import TransportGuaranteeimport TransportGuarantee.*import static TransportGuarantee.*import EmptyRoleSemanticimport EmptyRoleSemantic.*import static EmptyRoleSemantic.*import HttpMethodConstraintElementimport HttpMethodConstraintElement.*import static HttpMethodConstraintElement.*import MultipartConfigElementimport MultipartConfigElement.*import static MultipartConfigElement.*import MultipartConfigimport MultipartConfig.*import static MultipartConfig.*import ReadListenerimport ReadListener.*import static ReadListener.*import RequestDispatcherimport RequestDispatcher.*import static RequestDispatcher.*import JspConfigDescriptorimport JspConfigDescriptor.*import static JspConfigDescriptor.*import ? extends EventListenerimport ? extends EventListener.*import static ? extends EventListener.*import Class<? extends EventListener>import Class<? extends EventListener>.*import static Class<? extends EventListener>.*import SessionTrackingModeimport SessionTrackingMode.*import static SessionTrackingMode.*import Set<SessionTrackingMode>import Set<SessionTrackingMode>.*import static Set<SessionTrackingMode>.*import Collection<SessionTrackingMode>import Collection<SessionTrackingMode>.*import static Collection<SessionTrackingMode>.*import Iterable<SessionTrackingMode>import Iterable<SessionTrackingMode>.*import static Iterable<SessionTrackingMode>.*import SessionCookieConfigimport SessionCookieConfig.*import static SessionCookieConfig.*import ? extends FilterRegistrationimport ? extends FilterRegistration.*import static ? extends FilterRegistration.*import Map<String,? extends FilterRegistration>import Map<String,? extends FilterRegistration>.*import static Map<String,? extends FilterRegistration>.*import ? extends Filterimport ? extends Filter.*import static ? extends Filter.*import Class<? extends Filter>import Class<? extends Filter>.*import static Class<? extends Filter>.*import ServletRegistrationimport ServletRegistration.*import static ServletRegistration.*import ? extends ServletRegistrationimport ? extends ServletRegistration.*import static ? extends ServletRegistration.*import Map<String,? extends ServletRegistration>import Map<String,? extends ServletRegistration>.*import static Map<String,? extends ServletRegistration>.*import ? extends Servletimport ? extends Servlet.*import static ? extends Servlet.*import Class<? extends Servlet>import Class<? extends Servlet>.*import static Class<? extends Servlet>.*import Enumeration<Servlet>import Enumeration<Servlet>.*import static Enumeration<Servlet>.*import ServletContextEventimport ServletContextEvent.*import static ServletContextEvent.*import ServletContextListenerimport ServletContextListener.*import static ServletContextListener.*import ServletOutputStreamimport ServletOutputStream.*import static ServletOutputStream.*import WriteListenerimport WriteListener.*import static WriteListener.*import ServletSecurityElementimport ServletSecurityElement.*import static ServletSecurityElement.*import Enumeration<Locale>import Enumeration<Locale>.*import static Enumeration<Locale>.*import Map<String,String[]>import Map<String,String[]>.*import static Map<String,String[]>.*import ServletRequestWrapperimport ServletRequestWrapper.*import static ServletRequestWrapper.*import ServletResponseWrapperimport ServletResponseWrapper.*import static ServletResponseWrapper.*import Collection<HttpMethodConstraintElement>import Collection<HttpMethodConstraintElement>.*import static Collection<HttpMethodConstraintElement>.*import Iterable<HttpMethodConstraintElement>import Iterable<HttpMethodConstraintElement>.*import static Iterable<HttpMethodConstraintElement>.*import ServletSecurityimport ServletSecurity.*import static ServletSecurity.*import Enum<SessionTrackingMode>import Enum<SessionTrackingMode>.*import static Enum<SessionTrackingMode>.*import Comparable<SessionTrackingMode>import Comparable<SessionTrackingMode>.*import static Comparable<SessionTrackingMode>.*import Class<SessionTrackingMode>import Class<SessionTrackingMode>.*import static Class<SessionTrackingMode>.*import SessionTrackingMode[]import SessionTrackingMode[].*import static SessionTrackingMode[].*import HttpConstraintimport HttpConstraint.*import static HttpConstraint.*import HttpMethodConstraintimport HttpMethodConstraint.*import static HttpMethodConstraint.*import Enum<EmptyRoleSemantic>import Enum<EmptyRoleSemantic>.*import static Enum<EmptyRoleSemantic>.*import Comparable<EmptyRoleSemantic>import Comparable<EmptyRoleSemantic>.*import static Comparable<EmptyRoleSemantic>.*import Class<EmptyRoleSemantic>import Class<EmptyRoleSemantic>.*import static Class<EmptyRoleSemantic>.*import EmptyRoleSemantic[]import EmptyRoleSemantic[].*import static EmptyRoleSemantic[].*import Enum<TransportGuarantee>import Enum<TransportGuarantee>.*import static Enum<TransportGuarantee>.*import Comparable<TransportGuarantee>import Comparable<TransportGuarantee>.*import static Comparable<TransportGuarantee>.*import Class<TransportGuarantee>import Class<TransportGuarantee>.*import static Class<TransportGuarantee>.*import TransportGuarantee[]import TransportGuarantee[].*import static TransportGuarantee[].*import HttpMethodConstraint[]import HttpMethodConstraint[].*import static HttpMethodConstraint[].*import JspPropertyGroupDescriptorimport JspPropertyGroupDescriptor.*import static JspPropertyGroupDescriptor.*import Collection<JspPropertyGroupDescriptor>import Collection<JspPropertyGroupDescriptor>.*import static Collection<JspPropertyGroupDescriptor>.*import Iterable<JspPropertyGroupDescriptor>import Iterable<JspPropertyGroupDescriptor>.*import static Iterable<JspPropertyGroupDescriptor>.*import TaglibDescriptorimport TaglibDescriptor.*import static TaglibDescriptor.*import Collection<TaglibDescriptor>import Collection<TaglibDescriptor>.*import static Collection<TaglibDescriptor>.*import Iterable<TaglibDescriptor>import Iterable<TaglibDescriptor>.*import static Iterable<TaglibDescriptor>.*import HttpServletimport HttpServlet.*import static HttpServlet.*import HttpUpgradeHandlerimport HttpUpgradeHandler.*import static HttpUpgradeHandler.*import Partimport Part.*import static Part.*import Collection<Part>import Collection<Part>.*import static Collection<Part>.*import Iterable<Part>import Iterable<Part>.*import static Iterable<Part>.*import HttpSessionimport HttpSession.*import static HttpSession.*import HttpServletRequestWrapperimport HttpServletRequestWrapper.*import static HttpServletRequestWrapper.*import HttpServletResponseWrapperimport HttpServletResponseWrapper.*import static HttpServletResponseWrapper.*import HttpSessionContextimport HttpSessionContext.*import static HttpSessionContext.*import HttpSessionAttributeListenerimport HttpSessionAttributeListener.*import static HttpSessionAttributeListener.*import HttpSessionBindingEventimport HttpSessionBindingEvent.*import static HttpSessionBindingEvent.*import HttpSessionEventimport HttpSessionEvent.*import static HttpSessionEvent.*import HttpSessionIdListenerimport HttpSessionIdListener.*import static HttpSessionIdListener.*import HttpSessionListenerimport HttpSessionListener.*import static HttpSessionListener.*import Diagnosticimport Diagnostic.*import static Diagnostic.*import Diagnostic<>import Diagnostic<>.*import static Diagnostic<>.*import JavaFileManagerimport JavaFileManager.*import static JavaFileManager.*import OptionCheckerimport OptionChecker.*import static OptionChecker.*import Set<Kind>import Set<Kind>.*import static Set<Kind>.*import Collection<Kind>import Collection<Kind>.*import static Collection<Kind>.*import Iterable<Kind>import Iterable<Kind>.*import static Iterable<Kind>.*import Iterable<JavaFileObject>import Iterable<JavaFileObject>.*import static Iterable<JavaFileObject>.*import ExtensionComponentSet[]import ExtensionComponentSet[].*import static ExtensionComponentSet[].*import ? extends ExtensionComponentSetimport ? extends ExtensionComponentSet.*import static ? extends ExtensionComponentSet.*import Collection<? extends ExtensionComponentSet>import Collection<? extends ExtensionComponentSet>.*import static Collection<? extends ExtensionComponentSet>.*import Iterable<? extends ExtensionComponentSet>import Iterable<? extends ExtensionComponentSet>.*import static Iterable<? extends ExtensionComponentSet>.*import Enum<YesNoMaybe>import Enum<YesNoMaybe>.*import static Enum<YesNoMaybe>.*import Comparable<YesNoMaybe>import Comparable<YesNoMaybe>.*import static Comparable<YesNoMaybe>.*import Class<YesNoMaybe>import Class<YesNoMaybe>.*import static Class<YesNoMaybe>.*import YesNoMaybe[]import YesNoMaybe[].*import static YesNoMaybe[].*import AbstractDescribableImpl<BuildDiscarder>import AbstractDescribableImpl<BuildDiscarder>.*import static AbstractDescribableImpl<BuildDiscarder>.*import Describable<BuildDiscarder>import Describable<BuildDiscarder>.*import static Describable<BuildDiscarder>.*import Descriptor<BuildDiscarder>import Descriptor<BuildDiscarder>.*import static Descriptor<BuildDiscarder>.*import BuildDiscarderDescriptorimport BuildDiscarderDescriptor.*import static BuildDiscarderDescriptor.*import Class<BuildDiscarder>import Class<BuildDiscarder>.*import static Class<BuildDiscarder>.*import ? extends BuildDiscarderimport ? extends BuildDiscarder.*import static ? extends BuildDiscarder.*import Class<? extends BuildDiscarder>import Class<? extends BuildDiscarder>.*import static Class<? extends BuildDiscarder>.*import DescriptorExtensionList<BuildDiscarder,BuildDiscarderDescriptor>import DescriptorExtensionList<BuildDiscarder,BuildDiscarderDescriptor>.*import static DescriptorExtensionList<BuildDiscarder,BuildDiscarderDescriptor>.*import ExtensionList<BuildDiscarderDescriptor>import ExtensionList<BuildDiscarderDescriptor>.*import static ExtensionList<BuildDiscarderDescriptor>.*import AbstractList<BuildDiscarderDescriptor>import AbstractList<BuildDiscarderDescriptor>.*import static AbstractList<BuildDiscarderDescriptor>.*import AbstractCollection<BuildDiscarderDescriptor>import AbstractCollection<BuildDiscarderDescriptor>.*import static AbstractCollection<BuildDiscarderDescriptor>.*import Collection<BuildDiscarderDescriptor>import Collection<BuildDiscarderDescriptor>.*import static Collection<BuildDiscarderDescriptor>.*import Iterable<BuildDiscarderDescriptor>import Iterable<BuildDiscarderDescriptor>.*import static Iterable<BuildDiscarderDescriptor>.*import List<BuildDiscarderDescriptor>import List<BuildDiscarderDescriptor>.*import static List<BuildDiscarderDescriptor>.*import ModifiableTopLevelItemGroupimport ModifiableTopLevelItemGroup.*import static ModifiableTopLevelItemGroup.*import AbstractDescribableImpl<IdStrategy>import AbstractDescribableImpl<IdStrategy>.*import static AbstractDescribableImpl<IdStrategy>.*import Describable<IdStrategy>import Describable<IdStrategy>.*import static Describable<IdStrategy>.*import Descriptor<IdStrategy>import Descriptor<IdStrategy>.*import static Descriptor<IdStrategy>.*import ToDoubleFunction<? super String>import ToDoubleFunction<? super String>.*import static ToDoubleFunction<? super String>.*import ToLongFunction<? super String>import ToLongFunction<? super String>.*import static ToLongFunction<? super String>.*import ToIntFunction<? super String>import ToIntFunction<? super String>.*import static ToIntFunction<? super String>.*import Function<? super String,? extends U>import Function<? super String,? extends U>.*import static Function<? super String,? extends U>.*import IdStrategyDescriptorimport IdStrategyDescriptor.*import static IdStrategyDescriptor.*import DescriptorExtensionList<IdStrategy,IdStrategyDescriptor>import DescriptorExtensionList<IdStrategy,IdStrategyDescriptor>.*import static DescriptorExtensionList<IdStrategy,IdStrategyDescriptor>.*import ExtensionList<IdStrategyDescriptor>import ExtensionList<IdStrategyDescriptor>.*import static ExtensionList<IdStrategyDescriptor>.*import AbstractList<IdStrategyDescriptor>import AbstractList<IdStrategyDescriptor>.*import static AbstractList<IdStrategyDescriptor>.*import AbstractCollection<IdStrategyDescriptor>import AbstractCollection<IdStrategyDescriptor>.*import static AbstractCollection<IdStrategyDescriptor>.*import Collection<IdStrategyDescriptor>import Collection<IdStrategyDescriptor>.*import static Collection<IdStrategyDescriptor>.*import Iterable<IdStrategyDescriptor>import Iterable<IdStrategyDescriptor>.*import static Iterable<IdStrategyDescriptor>.*import List<IdStrategyDescriptor>import List<IdStrategyDescriptor>.*import static List<IdStrategyDescriptor>.*import Class<IdStrategy>import Class<IdStrategy>.*import static Class<IdStrategy>.*import ? extends IdStrategyimport ? extends IdStrategy.*import static ? extends IdStrategy.*import Class<? extends IdStrategy>import Class<? extends IdStrategy>.*import static Class<? extends IdStrategy>.*import DescribableList<Cloud,Descriptor<Cloud>>import DescribableList<Cloud,Descriptor<Cloud>>.*import static DescribableList<Cloud,Descriptor<Cloud>>.*import PersistedList<Cloud>import PersistedList<Cloud>.*import static PersistedList<Cloud>.*import AbstractList<Cloud>import AbstractList<Cloud>.*import static AbstractList<Cloud>.*import AbstractCollection<Cloud>import AbstractCollection<Cloud>.*import static AbstractCollection<Cloud>.*import List<Cloud>import List<Cloud>.*import static List<Cloud>.*import Spliterator<Cloud>import Spliterator<Cloud>.*import static Spliterator<Cloud>.*import ? super Cloudimport ? super Cloud.*import static ? super Cloud.*import Consumer<? super Cloud>import Consumer<? super Cloud>.*import static Consumer<? super Cloud>.*import Iterator<Cloud>import Iterator<Cloud>.*import static Iterator<Cloud>.*import Stream<Cloud>import Stream<Cloud>.*import static Stream<Cloud>.*import BaseStream<Cloud,Stream<Cloud>>import BaseStream<Cloud,Stream<Cloud>>.*import static BaseStream<Cloud,Stream<Cloud>>.*import Predicate<? super Cloud>import Predicate<? super Cloud>.*import static Predicate<? super Cloud>.*import ? extends Cloudimport ? extends Cloud.*import static ? extends Cloud.*import Collection<? extends Cloud>import Collection<? extends Cloud>.*import static Collection<? extends Cloud>.*import Iterable<? extends Cloud>import Iterable<? extends Cloud>.*import static Iterable<? extends Cloud>.*import ListIterator<Cloud>import ListIterator<Cloud>.*import static ListIterator<Cloud>.*import Comparator<? super Cloud>import Comparator<? super Cloud>.*import static Comparator<? super Cloud>.*import UnaryOperator<Cloud>import UnaryOperator<Cloud>.*import static UnaryOperator<Cloud>.*import Function<Cloud,Cloud>import Function<Cloud,Cloud>.*import static Function<Cloud,Cloud>.*import Collection<? super Cloud>import Collection<? super Cloud>.*import static Collection<? super Cloud>.*import Iterable<? super Cloud>import Iterable<? super Cloud>.*import static Iterable<? super Cloud>.*import Class<? extends Cloud>import Class<? extends Cloud>.*import static Class<? extends Cloud>.*import Cloud[]import Cloud[].*import static Cloud[].*import ? extends Descriptor<Cloud>import ? extends Descriptor<Cloud>.*import static ? extends Descriptor<Cloud>.*import Collection<? extends Descriptor<Cloud>>import Collection<? extends Descriptor<Cloud>>.*import static Collection<? extends Descriptor<Cloud>>.*import Iterable<? extends Descriptor<Cloud>>import Iterable<? extends Descriptor<Cloud>>.*import static Iterable<? extends Descriptor<Cloud>>.*import List<? extends Descriptor<Cloud>>import List<? extends Descriptor<Cloud>>.*import static List<? extends Descriptor<Cloud>>.*import Map<Descriptor<Cloud>,Cloud>import Map<Descriptor<Cloud>,Cloud>.*import static Map<Descriptor<Cloud>,Cloud>.*import JenkinsHolderimport JenkinsHolder.*import static JenkinsHolder.*import Future<DependencyGraph>import Future<DependencyGraph>.*import static Future<DependencyGraph>.*import JellyExceptionimport JellyException.*import static JellyException.*import Map<String,Map<String,String>>import Map<String,Map<String,String>>.*import static Map<String,Map<String,String>>.*import HttpRedirectimport HttpRedirect.*import static HttpRedirect.*import ProjectNamingStrategyimport ProjectNamingStrategy.*import static ProjectNamingStrategy.*import List<? extends Node>import List<? extends Node>.*import static List<? extends Node>.*import Nodesimport Nodes.*import static Nodes.*import ? extends JDKimport ? extends JDK.*import static ? extends JDK.*import Collection<? extends JDK>import Collection<? extends JDK>.*import static Collection<? extends JDK>.*import Iterable<? extends JDK>import Iterable<? extends JDK>.*import static Iterable<? extends JDK>.*import List<JDK>import List<JDK>.*import static List<JDK>.*import Collection<JDK>import Collection<JDK>.*import static Collection<JDK>.*import Iterable<JDK>import Iterable<JDK>.*import static Iterable<JDK>.*import List<Project<>>import List<Project<>>.*import static List<Project<>>.*import Collection<Project<>>import Collection<Project<>>.*import static Collection<Project<>>.*import Iterable<Project<>>import Iterable<Project<>>.*import static Iterable<Project<>>.*import Map<String,TopLevelItem>import Map<String,TopLevelItem>.*import static Map<String,TopLevelItem>.*import List<P>import List<P>.*import static List<P>.*import Collection<P>import Collection<P>.*import static Collection<P>.*import Iterable<P>import Iterable<P>.*import static Iterable<P>.*import CopyOnWriteList<SCMListener>import CopyOnWriteList<SCMListener>.*import static CopyOnWriteList<SCMListener>.*import Iterable<SCMListener>import Iterable<SCMListener>.*import static Iterable<SCMListener>.*import AdjunctManagerimport AdjunctManager.*import static AdjunctManager.*import List<MenuItem>import List<MenuItem>.*import static List<MenuItem>.*import Collection<MenuItem>import Collection<MenuItem>.*import static Collection<MenuItem>.*import Iterable<MenuItem>import Iterable<MenuItem>.*import static Iterable<MenuItem>.*import ModifiableItemGroup<TopLevelItem>import ModifiableItemGroup<TopLevelItem>.*import static ModifiableItemGroup<TopLevelItem>.*import ParameterizedJobMixInimport ParameterizedJobMixIn.*import static ParameterizedJobMixIn.*import ParameterizedJobMixIn<>import ParameterizedJobMixIn<>.*import static ParameterizedJobMixIn<>.*import QueueTaskFuture<RunT>import QueueTaskFuture<RunT>.*import static QueueTaskFuture<RunT>.*import Future<RunT>import Future<RunT>.*import static Future<RunT>.*import Message<ParameterizedJob>import Message<ParameterizedJob>.*import static Message<ParameterizedJob>.*import ProjectNamingStrategyDescriptorimport ProjectNamingStrategyDescriptor.*import static ProjectNamingStrategyDescriptor.*import Descriptor<ProjectNamingStrategy>import Descriptor<ProjectNamingStrategy>.*import static Descriptor<ProjectNamingStrategy>.*import Class<ProjectNamingStrategy>import Class<ProjectNamingStrategy>.*import static Class<ProjectNamingStrategy>.*import ? extends ProjectNamingStrategyimport ? extends ProjectNamingStrategy.*import static ? extends ProjectNamingStrategy.*import Class<? extends ProjectNamingStrategy>import Class<? extends ProjectNamingStrategy>.*import static Class<? extends ProjectNamingStrategy>.*import Describable<ProjectNamingStrategy>import Describable<ProjectNamingStrategy>.*import static Describable<ProjectNamingStrategy>.*import DescriptorExtensionList<ProjectNamingStrategy,ProjectNamingStrategyDescriptor>import DescriptorExtensionList<ProjectNamingStrategy,ProjectNamingStrategyDescriptor>.*import static DescriptorExtensionList<ProjectNamingStrategy,ProjectNamingStrategyDescriptor>.*import ExtensionList<ProjectNamingStrategyDescriptor>import ExtensionList<ProjectNamingStrategyDescriptor>.*import static ExtensionList<ProjectNamingStrategyDescriptor>.*import AbstractList<ProjectNamingStrategyDescriptor>import AbstractList<ProjectNamingStrategyDescriptor>.*import static AbstractList<ProjectNamingStrategyDescriptor>.*import AbstractCollection<ProjectNamingStrategyDescriptor>import AbstractCollection<ProjectNamingStrategyDescriptor>.*import static AbstractCollection<ProjectNamingStrategyDescriptor>.*import Collection<ProjectNamingStrategyDescriptor>import Collection<ProjectNamingStrategyDescriptor>.*import static Collection<ProjectNamingStrategyDescriptor>.*import Iterable<ProjectNamingStrategyDescriptor>import Iterable<ProjectNamingStrategyDescriptor>.*import static Iterable<ProjectNamingStrategyDescriptor>.*import List<ProjectNamingStrategyDescriptor>import List<ProjectNamingStrategyDescriptor>.*import static List<ProjectNamingStrategyDescriptor>.*import Enum<Direction>import Enum<Direction>.*import static Enum<Direction>.*import Comparable<Direction>import Comparable<Direction>.*import static Comparable<Direction>.*import Class<Direction>import Class<Direction>.*import static Class<Direction>.*import Direction[]import Direction[].*import static Direction[].*import LazyLoadingRun<JobT,RunT>import LazyLoadingRun<JobT,RunT>.*import static LazyLoadingRun<JobT,RunT>.*import LazyLoadingJob<JobT,RunT>import LazyLoadingJob<JobT,RunT>.*import static LazyLoadingJob<JobT,RunT>.*import Class<RunT>import Class<RunT>.*import static Class<RunT>.*import RunMap<RunT>import RunMap<RunT>.*import static RunMap<RunT>.*import AbstractLazyLoadRunMap<RunT>import AbstractLazyLoadRunMap<RunT>.*import static AbstractLazyLoadRunMap<RunT>.*import AbstractMap<Integer,RunT>import AbstractMap<Integer,RunT>.*import static AbstractMap<Integer,RunT>.*import AbstractDescribableImpl<GlobalSettingsProvider>import AbstractDescribableImpl<GlobalSettingsProvider>.*import static AbstractDescribableImpl<GlobalSettingsProvider>.*import Describable<GlobalSettingsProvider>import Describable<GlobalSettingsProvider>.*import static Describable<GlobalSettingsProvider>.*import Descriptor<GlobalSettingsProvider>import Descriptor<GlobalSettingsProvider>.*import static Descriptor<GlobalSettingsProvider>.*import AbstractDescribableImpl<SettingsProvider>import AbstractDescribableImpl<SettingsProvider>.*import static AbstractDescribableImpl<SettingsProvider>.*import Describable<SettingsProvider>import Describable<SettingsProvider>.*import static Describable<SettingsProvider>.*import Descriptor<SettingsProvider>import Descriptor<SettingsProvider>.*import static Descriptor<SettingsProvider>.*import AbstractDescribableImpl<SCMCheckoutStrategy>import AbstractDescribableImpl<SCMCheckoutStrategy>.*import static AbstractDescribableImpl<SCMCheckoutStrategy>.*import Describable<SCMCheckoutStrategy>import Describable<SCMCheckoutStrategy>.*import static Describable<SCMCheckoutStrategy>.*import Descriptor<SCMCheckoutStrategy>import Descriptor<SCMCheckoutStrategy>.*import static Descriptor<SCMCheckoutStrategy>.*import AbstractBuildExecution<>import AbstractBuildExecution<>.*import static AbstractBuildExecution<>.*import Class<SCMCheckoutStrategy>import Class<SCMCheckoutStrategy>.*import static Class<SCMCheckoutStrategy>.*import ? extends SCMCheckoutStrategyimport ? extends SCMCheckoutStrategy.*import static ? extends SCMCheckoutStrategy.*import Class<? extends SCMCheckoutStrategy>import Class<? extends SCMCheckoutStrategy>.*import static Class<? extends SCMCheckoutStrategy>.*import DescriptorExtensionList<SCMCheckoutStrategy,SCMCheckoutStrategyDescriptor>import DescriptorExtensionList<SCMCheckoutStrategy,SCMCheckoutStrategyDescriptor>.*import static DescriptorExtensionList<SCMCheckoutStrategy,SCMCheckoutStrategyDescriptor>.*import ExtensionList<SCMCheckoutStrategyDescriptor>import ExtensionList<SCMCheckoutStrategyDescriptor>.*import static ExtensionList<SCMCheckoutStrategyDescriptor>.*import AbstractList<SCMCheckoutStrategyDescriptor>import AbstractList<SCMCheckoutStrategyDescriptor>.*import static AbstractList<SCMCheckoutStrategyDescriptor>.*import AbstractCollection<SCMCheckoutStrategyDescriptor>import AbstractCollection<SCMCheckoutStrategyDescriptor>.*import static AbstractCollection<SCMCheckoutStrategyDescriptor>.*import ExtensionList<SlaveSystemInfo>import ExtensionList<SlaveSystemInfo>.*import static ExtensionList<SlaveSystemInfo>.*import AbstractList<SlaveSystemInfo>import AbstractList<SlaveSystemInfo>.*import static AbstractList<SlaveSystemInfo>.*import AbstractCollection<SlaveSystemInfo>import AbstractCollection<SlaveSystemInfo>.*import static AbstractCollection<SlaveSystemInfo>.*import Set<TrustAnchor>import Set<TrustAnchor>.*import static Set<TrustAnchor>.*import Collection<TrustAnchor>import Collection<TrustAnchor>.*import static Collection<TrustAnchor>.*import Iterable<TrustAnchor>import Iterable<TrustAnchor>.*import static Iterable<TrustAnchor>.*import JavaScriptMethodimport JavaScriptMethod.*import static JavaScriptMethod.*import Comparable<VirtualFile>import Comparable<VirtualFile>.*import static Comparable<VirtualFile>.*import VirtualFile[]import VirtualFile[].*import static VirtualFile[].*import AssertionFailedErrorimport AssertionFailedError.*import static AssertionFailedError.*import Protectableimport Protectable.*import static Protectable.*import TestResultimport TestResult.*import static TestResult.*import TestFailureimport TestFailure.*import static TestFailure.*import TestListenerimport TestListener.*import static TestListener.*import Enumeration<TestFailure>import Enumeration<TestFailure>.*import static Enumeration<TestFailure>.*import List<TestListener>import List<TestListener>.*import static List<TestListener>.*import Collection<TestListener>import Collection<TestListener>.*import static Collection<TestListener>.*import Iterable<TestListener>import Iterable<TestListener>.*import static Iterable<TestListener>.*import List<TestFailure>import List<TestFailure>.*import static List<TestFailure>.*import Collection<TestFailure>import Collection<TestFailure>.*import static Collection<TestFailure>.*import Iterable<TestFailure>import Iterable<TestFailure>.*import static Iterable<TestFailure>.*import Enumeration<Test>import Enumeration<Test>.*import static Enumeration<Test>.*import ? extends TestCaseimport ? extends TestCase.*import static ? extends TestCase.*import Class<? extends TestCase>import Class<? extends TestCase>.*import static Class<? extends TestCase>.*import Class<? extends TestCase>[]import Class<? extends TestCase>[].*import static Class<? extends TestCase>[].*import Delegateimport Delegate.*import static Delegate.*import RecordPhaseimport RecordPhase.*import static RecordPhase.*import NotNullimport NotNull.*import static NotNull.*import Delegate<>import Delegate<>.*import static Delegate<>.*import Delegate<? super T>import Delegate<? super T>.*import static Delegate<? super T>.*import SelfDescribingimport SelfDescribing.*import static SelfDescribing.*import TestOnlyPhaseimport TestOnlyPhase.*import static TestOnlyPhase.*import MissingInvocationimport MissingInvocation.*import static MissingInvocation.*import UnexpectedInvocationimport UnexpectedInvocation.*import static UnexpectedInvocation.*import BaseVerificationPhaseimport BaseVerificationPhase.*import static BaseVerificationPhase.*import VerifiedExpectationimport VerifiedExpectation.*import static VerifiedExpectation.*import Expectationimport Expectation.*import static Expectation.*import RecordAndReplayExecutionimport RecordAndReplayExecution.*import static RecordAndReplayExecution.*import List<Expectation>import List<Expectation>.*import static List<Expectation>.*import Collection<Expectation>import Collection<Expectation>.*import static Collection<Expectation>.*import Iterable<Expectation>import Iterable<Expectation>.*import static Iterable<Expectation>.*import ExpectedInvocationimport ExpectedInvocation.*import static ExpectedInvocation.*import InvocationResultsimport InvocationResults.*import static InvocationResults.*import InvocationConstraintsimport InvocationConstraints.*import static InvocationConstraints.*import FailureStateimport FailureState.*import static FailureState.*import Phaseimport Phase.*import static Phase.*import PhasedExecutionStateimport PhasedExecutionState.*import static PhasedExecutionState.*import List<VerifiedExpectation>import List<VerifiedExpectation>.*import static List<VerifiedExpectation>.*import Collection<VerifiedExpectation>import Collection<VerifiedExpectation>.*import static Collection<VerifiedExpectation>.*import Iterable<VerifiedExpectation>import Iterable<VerifiedExpectation>.*import static Iterable<VerifiedExpectation>.*import ArgumentMatcherimport ArgumentMatcher.*import static ArgumentMatcher.*import ArgumentMatcher<?>import ArgumentMatcher<?>.*import static ArgumentMatcher<?>.*import List<ArgumentMatcher<?>>import List<ArgumentMatcher<?>>.*import static List<ArgumentMatcher<?>>.*import Collection<ArgumentMatcher<?>>import Collection<ArgumentMatcher<?>>.*import static Collection<ArgumentMatcher<?>>.*import Iterable<ArgumentMatcher<?>>import Iterable<ArgumentMatcher<?>>.*import static Iterable<ArgumentMatcher<?>>.*import Mimport M.*import static M.*import ArgumentMismatchimport ArgumentMismatch.*import static ArgumentMismatch.*import InvocationArgumentsimport InvocationArguments.*import static InvocationArguments.*import Iterator<?>import Iterator<?>.*import static Iterator<?>.*import Delegate<?>import Delegate<?>.*import static Delegate<?>.*import WritingVisitorimport WritingVisitor.*import static WritingVisitor.*import AbstractJSONimport AbstractJSON.*import static AbstractJSON.*import JsonConfigimport JsonConfig.*import static JsonConfig.*import JSONExceptionimport JSONException.*import static JSONException.*import Spliterator<Object>import Spliterator<Object>.*import static Spliterator<Object>.*import Consumer<? super Object>import Consumer<? super Object>.*import static Consumer<? super Object>.*import Iterator<Object>import Iterator<Object>.*import static Iterator<Object>.*import Stream<Object>import Stream<Object>.*import static Stream<Object>.*import BaseStream<Object,Stream<Object>>import BaseStream<Object,Stream<Object>>.*import static BaseStream<Object,Stream<Object>>.*import Predicate<? super Object>import Predicate<? super Object>.*import static Predicate<? super Object>.*import ListIterator<Object>import ListIterator<Object>.*import static ListIterator<Object>.*import Comparator<? super Object>import Comparator<? super Object>.*import static Comparator<? super Object>.*import UnaryOperator<Object>import UnaryOperator<Object>.*import static UnaryOperator<Object>.*import Function<Object,Object>import Function<Object,Object>.*import static Function<Object,Object>.*import JSONNullimport JSONNull.*import static JSONNull.*import NestableRuntimeExceptionimport NestableRuntimeException.*import static NestableRuntimeException.*import PropertySetStrategyimport PropertySetStrategy.*import static PropertySetStrategy.*import PropertyNameProcessorMatcherimport PropertyNameProcessorMatcher.*import static PropertyNameProcessorMatcher.*import PropertyExclusionClassMatcherimport PropertyExclusionClassMatcher.*import static PropertyExclusionClassMatcher.*import NewBeanInstanceStrategyimport NewBeanInstanceStrategy.*import static NewBeanInstanceStrategy.*import JsonValueProcessorMatcherimport JsonValueProcessorMatcher.*import static JsonValueProcessorMatcher.*import PropertyFilterimport PropertyFilter.*import static PropertyFilter.*import JsonBeanProcessorMatcherimport JsonBeanProcessorMatcher.*import static JsonBeanProcessorMatcher.*import JavaIdentifierTransformerimport JavaIdentifierTransformer.*import static JavaIdentifierTransformer.*import DefaultValueProcessorMatcherimport DefaultValueProcessorMatcher.*import static DefaultValueProcessorMatcher.*import CycleDetectionStrategyimport CycleDetectionStrategy.*import static CycleDetectionStrategy.*import JsonEventListenerimport JsonEventListener.*import static JsonEventListener.*import PropertyNameProcessorimport PropertyNameProcessor.*import static PropertyNameProcessor.*import JsonValueProcessorimport JsonValueProcessor.*import static JsonValueProcessor.*import JsonBeanProcessorimport JsonBeanProcessor.*import static JsonBeanProcessor.*import DefaultValueProcessorimport DefaultValueProcessor.*import static DefaultValueProcessor.*import BaseFunctionimport BaseFunction.*import static BaseFunction.*import IdScriptableObjectimport IdScriptableObject.*import static IdScriptableObject.*import IdFunctionObjectimport IdFunctionObject.*import static IdFunctionObject.*import ClassShutterimport ClassShutter.*import static ClassShutter.*import CompilerEnvironsimport CompilerEnvirons.*import static CompilerEnvirons.*import ConstPropertiesimport ConstProperties.*import static ConstProperties.*import ClassShutterSetterimport ClassShutterSetter.*import static ClassShutterSetter.*import SecurityControllerimport SecurityController.*import static SecurityController.*import RegExpProxyimport RegExpProxy.*import static RegExpProxy.*import Evaluatorimport Evaluator.*import static Evaluator.*import GeneratedClassLoaderimport GeneratedClassLoader.*import static GeneratedClassLoader.*import DebuggableScriptimport DebuggableScript.*import static DebuggableScript.*import WrapFactoryimport WrapFactory.*import static WrapFactory.*import EvaluatorExceptionimport EvaluatorException.*import static EvaluatorException.*import ContinuationPendingimport ContinuationPending.*import static ContinuationPending.*import ContextListenerimport ContextListener.*import static ContextListener.*import ContextActionimport ContextAction.*import static ContextAction.*import ObjArrayimport ObjArray.*import static ObjArray.*import ObjToIntMapimport ObjToIntMap.*import static ObjToIntMap.*import XMLLibimport XMLLib.*import static XMLLib.*import NativeCallimport NativeCall.*import static NativeCall.*import GlobalSetterimport GlobalSetter.*import static GlobalSetter.*import NativeContinuationimport NativeContinuation.*import static NativeContinuation.*import EcmaErrorimport EcmaError.*import static EcmaError.*import ScriptNodeimport ScriptNode.*import static ScriptNode.*import ExternalArrayDataimport ExternalArrayData.*import static ExternalArrayData.*import IdFunctionCallimport IdFunctionCall.*import static IdFunctionCall.*import LazilyLoadedCtorimport LazilyLoadedCtor.*import static LazilyLoadedCtor.*import NativeFunctionimport NativeFunction.*import static NativeFunction.*import PropListItemimport PropListItem.*import static PropListItem.*import StackStyleimport StackStyle.*import static StackStyle.*import ScriptStackElementimport ScriptStackElement.*import static ScriptStackElement.*import ScriptStackElement[]import ScriptStackElement[].*import static ScriptStackElement[].*import Slotimport Slot.*import static Slot.*import DebuggableObjectimport DebuggableObject.*import static DebuggableObject.*import Enum<StackStyle>import Enum<StackStyle>.*import static Enum<StackStyle>.*import Comparable<StackStyle>import Comparable<StackStyle>.*import static Comparable<StackStyle>.*import Class<StackStyle>import Class<StackStyle>.*import static Class<StackStyle>.*import StackStyle[]import StackStyle[].*import static StackStyle[].*import CommentTypeimport CommentType.*import static CommentType.*import Enum<CommentType>import Enum<CommentType>.*import static Enum<CommentType>.*import Comparable<CommentType>import Comparable<CommentType>.*import static Comparable<CommentType>.*import Class<CommentType>import Class<CommentType>.*import static Class<CommentType>.*import Tokenimport Token.*import static Token.*import CommentType[]import CommentType[].*import static CommentType[].*import AstNodeimport AstNode.*import static AstNode.*import Comparable<AstNode>import Comparable<AstNode>.*import static Comparable<AstNode>.*import FunctionNodeimport FunctionNode.*import static FunctionNode.*import NodeVisitorimport NodeVisitor.*import static NodeVisitor.*import AstRootimport AstRoot.*import static AstRoot.*import SortedSet<Comment>import SortedSet<Comment>.*import static SortedSet<Comment>.*import Set<Comment>import Set<Comment>.*import static Set<Comment>.*import Collection<Comment>import Collection<Comment>.*import static Collection<Comment>.*import Iterable<Comment>import Iterable<Comment>.*import static Iterable<Comment>.*import Map<Node,int[]>import Map<Node,int[]>.*import static Map<Node,int[]>.*import List<AstNode>import List<AstNode>.*import static List<AstNode>.*import Collection<AstNode>import Collection<AstNode>.*import static Collection<AstNode>.*import Iterable<AstNode>import Iterable<AstNode>.*import static Iterable<AstNode>.*import Jumpimport Jump.*import static Jump.*import RegExpLiteralimport RegExpLiteral.*import static RegExpLiteral.*import Symbolimport Symbol.*import static Symbol.*import Map<String,Symbol>import Map<String,Symbol>.*import static Map<String,Symbol>.*import List<Scope>import List<Scope>.*import static List<Scope>.*import Collection<Scope>import Collection<Scope>.*import static Collection<Scope>.*import Iterable<Scope>import Iterable<Scope>.*import static Iterable<Scope>.*import List<Symbol>import List<Symbol>.*import static List<Symbol>.*import Collection<Symbol>import Collection<Symbol>.*import static Collection<Symbol>.*import Iterable<Symbol>import Iterable<Symbol>.*import static Iterable<Symbol>.*import List<FunctionNode>import List<FunctionNode>.*import static List<FunctionNode>.*import Collection<FunctionNode>import Collection<FunctionNode>.*import static Collection<FunctionNode>.*import Iterable<FunctionNode>import Iterable<FunctionNode>.*import static Iterable<FunctionNode>.*import DebugFrameimport DebugFrame.*import static DebugFrame.*import AcegiSecurityExceptionimport AcegiSecurityException.*import static AcegiSecurityException.*import NestedRuntimeExceptionimport NestedRuntimeException.*import static NestedRuntimeException.*import GrantedAuthority[]import GrantedAuthority[].*import static GrantedAuthority[].*import BadCredentialsExceptionimport BadCredentialsException.*import static BadCredentialsException.*import Adviceimport Advice.*import static Advice.*import Interceptorimport Interceptor.*import static Interceptor.*import Invocationimport Invocation.*import static Invocation.*import Joinpointimport Joinpoint.*import static Joinpoint.*import MethodInvocationimport MethodInvocation.*import static MethodInvocation.*import ConvertUtilsBeanimport ConvertUtilsBean.*import static ConvertUtilsBean.*import FileItemHeadersSupportimport FileItemHeadersSupport.*import static FileItemHeadersSupport.*import FileItemHeadersimport FileItemHeaders.*import static FileItemHeaders.*import LineIteratorimport LineIterator.*import static LineIterator.*import Iterator<File>import Iterator<File>.*import static Iterator<File>.*import IOFileFilterimport IOFileFilter.*import static IOFileFilter.*import LocationAwareimport LocationAware.*import static LocationAware.*import XMLWriterimport XMLWriter.*import static XMLWriter.*import XMLReaderimport XMLReader.*import static XMLReader.*import Nestableimport Nestable.*import static Nestable.*import NestableDelegateimport NestableDelegate.*import static NestableDelegate.*import NumberRuleimport NumberRule.*import static NumberRule.*import Ruleimport Rule.*import static Rule.*import AntClassLoaderimport AntClassLoader.*import static AntClassLoader.*import SubBuildListenerimport SubBuildListener.*import static SubBuildListener.*import BuildEventimport BuildEvent.*import static BuildEvent.*import DirectoryScannerimport DirectoryScanner.*import static DirectoryScanner.*import FileScannerimport FileScanner.*import static FileScanner.*import SelectorScannerimport SelectorScanner.*import static SelectorScanner.*import ResourceFactoryimport ResourceFactory.*import static ResourceFactory.*import TokenizedPathimport TokenizedPath.*import static TokenizedPath.*import FileSelectorimport FileSelector.*import static FileSelector.*import FileSelector[]import FileSelector[].*import static FileSelector[].*import Creatorimport Creator.*import static Creator.*import IntrospectionHelperimport IntrospectionHelper.*import static IntrospectionHelper.*import UnknownElementimport UnknownElement.*import static UnknownElement.*import FilterSetimport FilterSet.*import static FilterSet.*import InputHandlerimport InputHandler.*import static InputHandler.*import ProjectComponentimport ProjectComponent.*import static ProjectComponent.*import RuntimeConfigurableimport RuntimeConfigurable.*import static RuntimeConfigurable.*import AttributeListimport AttributeList.*import static AttributeList.*import TaskContainerimport TaskContainer.*import static TaskContainer.*import Task[]import Task[].*import static Task[].*import InputRequestimport InputRequest.*import static InputRequest.*import AbstractFileSetimport AbstractFileSet.*import static AbstractFileSet.*import DataTypeimport DataType.*import static DataType.*import SelectorContainerimport SelectorContainer.*import static SelectorContainer.*import Stack<>import Stack<>.*import static Stack<>.*import PatternSetimport PatternSet.*import static PatternSet.*import WritableSelectorimport WritableSelector.*import static WritableSelector.*import ReadableSelectorimport ReadableSelector.*import static ReadableSelector.*import ModifiedSelectorimport ModifiedSelector.*import static ModifiedSelector.*import ContainsRegexpSelectorimport ContainsRegexpSelector.*import static ContainsRegexpSelector.*import DependSelectorimport DependSelector.*import static DependSelector.*import DepthSelectorimport DepthSelector.*import static DepthSelector.*import PresentSelectorimport PresentSelector.*import static PresentSelector.*import ContainsSelectorimport ContainsSelector.*import static ContainsSelector.*import ExtendSelectorimport ExtendSelector.*import static ExtendSelector.*import TypeSelectorimport TypeSelector.*import static TypeSelector.*import FilenameSelectorimport FilenameSelector.*import static FilenameSelector.*import DifferentSelectorimport DifferentSelector.*import static DifferentSelector.*import SizeSelectorimport SizeSelector.*import static SizeSelector.*import DateSelectorimport DateSelector.*import static DateSelector.*import MajoritySelectorimport MajoritySelector.*import static MajoritySelector.*import NoneSelectorimport NoneSelector.*import static NoneSelector.*import NotSelectorimport NotSelector.*import static NotSelector.*import OrSelectorimport OrSelector.*import static OrSelector.*import AndSelectorimport AndSelector.*import static AndSelector.*import SelectSelectorimport SelectSelector.*import static SelectSelector.*import NameEntryimport NameEntry.*import static NameEntry.*import Comparisonimport Comparison.*import static Comparison.*import EnumeratedAttributeimport EnumeratedAttribute.*import static EnumeratedAttribute.*import DirSetimport DirSet.*import static DirSet.*import ResourceCollectionimport ResourceCollection.*import static ResourceCollection.*import FileNameimport FileName.*import static FileName.*import FileListimport FileList.*import static FileList.*import FiltersFileimport FiltersFile.*import static FiltersFile.*import OnMissingimport OnMissing.*import static OnMissing.*import MapperTypeimport MapperType.*import static MapperType.*import FileNameMapperimport FileNameMapper.*import static FileNameMapper.*import PathElementimport PathElement.*import static PathElement.*import TimeComparisonimport TimeComparison.*import static TimeComparison.*import ResourceSelectorimport ResourceSelector.*import static ResourceSelector.*import BaseSelectorContainerimport BaseSelectorContainer.*import static BaseSelectorContainer.*import BaseExtendSelectorimport BaseExtendSelector.*import static BaseExtendSelector.*import BaseSelectorimport BaseSelector.*import static BaseSelector.*import ExtendFileSelectorimport ExtendFileSelector.*import static ExtendFileSelector.*import TimeComparisonsimport TimeComparisons.*import static TimeComparisons.*import MappingSelectorimport MappingSelector.*import static MappingSelector.*import FilePresenceimport FilePresence.*import static FilePresence.*import ByteUnitsimport ByteUnits.*import static ByteUnits.*import SizeComparisonsimport SizeComparisons.*import static SizeComparisons.*import TokenizedPatternimport TokenizedPattern.*import static TokenizedPattern.*import FileTypeimport FileType.*import static FileType.*import Algorithmimport Algorithm.*import static Algorithm.*import AlgorithmNameimport AlgorithmName.*import static AlgorithmName.*import CacheNameimport CacheName.*import static CacheName.*import ComparatorNameimport ComparatorName.*import static ComparatorName.*import AbstractXMLDocumentParserimport AbstractXMLDocumentParser.*import static AbstractXMLDocumentParser.*import PSVIProviderimport PSVIProvider.*import static PSVIProvider.*import Parserimport Parser.*import static Parser.*import AttributePSVIimport AttributePSVI.*import static AttributePSVI.*import ElementPSVIimport ElementPSVI.*import static ElementPSVI.*import SAXNotRecognizedExceptionimport SAXNotRecognizedException.*import static SAXNotRecognizedException.*import SAXNotSupportedExceptionimport SAXNotSupportedException.*import static SAXNotSupportedException.*import DeclHandlerimport DeclHandler.*import static DeclHandler.*import DTDHandlerimport DTDHandler.*import static DTDHandler.*import DocumentHandlerimport DocumentHandler.*import static DocumentHandler.*import EntityResolverimport EntityResolver.*import static EntityResolver.*import XMLResourceIdentifierimport XMLResourceIdentifier.*import static XMLResourceIdentifier.*import XMLStringimport XMLString.*import static XMLString.*import XMLLocatorimport XMLLocator.*import static XMLLocator.*import NamespaceContextimport NamespaceContext.*import static NamespaceContext.*import XMLParserConfigurationimport XMLParserConfiguration.*import static XMLParserConfiguration.*import SymbolHashimport SymbolHash.*import static SymbolHash.*import XMLParserimport XMLParser.*import static XMLParser.*import XMLDocumentHandlerimport XMLDocumentHandler.*import static XMLDocumentHandler.*import XMLDTDHandlerimport XMLDTDHandler.*import static XMLDTDHandler.*import XMLDTDContentModelHandlerimport XMLDTDContentModelHandler.*import static XMLDTDContentModelHandler.*import XMLDTDContentModelSourceimport XMLDTDContentModelSource.*import static XMLDTDContentModelSource.*import XMLDTDSourceimport XMLDTDSource.*import static XMLDTDSource.*import XMLDocumentSourceimport XMLDocumentSource.*import static XMLDocumentSource.*import XMLComponentManagerimport XMLComponentManager.*import static XMLComponentManager.*import XMLConfigurationExceptionimport XMLConfigurationException.*import static XMLConfigurationException.*import XMLEntityResolverimport XMLEntityResolver.*import static XMLEntityResolver.*import XMLErrorHandlerimport XMLErrorHandler.*import static XMLErrorHandler.*import XMLParseExceptionimport XMLParseException.*import static XMLParseException.*import ItemPSVIimport ItemPSVI.*import static ItemPSVI.*import XSAttributeDeclarationimport XSAttributeDeclaration.*import static XSAttributeDeclaration.*import XSModelimport XSModel.*import static XSModel.*import XSNotationDeclarationimport XSNotationDeclaration.*import static XSNotationDeclaration.*import XSElementDeclarationimport XSElementDeclaration.*import static XSElementDeclaration.*import XSSimpleTypeDefinitionimport XSSimpleTypeDefinition.*import static XSSimpleTypeDefinition.*import XSTypeDefinitionimport XSTypeDefinition.*import static XSTypeDefinition.*import XSValueimport XSValue.*import static XSValue.*import ShortListimport ShortList.*import static ShortList.*import XSExceptionimport XSException.*import static XSException.*import StringListimport StringList.*import static StringList.*import XSAnnotationimport XSAnnotation.*import static XSAnnotation.*import XSObjectimport XSObject.*import static XSObject.*import XSObjectListimport XSObjectList.*import static XSObjectList.*import XSComplexTypeDefinitionimport XSComplexTypeDefinition.*import static XSComplexTypeDefinition.*import XSAttributeGroupDefinitionimport XSAttributeGroupDefinition.*import static XSAttributeGroupDefinition.*import XSWildcardimport XSWildcard.*import static XSWildcard.*import XSParticleimport XSParticle.*import static XSParticle.*import XSTermimport XSTerm.*import static XSTerm.*import XSNamedMapimport XSNamedMap.*import static XSNamedMap.*import XSIDCDefinitionimport XSIDCDefinition.*import static XSIDCDefinition.*import XSModelGroupDefinitionimport XSModelGroupDefinition.*import static XSModelGroupDefinition.*import XSNamespaceItemListimport XSNamespaceItemList.*import static XSNamespaceItemList.*import XSModelGroupimport XSModelGroup.*import static XSModelGroup.*import XSNamespaceItemimport XSNamespaceItem.*import static XSNamespaceItem.*import Namespaceimport Namespace.*import static Namespace.*import Branchimport Branch.*import static Branch.*import CDATAimport CDATA.*import static CDATA.*import DocumentFactoryimport DocumentFactory.*import static DocumentFactory.*import QNameCacheimport QNameCache.*import static QNameCache.*import NodeFilterimport NodeFilter.*import static NodeFilter.*import VariableContextimport VariableContext.*import static VariableContext.*import XPathimport XPath.*import static XPath.*import InvalidXPathExceptionimport InvalidXPathException.*import static InvalidXPathException.*import Entityimport Entity.*import static Entity.*import AbstractNodeimport AbstractNode.*import static AbstractNode.*import NamespaceCacheimport NamespaceCache.*import static NamespaceCache.*import FunctionContextimport FunctionContext.*import static FunctionContext.*import OutputFormatimport OutputFormat.*import static OutputFormat.*import XMLFilterImplimport XMLFilterImpl.*import static XMLFilterImpl.*import CompressedContentFormatimport CompressedContentFormat.*import static CompressedContentFormat.*import PreEncodedHttpFieldimport PreEncodedHttpField.*import static PreEncodedHttpField.*import CompressedContentFormat[]import CompressedContentFormat[].*import static CompressedContentFormat[].*import CookieComplianceimport CookieCompliance.*import static CookieCompliance.*import Enum<CookieCompliance>import Enum<CookieCompliance>.*import static Enum<CookieCompliance>.*import Comparable<CookieCompliance>import Comparable<CookieCompliance>.*import static Comparable<CookieCompliance>.*import Class<CookieCompliance>import Class<CookieCompliance>.*import static Class<CookieCompliance>.*import CookieCompliance[]import CookieCompliance[].*import static CookieCompliance[].*import HostPortHttpFieldimport HostPortHttpField.*import static HostPortHttpField.*import HttpFieldimport HttpField.*import static HttpField.*import HttpHeaderimport HttpHeader.*import static HttpHeader.*import HostPortimport HostPort.*import static HostPort.*import HttpContentimport HttpContent.*import static HttpContent.*import ? extends HttpContentimport ? extends HttpContent.*import static ? extends HttpContent.*import Map<CompressedContentFormat,? extends HttpContent>import Map<CompressedContentFormat,? extends HttpContent>.*import static Map<CompressedContentFormat,? extends HttpContent>.*import HttpCookieimport HttpCookie.*import static HttpCookie.*import HttpHeaderValueimport HttpHeaderValue.*import static HttpHeaderValue.*import HttpFieldsimport HttpFields.*import static HttpFields.*import Iterable<HttpField>import Iterable<HttpField>.*import static Iterable<HttpField>.*import Spliterator<HttpField>import Spliterator<HttpField>.*import static Spliterator<HttpField>.*import ? super HttpFieldimport ? super HttpField.*import static ? super HttpField.*import Consumer<? super HttpField>import Consumer<? super HttpField>.*import static Consumer<? super HttpField>.*import Iterator<HttpField>import Iterator<HttpField>.*import static Iterator<HttpField>.*import QuotedCSVimport QuotedCSV.*import static QuotedCSV.*import Stream<HttpField>import Stream<HttpField>.*import static Stream<HttpField>.*import BaseStream<HttpField,Stream<HttpField>>import BaseStream<HttpField,Stream<HttpField>>.*import static BaseStream<HttpField,Stream<HttpField>>.*import Enum<HttpHeader>import Enum<HttpHeader>.*import static Enum<HttpHeader>.*import Comparable<HttpHeader>import Comparable<HttpHeader>.*import static Comparable<HttpHeader>.*import Class<HttpHeader>import Class<HttpHeader>.*import static Class<HttpHeader>.*import HttpHeader[]import HttpHeader[].*import static HttpHeader[].*import Trieimport Trie.*import static Trie.*import Trie<HttpHeader>import Trie<HttpHeader>.*import static Trie<HttpHeader>.*import Enum<HttpHeaderValue>import Enum<HttpHeaderValue>.*import static Enum<HttpHeaderValue>.*import Comparable<HttpHeaderValue>import Comparable<HttpHeaderValue>.*import static Comparable<HttpHeaderValue>.*import Class<HttpHeaderValue>import Class<HttpHeaderValue>.*import static Class<HttpHeaderValue>.*import HttpHeaderValue[]import HttpHeaderValue[].*import static HttpHeaderValue[].*import Trie<HttpHeaderValue>import Trie<HttpHeaderValue>.*import static Trie<HttpHeaderValue>.*import HttpSchemeimport HttpScheme.*import static HttpScheme.*import Enum<HttpScheme>import Enum<HttpScheme>.*import static Enum<HttpScheme>.*import Comparable<HttpScheme>import Comparable<HttpScheme>.*import static Comparable<HttpScheme>.*import Class<HttpScheme>import Class<HttpScheme>.*import static Class<HttpScheme>.*import HttpScheme[]import HttpScheme[].*import static HttpScheme[].*import Trie<HttpScheme>import Trie<HttpScheme>.*import static Trie<HttpScheme>.*import HttpURIimport HttpURI.*import static HttpURI.*import MultiMapimport MultiMap.*import static MultiMap.*import MultiMap<String>import MultiMap<String>.*import static MultiMap<String>.*import HashMap<String,List<String>>import HashMap<String,List<String>>.*import static HashMap<String,List<String>>.*import AbstractMap<String,List<String>>import AbstractMap<String,List<String>>.*import static AbstractMap<String,List<String>>.*import HttpVersionimport HttpVersion.*import static HttpVersion.*import Enum<HttpVersion>import Enum<HttpVersion>.*import static Enum<HttpVersion>.*import Comparable<HttpVersion>import Comparable<HttpVersion>.*import static Comparable<HttpVersion>.*import Class<HttpVersion>import Class<HttpVersion>.*import static Class<HttpVersion>.*import HttpVersion[]import HttpVersion[].*import static HttpVersion[].*import Trie<HttpVersion>import Trie<HttpVersion>.*import static Trie<HttpVersion>.*import MetaDataimport MetaData.*import static MetaData.*import Supplier<HttpFields>import Supplier<HttpFields>.*import static Supplier<HttpFields>.*import MimeTypesimport MimeTypes.*import static MimeTypes.*import Trie<Type>import Trie<Type>.*import static Trie<Type>.*import ByteBufferPoolimport ByteBufferPool.*import static ByteBufferPool.*import Connectionimport Connection.*import static Connection.*import EndPointimport EndPoint.*import static EndPoint.*import Callbackimport Callback.*import static Callback.*import IdleTimeoutimport IdleTimeout.*import static IdleTimeout.*import Schedulerimport Scheduler.*import static Scheduler.*import IdentityServiceimport IdentityService.*import static IdentityService.*import UserIdentityimport UserIdentity.*import static UserIdentity.*import RunAsTokenimport RunAsToken.*import static RunAsToken.*import LoginServiceimport LoginService.*import static LoginService.*import AsyncContextEventimport AsyncContextEvent.*import static AsyncContextEvent.*import HttpChannelStateimport HttpChannelState.*import static HttpChannelState.*import AsyncContextStateimport AsyncContextState.*import static AsyncContextState.*import HttpChannelimport HttpChannel.*import static HttpChannel.*import ConnectionFactoryimport ConnectionFactory.*import static ConnectionFactory.*import Connectorimport Connector.*import static Connector.*import LifeCycleimport LifeCycle.*import static LifeCycle.*import Gracefulimport Graceful.*import static Graceful.*import ManagedObjectimport ManagedObject.*import static ManagedObject.*import Collection<EndPoint>import Collection<EndPoint>.*import static Collection<EndPoint>.*import Iterable<EndPoint>import Iterable<EndPoint>.*import static Iterable<EndPoint>.*import ManagedAttributeimport ManagedAttribute.*import static ManagedAttribute.*import Collection<ConnectionFactory>import Collection<ConnectionFactory>.*import static Collection<ConnectionFactory>.*import Iterable<ConnectionFactory>import Iterable<ConnectionFactory>.*import static Iterable<ConnectionFactory>.*import Serverimport Server.*import static Server.*import ManagedOperationimport ManagedOperation.*import static ManagedOperation.*import HandlerContainerimport HandlerContainer.*import static HandlerContainer.*import Contentimport Content.*import static Content.*import HttpConfigurationimport HttpConfiguration.*import static HttpConfiguration.*import RequestLogimport RequestLog.*import static RequestLog.*import HttpTransportimport HttpTransport.*import static HttpTransport.*import HttpOutputimport HttpOutput.*import static HttpOutput.*import HttpInputimport HttpInput.*import static HttpInput.*import ContextHandlerimport ContextHandler.*import static ContextHandler.*import Customizerimport Customizer.*import static Customizer.*import List<Customizer>import List<Customizer>.*import static List<Customizer>.*import Collection<Customizer>import Collection<Customizer>.*import static Collection<Customizer>.*import Iterable<Customizer>import Iterable<Customizer>.*import static Iterable<Customizer>.*import InvocationTypeimport InvocationType.*import static InvocationType.*import Blockerimport Blocker.*import static Blocker.*import PushBuilderimport PushBuilder.*import static PushBuilder.*import SessionHandlerimport SessionHandler.*import static SessionHandler.*import MultiMap<>import MultiMap<>.*import static MultiMap<>.*import HandlerWrapperimport HandlerWrapper.*import static HandlerWrapper.*import SessionIdManagerimport SessionIdManager.*import static SessionIdManager.*import ThreadPoolimport ThreadPool.*import static ThreadPool.*import Connector[]import Connector[].*import static Connector[].*import HouseKeeperimport HouseKeeper.*import static HouseKeeper.*import Set<SessionHandler>import Set<SessionHandler>.*import static Set<SessionHandler>.*import Collection<SessionHandler>import Collection<SessionHandler>.*import static Collection<SessionHandler>.*import Iterable<SessionHandler>import Iterable<SessionHandler>.*import static Iterable<SessionHandler>.*import AbstractHandlerimport AbstractHandler.*import static AbstractHandler.*import ContainerLifeCycleimport ContainerLifeCycle.*import static ContainerLifeCycle.*import AbstractHandlerContainerimport AbstractHandlerContainer.*import static AbstractHandlerContainer.*import List<Handler>import List<Handler>.*import static List<Handler>.*import Collection<Handler>import Collection<Handler>.*import static Collection<Handler>.*import Iterable<Handler>import Iterable<Handler>.*import static Iterable<Handler>.*import AliasCheckimport AliasCheck.*import static AliasCheck.*import StaticContextimport StaticContext.*import static StaticContext.*import AttributesMapimport AttributesMap.*import static AttributesMap.*import ScopedHandlerimport ScopedHandler.*import static ScopedHandler.*import List<AliasCheck>import List<AliasCheck>.*import static List<AliasCheck>.*import Collection<AliasCheck>import Collection<AliasCheck>.*import static Collection<AliasCheck>.*import Iterable<AliasCheck>import Iterable<AliasCheck>.*import static Iterable<AliasCheck>.*import AbstractLifeCycleimport AbstractLifeCycle.*import static AbstractLifeCycle.*import SessionInactivityTimeoutimport SessionInactivityTimeout.*import static SessionInactivityTimeout.*import Sessionimport Session.*import static Session.*import SessionIfimport SessionIf.*import static SessionIf.*import SessionDataimport SessionData.*import static SessionData.*import Lockerimport Locker.*import static Locker.*import SessionCacheimport SessionCache.*import static SessionCache.*import SessionDataStoreimport SessionDataStore.*import static SessionDataStore.*import SessionContextimport SessionContext.*import static SessionContext.*import SessionDataMapimport SessionDataMap.*import static SessionDataMap.*import ConcurrentHashSetimport ConcurrentHashSet.*import static ConcurrentHashSet.*import ConcurrentHashSet<String>import ConcurrentHashSet<String>.*import static ConcurrentHashSet<String>.*import CounterStatisticimport CounterStatistic.*import static CounterStatistic.*import SampleStatisticimport SampleStatistic.*import static SampleStatistic.*import List<HttpSessionIdListener>import List<HttpSessionIdListener>.*import static List<HttpSessionIdListener>.*import Collection<HttpSessionIdListener>import Collection<HttpSessionIdListener>.*import static Collection<HttpSessionIdListener>.*import Iterable<HttpSessionIdListener>import Iterable<HttpSessionIdListener>.*import static Iterable<HttpSessionIdListener>.*import List<HttpSessionListener>import List<HttpSessionListener>.*import static List<HttpSessionListener>.*import Collection<HttpSessionListener>import Collection<HttpSessionListener>.*import static Collection<HttpSessionListener>.*import Iterable<HttpSessionListener>import Iterable<HttpSessionListener>.*import static Iterable<HttpSessionListener>.*import List<HttpSessionAttributeListener>import List<HttpSessionAttributeListener>.*import static List<HttpSessionAttributeListener>.*import Collection<HttpSessionAttributeListener>import Collection<HttpSessionAttributeListener>.*import static Collection<HttpSessionAttributeListener>.*import Iterable<HttpSessionAttributeListener>import Iterable<HttpSessionAttributeListener>.*import static Iterable<HttpSessionAttributeListener>.*import Class<? extends EventListener>[]import Class<? extends EventListener>[].*import static Class<? extends EventListener>[].*import EnumSet<SessionTrackingMode>import EnumSet<SessionTrackingMode>.*import static EnumSet<SessionTrackingMode>.*import AbstractSet<SessionTrackingMode>import AbstractSet<SessionTrackingMode>.*import static AbstractSet<SessionTrackingMode>.*import AbstractCollection<SessionTrackingMode>import AbstractCollection<SessionTrackingMode>.*import static AbstractCollection<SessionTrackingMode>.*import Invocableimport Invocable.*import static Invocable.*import List<V>import List<V>.*import static List<V>.*import HashMap<String,List<V>>import HashMap<String,List<V>>.*import static HashMap<String,List<V>>.*import AbstractMap<String,List<V>>import AbstractMap<String,List<V>>.*import static AbstractMap<String,List<V>>.*import Map<String,List<V>>import Map<String,List<V>>.*import static Map<String,List<V>>.*import ? super List<V>import ? super List<V>.*import static ? super List<V>.*import ? extends List<V>import ? extends List<V>.*import static ? extends List<V>.*import BiFunction<? super List<V>,? super List<V>,? extends List<V>>import BiFunction<? super List<V>,? super List<V>,? extends List<V>>.*import static BiFunction<? super List<V>,? super List<V>,? extends List<V>>.*import BiFunction<? super String,? super List<V>,? extends List<V>>import BiFunction<? super String,? super List<V>,? extends List<V>>.*import static BiFunction<? super String,? super List<V>,? extends List<V>>.*import Function<? super String,? extends List<V>>import Function<? super String,? extends List<V>>.*import static Function<? super String,? extends List<V>>.*import BiConsumer<? super String,? super List<V>>import BiConsumer<? super String,? super List<V>>.*import static BiConsumer<? super String,? super List<V>>.*import Entry<String,List<V>>import Entry<String,List<V>>.*import static Entry<String,List<V>>.*import Set<Entry<String,List<V>>>import Set<Entry<String,List<V>>>.*import static Set<Entry<String,List<V>>>.*import Collection<Entry<String,List<V>>>import Collection<Entry<String,List<V>>>.*import static Collection<Entry<String,List<V>>>.*import Iterable<Entry<String,List<V>>>import Iterable<Entry<String,List<V>>>.*import static Iterable<Entry<String,List<V>>>.*import Collection<List<V>>import Collection<List<V>>.*import static Collection<List<V>>.*import Iterable<List<V>>import Iterable<List<V>>.*import static Iterable<List<V>>.*import Map<? extends String,? extends List<V>>import Map<? extends String,? extends List<V>>.*import static Map<? extends String,? extends List<V>>.*import Node<String,List<V>>import Node<String,List<V>>.*import static Node<String,List<V>>.*import TreeNode<String,List<V>>import TreeNode<String,List<V>>.*import static TreeNode<String,List<V>>.*import Node<String,List<V>>[]import Node<String,List<V>>[].*import static Node<String,List<V>>[].*import V[]import V[].*import static V[].*import Map<String,V>import Map<String,V>.*import static Map<String,V>.*import SharedBlockingCallbackimport SharedBlockingCallback.*import static SharedBlockingCallback.*import Managedimport Managed.*import static Managed.*import Enum<Managed>import Enum<Managed>.*import static Enum<Managed>.*import Comparable<Managed>import Comparable<Managed>.*import static Comparable<Managed>.*import Class<Managed>import Class<Managed>.*import static Class<Managed>.*import Managed[]import Managed[].*import static Managed[].*import Dumpableimport Dumpable.*import static Dumpable.*import Collection<?>[]import Collection<?>[].*import static Collection<?>[].*import Collection<Resource>import Collection<Resource>.*import static Collection<Resource>.*import Iterable<Resource>import Iterable<Resource>.*import static Iterable<Resource>.*import Enum<InvocationType>import Enum<InvocationType>.*import static Enum<InvocationType>.*import Comparable<InvocationType>import Comparable<InvocationType>.*import static Comparable<InvocationType>.*import Class<InvocationType>import Class<InvocationType>.*import static Class<InvocationType>.*import InvocationType[]import InvocationType[].*import static InvocationType[].*import ThreadLocal<Boolean>import ThreadLocal<Boolean>.*import static ThreadLocal<Boolean>.*import Descriptionimport Description.*import static Description.*import ? extends SelfDescribingimport ? extends SelfDescribing.*import static ? extends SelfDescribing.*import Iterable<? extends SelfDescribing>import Iterable<? extends SelfDescribing>.*import static Iterable<? extends SelfDescribing>.*import UnresolvableExceptionimport UnresolvableException.*import static UnresolvableException.*import ContextSupportimport ContextSupport.*import static ContextSupport.*import FunctionCallExceptionimport FunctionCallException.*import static FunctionCallException.*import JaxenExceptionimport JaxenException.*import static JaxenException.*import SAXPathExceptionimport SAXPathException.*import static SAXPathException.*import UnsupportedAxisExceptionimport UnsupportedAxisException.*import static UnsupportedAxisException.*import FactoryImplimport FactoryImpl.*import static FactoryImpl.*import AdapterAnnotationParserimport AdapterAnnotationParser.*import static AdapterAnnotationParser.*import MemberAdapterimport MemberAdapter.*import static MemberAdapter.*import TransformationSpecimport TransformationSpec.*import static TransformationSpec.*import AdapterAnnotationimport AdapterAnnotation.*import static AdapterAnnotation.*import ? extends AdapterAnnotationParserimport ? extends AdapterAnnotationParser.*import static ? extends AdapterAnnotationParser.*import Class<? extends AdapterAnnotationParser>import Class<? extends AdapterAnnotationParser>.*import static Class<? extends AdapterAnnotationParser>.*import ClassRewritingContextimport ClassRewritingContext.*import static ClassRewritingContext.*import ClassVisitorimport ClassVisitor.*import static ClassVisitor.*import MethodVisitorimport MethodVisitor.*import static MethodVisitor.*import MemberTransformSpecimport MemberTransformSpec.*import static MemberTransformSpec.*import NameAndTypeimport NameAndType.*import static NameAndType.*import Set<MemberAdapter>import Set<MemberAdapter>.*import static Set<MemberAdapter>.*import Collection<MemberAdapter>import Collection<MemberAdapter>.*import static Collection<MemberAdapter>.*import Iterable<MemberAdapter>import Iterable<MemberAdapter>.*import static Iterable<MemberAdapter>.*import HashMap<NameAndType,Set<MemberAdapter>>import HashMap<NameAndType,Set<MemberAdapter>>.*import static HashMap<NameAndType,Set<MemberAdapter>>.*import AbstractMap<NameAndType,Set<MemberAdapter>>import AbstractMap<NameAndType,Set<MemberAdapter>>.*import static AbstractMap<NameAndType,Set<MemberAdapter>>.*import Map<NameAndType,Set<MemberAdapter>>import Map<NameAndType,Set<MemberAdapter>>.*import static Map<NameAndType,Set<MemberAdapter>>.*import ? super Set<MemberAdapter>import ? super Set<MemberAdapter>.*import static ? super Set<MemberAdapter>.*import ? extends Set<MemberAdapter>import ? extends Set<MemberAdapter>.*import static ? extends Set<MemberAdapter>.*import BiFunction<? super Set<MemberAdapter>,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>import BiFunction<? super Set<MemberAdapter>,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>.*import static BiFunction<? super Set<MemberAdapter>,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>.*import ? super NameAndTypeimport ? super NameAndType.*import static ? super NameAndType.*import BiFunction<? super NameAndType,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>import BiFunction<? super NameAndType,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>.*import static BiFunction<? super NameAndType,? super Set<MemberAdapter>,? extends Set<MemberAdapter>>.*import Function<? super NameAndType,? extends Set<MemberAdapter>>import Function<? super NameAndType,? extends Set<MemberAdapter>>.*import static Function<? super NameAndType,? extends Set<MemberAdapter>>.*import BiConsumer<? super NameAndType,? super Set<MemberAdapter>>import BiConsumer<? super NameAndType,? super Set<MemberAdapter>>.*import static BiConsumer<? super NameAndType,? super Set<MemberAdapter>>.*import Entry<NameAndType,Set<MemberAdapter>>import Entry<NameAndType,Set<MemberAdapter>>.*import static Entry<NameAndType,Set<MemberAdapter>>.*import Set<Entry<NameAndType,Set<MemberAdapter>>>import Set<Entry<NameAndType,Set<MemberAdapter>>>.*import static Set<Entry<NameAndType,Set<MemberAdapter>>>.*import Collection<Entry<NameAndType,Set<MemberAdapter>>>import Collection<Entry<NameAndType,Set<MemberAdapter>>>.*import static Collection<Entry<NameAndType,Set<MemberAdapter>>>.*import Iterable<Entry<NameAndType,Set<MemberAdapter>>>import Iterable<Entry<NameAndType,Set<MemberAdapter>>>.*import static Iterable<Entry<NameAndType,Set<MemberAdapter>>>.*import Collection<Set<MemberAdapter>>import Collection<Set<MemberAdapter>>.*import static Collection<Set<MemberAdapter>>.*import Iterable<Set<MemberAdapter>>import Iterable<Set<MemberAdapter>>.*import static Iterable<Set<MemberAdapter>>.*import Set<NameAndType>import Set<NameAndType>.*import static Set<NameAndType>.*import Collection<NameAndType>import Collection<NameAndType>.*import static Collection<NameAndType>.*import Iterable<NameAndType>import Iterable<NameAndType>.*import static Iterable<NameAndType>.*import ? extends NameAndTypeimport ? extends NameAndType.*import static ? extends NameAndType.*import Map<? extends NameAndType,? extends Set<MemberAdapter>>import Map<? extends NameAndType,? extends Set<MemberAdapter>>.*import static Map<? extends NameAndType,? extends Set<MemberAdapter>>.*import Node<NameAndType,Set<MemberAdapter>>import Node<NameAndType,Set<MemberAdapter>>.*import static Node<NameAndType,Set<MemberAdapter>>.*import TreeNode<NameAndType,Set<MemberAdapter>>import TreeNode<NameAndType,Set<MemberAdapter>>.*import static TreeNode<NameAndType,Set<MemberAdapter>>.*import Node<NameAndType,Set<MemberAdapter>>[]import Node<NameAndType,Set<MemberAdapter>>[].*import static Node<NameAndType,Set<MemberAdapter>>[].*import MemberRefConstantimport MemberRefConstant.*import static MemberRefConstant.*import ? extends ClassLoaderimport ? extends ClassLoader.*import static ? extends ClassLoader.*import Collection<? extends ClassLoader>import Collection<? extends ClassLoader>.*import static Collection<? extends ClassLoader>.*import Iterable<? extends ClassLoader>import Iterable<? extends ClassLoader>.*import static Iterable<? extends ClassLoader>.*import ClassConstantimport ClassConstant.*import static ClassConstant.*import Utf8Constantimport Utf8Constant.*import static Utf8Constant.*import NameAndTypeConstantimport NameAndTypeConstant.*import static NameAndTypeConstant.*import ? super List<RundeckOutputEntry>import ? super List<RundeckOutputEntry>.*import static ? super List<RundeckOutputEntry>.*import Consumer<? super List<RundeckOutputEntry>>import Consumer<? super List<RundeckOutputEntry>>.*import static Consumer<? super List<RundeckOutputEntry>>.*import Spliterator<List<RundeckOutputEntry>>import Spliterator<List<RundeckOutputEntry>>.*import static Spliterator<List<RundeckOutputEntry>>.*import Noneimport None.*import static None.*import Collection<Role>import Collection<Role>.*import static Collection<Role>.*import Iterable<Role>import Iterable<Role>.*import static Iterable<Role>.*import BasicProjectInfoimport BasicProjectInfo.*import static BasicProjectInfo.*import Libraryimport Library.*import static Library.*import Library[]import Library[].*import static Library[].*import BootableProjectInfoimport BootableProjectInfo.*import static BootableProjectInfo.*import BootableProjectInfo[]import BootableProjectInfo[].*import static BootableProjectInfo[].*import ChartRenderingInfoimport ChartRenderingInfo.*import static ChartRenderingInfo.*import PlotRenderingInfoimport PlotRenderingInfo.*import static PlotRenderingInfo.*import EntityCollectionimport EntityCollection.*import static EntityCollection.*import Drawableimport Drawable.*import static Drawable.*import TitleChangeListenerimport TitleChangeListener.*import static TitleChangeListener.*import PlotChangeListenerimport PlotChangeListener.*import static PlotChangeListener.*import PlotChangeEventimport PlotChangeEvent.*import static PlotChangeEvent.*import TitleChangeEventimport TitleChangeEvent.*import static TitleChangeEvent.*import ChartProgressEventimport ChartProgressEvent.*import static ChartProgressEvent.*import ChartProgressListenerimport ChartProgressListener.*import static ChartProgressListener.*import ChartChangeEventimport ChartChangeEvent.*import static ChartChangeEvent.*import ChartChangeListenerimport ChartChangeListener.*import static ChartChangeListener.*import Titleimport Title.*import static Title.*import XYPlotimport XYPlot.*import static XYPlot.*import Plotimport Plot.*import static Plot.*import LegendTitleimport LegendTitle.*import static LegendTitle.*import TextTitleimport TextTitle.*import static TextTitle.*import RectangleInsetsimport RectangleInsets.*import static RectangleInsets.*import ProjectInfoimport ProjectInfo.*import static ProjectInfo.*import LegendItemimport LegendItem.*import static LegendItem.*import GradientPaintTransformerimport GradientPaintTransformer.*import static GradientPaintTransformer.*import Datasetimport Dataset.*import static Dataset.*import LegendItemCollectionimport LegendItemCollection.*import static LegendItemCollection.*import LegendItemSourceimport LegendItemSource.*import static LegendItemSource.*import CategoryAnnotationimport CategoryAnnotation.*import static CategoryAnnotation.*import ValueAxisimport ValueAxis.*import static ValueAxis.*import XYAnnotationimport XYAnnotation.*import static XYAnnotation.*import Axisimport Axis.*import static Axis.*import RectangleEdgeimport RectangleEdge.*import static RectangleEdge.*import AxisStateimport AxisState.*import static AxisState.*import AxisChangeEventimport AxisChangeEvent.*import static AxisChangeEvent.*import AxisChangeListenerimport AxisChangeListener.*import static AxisChangeListener.*import AxisSpaceimport AxisSpace.*import static AxisSpace.*import AxisLocationimport AxisLocation.*import static AxisLocation.*import PublicCloneableimport PublicCloneable.*import static PublicCloneable.*import CategoryAnchorimport CategoryAnchor.*import static CategoryAnchor.*import TextBlockimport TextBlock.*import static TextBlock.*import CategoryLabelPositionimport CategoryLabelPosition.*import static CategoryLabelPosition.*import CategoryLabelPositionsimport CategoryLabelPositions.*import static CategoryLabelPositions.*import CategoryLabelWidthTypeimport CategoryLabelWidthType.*import static CategoryLabelWidthType.*import TextAnchorimport TextAnchor.*import static TextAnchor.*import TextBlockAnchorimport TextBlockAnchor.*import static TextBlockAnchor.*import RectangleAnchorimport RectangleAnchor.*import static RectangleAnchor.*import MarkerAxisBandimport MarkerAxisBand.*import static MarkerAxisBand.*import IntervalMarkerimport IntervalMarker.*import static IntervalMarker.*import TickUnitimport TickUnit.*import static TickUnit.*import TickUnitSourceimport TickUnitSource.*import static TickUnitSource.*import NumberTickUnitimport NumberTickUnit.*import static NumberTickUnit.*import RangeTypeimport RangeType.*import static RangeType.*import Tickimport Tick.*import static Tick.*import TickTypeimport TickType.*import static TickType.*import ValueTickimport ValueTick.*import static ValueTick.*import AbstractBlockimport AbstractBlock.*import static AbstractBlock.*import RectangleConstraintimport RectangleConstraint.*import static RectangleConstraint.*import Size2Dimport Size2D.*import static Size2D.*import BlockFrameimport BlockFrame.*import static BlockFrame.*import BlockBorderimport BlockBorder.*import static BlockBorder.*import Arrangementimport Arrangement.*import static Arrangement.*import BlockContainerimport BlockContainer.*import static BlockContainer.*import Blockimport Block.*import static Block.*import LengthConstraintTypeimport LengthConstraintType.*import static LengthConstraintType.*import ChartEntityimport ChartEntity.*import static ChartEntity.*import ToolTipTagFragmentGeneratorimport ToolTipTagFragmentGenerator.*import static ToolTipTagFragmentGenerator.*import URLTagFragmentGeneratorimport URLTagFragmentGenerator.*import static URLTagFragmentGenerator.*import ChartChangeEventTypeimport ChartChangeEventType.*import static ChartChangeEventType.*import MarkerChangeEventimport MarkerChangeEvent.*import static MarkerChangeEvent.*import Markerimport Marker.*import static Marker.*import MarkerChangeListenerimport MarkerChangeListener.*import static MarkerChangeListener.*import RendererChangeEventimport RendererChangeEvent.*import static RendererChangeEvent.*import RendererChangeListenerimport RendererChangeListener.*import static RendererChangeListener.*import CategoryItemLabelGeneratorimport CategoryItemLabelGenerator.*import static CategoryItemLabelGenerator.*import CategorySeriesLabelGeneratorimport CategorySeriesLabelGenerator.*import static CategorySeriesLabelGenerator.*import CategoryToolTipGeneratorimport CategoryToolTipGenerator.*import static CategoryToolTipGenerator.*import ItemLabelAnchorimport ItemLabelAnchor.*import static ItemLabelAnchor.*import ItemLabelPositionimport ItemLabelPosition.*import static ItemLabelPosition.*import XYItemLabelGeneratorimport XYItemLabelGenerator.*import static XYItemLabelGenerator.*import XYDatasetimport XYDataset.*import static XYDataset.*import XYSeriesLabelGeneratorimport XYSeriesLabelGenerator.*import static XYSeriesLabelGenerator.*import XYToolTipGeneratorimport XYToolTipGenerator.*import static XYToolTipGenerator.*import CategoryMarkerimport CategoryMarker.*import static CategoryMarker.*import ValueAxisPlotimport ValueAxisPlot.*import static ValueAxisPlot.*import Zoomableimport Zoomable.*import static Zoomable.*import PlotOrientationimport PlotOrientation.*import static PlotOrientation.*import Layerimport Layer.*import static Layer.*import PlotStateimport PlotState.*import static PlotState.*import DatasetChangeEventimport DatasetChangeEvent.*import static DatasetChangeEvent.*import SortOrderimport SortOrder.*import static SortOrder.*import DatasetRenderingOrderimport DatasetRenderingOrder.*import static DatasetRenderingOrder.*import CategoryItemRendererimport CategoryItemRenderer.*import static CategoryItemRenderer.*import CategoryItemRenderer[]import CategoryItemRenderer[].*import static CategoryItemRenderer[].*import ValueAxis[]import ValueAxis[].*import static ValueAxis[].*import CategoryAxis[]import CategoryAxis[].*import static CategoryAxis[].*import CrosshairStateimport CrosshairState.*import static CrosshairState.*import DrawingSupplierimport DrawingSupplier.*import static DrawingSupplier.*import LengthAdjustmentTypeimport LengthAdjustmentType.*import static LengthAdjustmentType.*import DatasetChangeListenerimport DatasetChangeListener.*import static DatasetChangeListener.*import DatasetGroupimport DatasetGroup.*import static DatasetGroup.*import SeriesRenderingOrderimport SeriesRenderingOrder.*import static SeriesRenderingOrder.*import XYItemRendererimport XYItemRenderer.*import static XYItemRenderer.*import XYItemRenderer[]import XYItemRenderer[].*import static XYItemRenderer[].*import AbstractRendererimport AbstractRenderer.*import static AbstractRenderer.*import RendererStateimport RendererState.*import static RendererState.*import AbstractCategoryItemRendererimport AbstractCategoryItemRenderer.*import static AbstractCategoryItemRenderer.*import CategoryItemRendererStateimport CategoryItemRendererState.*import static CategoryItemRendererState.*import CategoryURLGeneratorimport CategoryURLGenerator.*import static CategoryURLGenerator.*import XYItemRendererStateimport XYItemRendererState.*import static XYItemRendererState.*import XYURLGeneratorimport XYURLGenerator.*import static XYURLGenerator.*import LegendItemSource[]import LegendItemSource[].*import static LegendItemSource[].*import HorizontalAlignmentimport HorizontalAlignment.*import static HorizontalAlignment.*import VerticalAlignmentimport VerticalAlignment.*import static VerticalAlignment.*import DomainOrderimport DomainOrder.*import static DomainOrder.*import KeyedValues2Dimport KeyedValues2D.*import static KeyedValues2D.*import Values2Dimport Values2D.*import static Values2D.*import AbstractDatasetimport AbstractDataset.*import static AbstractDataset.*import SeriesDatasetimport SeriesDataset.*import static SeriesDataset.*import TextLineimport TextLine.*import static TextLine.*import TextFragmentimport TextFragment.*import static TextFragment.*import LogContextimport LogContext.*import static LogContext.*import UnitTypeimport UnitType.*import static UnitType.*import FileStatimport FileStat.*import static FileStat.*import Groupimport Group.*import static Group.*import Enum<ERRORS>import Enum<ERRORS>.*import static Enum<ERRORS>.*import Comparable<ERRORS>import Comparable<ERRORS>.*import static Comparable<ERRORS>.*import Class<ERRORS>import Class<ERRORS>.*import static Class<ERRORS>.*import POSIXimport POSIX.*import static POSIX.*import ERRORS[]import ERRORS[].*import static ERRORS[].*import Passwdimport Passwd.*import static Passwd.*import ArrayComparisonFailureimport ArrayComparisonFailure.*import static ArrayComparisonFailure.*import MethodRuleimport MethodRule.*import static MethodRule.*import Statementimport Statement.*import static Statement.*import FrameworkMethodimport FrameworkMethod.*import static FrameworkMethod.*import TestRuleimport TestRule.*import static TestRule.*import Collection<Annotation>import Collection<Annotation>.*import static Collection<Annotation>.*import Iterable<Annotation>import Iterable<Annotation>.*import static Iterable<Annotation>.*import ArrayList<>import ArrayList<>.*import static ArrayList<>.*import ArrayList<Description>import ArrayList<Description>.*import static ArrayList<Description>.*import AbstractList<Description>import AbstractList<Description>.*import static AbstractList<Description>.*import AbstractCollection<Description>import AbstractCollection<Description>.*import static AbstractCollection<Description>.*import Collection<Description>import Collection<Description>.*import static Collection<Description>.*import Iterable<Description>import Iterable<Description>.*import static Iterable<Description>.*import List<Description>import List<Description>.*import static List<Description>.*import Annotatableimport Annotatable.*import static Annotatable.*import FrameworkMemberimport FrameworkMember.*import static FrameworkMember.*import FrameworkMember<FrameworkMethod>import FrameworkMember<FrameworkMethod>.*import static FrameworkMember<FrameworkMethod>.*import List<FrameworkMethod>import List<FrameworkMethod>.*import static List<FrameworkMethod>.*import Collection<FrameworkMethod>import Collection<FrameworkMethod>.*import static Collection<FrameworkMethod>.*import Iterable<FrameworkMethod>import Iterable<FrameworkMethod>.*import static Iterable<FrameworkMethod>.*import Reactorimport Reactor.*import static Reactor.*import ReactorListenerimport ReactorListener.*import static ReactorListener.*import ? extends Taskimport ? extends Task.*import static ? extends Task.*import Iterable<? extends Task>import Iterable<? extends Task>.*import static Iterable<? extends Task>.*import TaskBuilder[]import TaskBuilder[].*import static TaskBuilder[].*import ? extends TaskBuilderimport ? extends TaskBuilder.*import static ? extends TaskBuilder.*import Collection<? extends TaskBuilder>import Collection<? extends TaskBuilder>.*import static Collection<? extends TaskBuilder>.*import Iterable<? extends TaskBuilder>import Iterable<? extends TaskBuilder>.*import static Iterable<? extends TaskBuilder>.*import ? extends Milestoneimport ? extends Milestone.*import static ? extends Milestone.*import Collection<? extends Milestone>import Collection<? extends Milestone>.*import static Collection<? extends Milestone>.*import Iterable<? extends Milestone>import Iterable<? extends Milestone>.*import static Iterable<? extends Milestone>.*import Collection<? extends Task>import Collection<? extends Task>.*import static Collection<? extends Task>.*import ComputerConnectorTesterimport ComputerConnectorTester.*import static ComputerConnectorTester.*import AbstractDescribableImpl<ComputerConnectorTester>import AbstractDescribableImpl<ComputerConnectorTester>.*import static AbstractDescribableImpl<ComputerConnectorTester>.*import Describable<ComputerConnectorTester>import Describable<ComputerConnectorTester>.*import static Describable<ComputerConnectorTester>.*import Descriptor<ComputerConnectorTester>import Descriptor<ComputerConnectorTester>.*import static Descriptor<ComputerConnectorTester>.*import FakeLauncherimport FakeLauncher.*import static FakeLauncher.*import HudsonHomeLoaderimport HudsonHomeLoader.*import static HudsonHomeLoader.*import Dimimport Dim.*import static Dim.*import AbstractProject<J,R>import AbstractProject<J,R>.*import static AbstractProject<J,R>.*import Job<J,R>import Job<J,R>.*import static Job<J,R>.*import LazyLoadingJob<J,R>import LazyLoadingJob<J,R>.*import static LazyLoadingJob<J,R>.*import AbstractBuild<J,R>import AbstractBuild<J,R>.*import static AbstractBuild<J,R>.*import Run<J,R>import Run<J,R>.*import static Run<J,R>.*import LazyLoadingRun<J,R>import LazyLoadingRun<J,R>.*import static LazyLoadingRun<J,R>.*import Future<? extends R>import Future<? extends R>.*import static Future<? extends R>.*import PretendSlaveimport PretendSlave.*import static PretendSlave.*import JavaScriptDebuggerimport JavaScriptDebugger.*import static JavaScriptDebugger.*import Recipeimport Recipe.*import static Recipe.*import List<Runner<>>import List<Runner<>>.*import static List<Runner<>>.*import Collection<Runner<>>import Collection<Runner<>>.*import static Collection<Runner<>>.*import Iterable<Runner<>>import Iterable<Runner<>>.*import static Iterable<Runner<>>.*import LenientRunnableimport LenientRunnable.*import static LenientRunnable.*import List<LenientRunnable>import List<LenientRunnable>.*import static List<LenientRunnable>.*import Collection<LenientRunnable>import Collection<LenientRunnable>.*import static Collection<LenientRunnable>.*import Iterable<LenientRunnable>import Iterable<LenientRunnable>.*import static Iterable<LenientRunnable>.*import TestEnvironmentimport TestEnvironment.*import static TestEnvironment.*import JenkinsComputerConnectorTesterimport JenkinsComputerConnectorTester.*import static JenkinsComputerConnectorTester.*import AbstractDescribableImpl<JenkinsComputerConnectorTester>import AbstractDescribableImpl<JenkinsComputerConnectorTester>.*import static AbstractDescribableImpl<JenkinsComputerConnectorTester>.*import Describable<JenkinsComputerConnectorTester>import Describable<JenkinsComputerConnectorTester>.*import static Describable<JenkinsComputerConnectorTester>.*import Descriptor<JenkinsComputerConnectorTester>import Descriptor<JenkinsComputerConnectorTester>.*import static Descriptor<JenkinsComputerConnectorTester>.*import JenkinsRuleimport JenkinsRule.*import static JenkinsRule.*import JenkinsRecipeimport JenkinsRecipe.*import static JenkinsRecipe.*import ? extends Runner<>import ? extends Runner<>.*import static ? extends Runner<>.*import Class<? extends Runner<>>import Class<? extends Runner<>>.*import static Class<? extends Runner<>>.*import DummySecurityRealmimport DummySecurityRealm.*import static DummySecurityRealm.*import JSONWebResponseimport JSONWebResponse.*import static JSONWebResponse.*import MockFolderimport MockFolder.*import static MockFolder.*import TemporaryDirectoryAllocatorimport TemporaryDirectoryAllocator.*import static TemporaryDirectoryAllocator.*import RuleRunnerImplimport RuleRunnerImpl.*import static RuleRunnerImpl.*import Runner<LocalData>import Runner<LocalData>.*import static Runner<LocalData>.*import RunnerImplimport RunnerImpl.*import static RunnerImpl.*import CallStackFrameimport CallStackFrame.*import static CallStackFrame.*import SortedMap<String,Object>import SortedMap<String,Object>.*import static SortedMap<String,Object>.*import ResourceBundleHolderimport ResourceBundleHolder.*import static ResourceBundleHolder.*import RestrictedElementimport RestrictedElement.*import static RestrictedElement.*import ErrorListenerimport ErrorListener.*import static ErrorListener.*import ? extends OptionHandler<>import ? extends OptionHandler<>.*import static ? extends OptionHandler<>.*import Class<? extends OptionHandler<>>import Class<? extends OptionHandler<>>.*import static Class<? extends OptionHandler<>>.*import OptionHandlerFilterimport OptionHandlerFilter.*import static OptionHandlerFilter.*import ExampleModeimport ExampleMode.*import static ExampleMode.*import OptionDefimport OptionDef.*import static OptionDef.*import Setterimport Setter.*import static Setter.*import Setter<>import Setter<>.*import static Setter<>.*import List<OptionHandler<>>import List<OptionHandler<>>.*import static List<OptionHandler<>>.*import Collection<OptionHandler<>>import Collection<OptionHandler<>>.*import static Collection<OptionHandler<>>.*import Iterable<OptionHandler<>>import Iterable<OptionHandler<>>.*import static Iterable<OptionHandler<>>.*import ParserPropertiesimport ParserProperties.*import static ParserProperties.*import Enum<ExampleMode>import Enum<ExampleMode>.*import static Enum<ExampleMode>.*import Comparable<ExampleMode>import Comparable<ExampleMode>.*import static Comparable<ExampleMode>.*import Class<ExampleMode>import Class<ExampleMode>.*import static Class<ExampleMode>.*import ExampleMode[]import ExampleMode[].*import static ExampleMode[].*import Comparator<OptionHandler<>>import Comparator<OptionHandler<>>.*import static Comparator<OptionHandler<>>.*import FieldSetterimport FieldSetter.*import static FieldSetter.*import Parametersimport Parameters.*import static Parameters.*import Setter<? super T>import Setter<? super T>.*import static Setter<? super T>.*import AnnotationVisitorimport AnnotationVisitor.*import static AnnotationVisitor.*import ClassWriterimport ClassWriter.*import static ClassWriter.*import ByteVectorimport ByteVector.*import static ByteVector.*import ClassReaderimport ClassReader.*import static ClassReader.*import Label[]import Label[].*import static Label[].*import FieldVisitorimport FieldVisitor.*import static FieldVisitor.*import TypePathimport TypePath.*import static TypePath.*import Handleimport Handle.*import static Handle.*import MethodWriterimport MethodWriter.*import static MethodWriter.*import FieldWriterimport FieldWriter.*import static FieldWriter.*import Edgeimport Edge.*import static Edge.*import AbstractTearOffimport AbstractTearOff.*import static AbstractTearOff.*import CachingScriptLoaderimport CachingScriptLoader.*import static CachingScriptLoader.*import CachingScriptLoader<S,E>import CachingScriptLoader<S,E>.*import static CachingScriptLoader<S,E>.*import CLTimport CLT.*import static CLT.*import WebAppimport WebApp.*import static WebApp.*import MetaClassimport MetaClass.*import static MetaClass.*import Class<CLT>import Class<CLT>.*import static Class<CLT>.*import Ancestorimport Ancestor.*import static Ancestor.*import AncestorImplimport AncestorImpl.*import static AncestorImpl.*import RequestImplimport RequestImpl.*import static RequestImpl.*import HandlerImplimport HandlerImpl.*import static HandlerImpl.*import AnnotationHandlerimport AnnotationHandler.*import static AnnotationHandler.*import AnnotationHandler<AncestorInPath>import AnnotationHandler<AncestorInPath>.*import static AnnotationHandler<AncestorInPath>.*import InjectedParameterimport InjectedParameter.*import static InjectedParameter.*import BindInterceptorimport BindInterceptor.*import static BindInterceptor.*import Dispatcherimport Dispatcher.*import static Dispatcher.*import ResponseImplimport ResponseImpl.*import static ResponseImpl.*import Facetimport Facet.*import static Facet.*import ClassLoader[]import ClassLoader[].*import static ClassLoader[].*import List<Facet>import List<Facet>.*import static List<Facet>.*import Collection<Facet>import Collection<Facet>.*import static Collection<Facet>.*import Iterable<Facet>import Iterable<Facet>.*import static Iterable<Facet>.*import List<Dispatcher>import List<Dispatcher>.*import static List<Dispatcher>.*import Collection<Dispatcher>import Collection<Dispatcher>.*import static Collection<Dispatcher>.*import Iterable<Dispatcher>import Iterable<Dispatcher>.*import static Iterable<Dispatcher>.*import AnnotationHandler<Header>import AnnotationHandler<Header>.*import static AnnotationHandler<Header>.*import HttpResponseRendererimport HttpResponseRenderer.*import static HttpResponseRenderer.*import AnnotationHandler<>import AnnotationHandler<>.*import static AnnotationHandler<>.*import ? extends AnnotationHandler<>import ? extends AnnotationHandler<>.*import static ? extends AnnotationHandler<>.*import Class<? extends AnnotationHandler<>>import Class<? extends AnnotationHandler<>>.*import static Class<? extends AnnotationHandler<>>.*import TearOffSupportimport TearOffSupport.*import static TearOffSupport.*import SingleLinkedListimport SingleLinkedList.*import static SingleLinkedList.*import SingleLinkedList<>import SingleLinkedList<>.*import static SingleLinkedList<>.*import MethodRefimport MethodRef.*import static MethodRef.*import SingleLinkedList<MethodRef>import SingleLinkedList<MethodRef>.*import static SingleLinkedList<MethodRef>.*import AbstractList<MethodRef>import AbstractList<MethodRef>.*import static AbstractList<MethodRef>.*import AbstractCollection<MethodRef>import AbstractCollection<MethodRef>.*import static AbstractCollection<MethodRef>.*import Collection<MethodRef>import Collection<MethodRef>.*import static Collection<MethodRef>.*import Iterable<MethodRef>import Iterable<MethodRef>.*import static Iterable<MethodRef>.*import List<MethodRef>import List<MethodRef>.*import static List<MethodRef>.*import MetaClassLoaderimport MetaClassLoader.*import static MetaClassLoader.*import AnnotationHandler<QueryParameter>import AnnotationHandler<QueryParameter>.*import static AnnotationHandler<QueryParameter>.*import List<Ancestor>import List<Ancestor>.*import static List<Ancestor>.*import Collection<Ancestor>import Collection<Ancestor>.*import static Collection<Ancestor>.*import Iterable<Ancestor>import Iterable<Ancestor>.*import static Iterable<Ancestor>.*import Staplerimport Stapler.*import static Stapler.*import BoundObjectTableimport BoundObjectTable.*import static BoundObjectTable.*import List<AncestorImpl>import List<AncestorImpl>.*import static List<AncestorImpl>.*import Collection<AncestorImpl>import Collection<AncestorImpl>.*import static Collection<AncestorImpl>.*import Iterable<AncestorImpl>import Iterable<AncestorImpl>.*import static Iterable<AncestorImpl>.*import TokenListimport TokenList.*import static TokenList.*import Flavorimport Flavor.*import static Flavor.*import ModelBuilderimport ModelBuilder.*import static ModelBuilder.*import SingleLinkedList<T>import SingleLinkedList<T>.*import static SingleLinkedList<T>.*import OpenConnectionimport OpenConnection.*import static OpenConnection.*import ThreadLocal<ResponseImpl>import ThreadLocal<ResponseImpl>.*import static ThreadLocal<ResponseImpl>.*import ThreadLocal<RequestImpl>import ThreadLocal<RequestImpl>.*import static ThreadLocal<RequestImpl>.*import ThreadLocal<SimpleDateFormat>import ThreadLocal<SimpleDateFormat>.*import static ThreadLocal<SimpleDateFormat>.*import AbstractTearOff<>import AbstractTearOff<>.*import static AbstractTearOff<>.*import CachingScriptLoader<>import CachingScriptLoader<>.*import static CachingScriptLoader<>.*import ? extends AbstractTearOff<>import ? extends AbstractTearOff<>.*import static ? extends AbstractTearOff<>.*import Class<? extends AbstractTearOff<>>import Class<? extends AbstractTearOff<>>.*import static Class<? extends AbstractTearOff<>>.*import CopyOnWriteArrayList<>import CopyOnWriteArrayList<>.*import static CopyOnWriteArrayList<>.*import CopyOnWriteArrayList<HttpResponseRenderer>import CopyOnWriteArrayList<HttpResponseRenderer>.*import static CopyOnWriteArrayList<HttpResponseRenderer>.*import List<HttpResponseRenderer>import List<HttpResponseRenderer>.*import static List<HttpResponseRenderer>.*import Collection<HttpResponseRenderer>import Collection<HttpResponseRenderer>.*import static Collection<HttpResponseRenderer>.*import Iterable<HttpResponseRenderer>import Iterable<HttpResponseRenderer>.*import static Iterable<HttpResponseRenderer>.*import List<BindInterceptor>import List<BindInterceptor>.*import static List<BindInterceptor>.*import Collection<BindInterceptor>import Collection<BindInterceptor>.*import static Collection<BindInterceptor>.*import Iterable<BindInterceptor>import Iterable<BindInterceptor>.*import static Iterable<BindInterceptor>.*import Map<Class<>,Class<>[]>import Map<Class<>,Class<>[]>.*import static Map<Class<>,Class<>[]>.*import Boundimport Bound.*import static Bound.*import Tableimport Table.*import static Table.*import DataWriterimport DataWriter.*import static DataWriter.*import ExportConfigimport ExportConfig.*import static ExportConfig.*import Enum<Flavor>import Enum<Flavor>.*import static Enum<Flavor>.*import Comparable<Flavor>import Comparable<Flavor>.*import static Comparable<Flavor>.*import Class<Flavor>import Class<Flavor>.*import static Class<Flavor>.*import Flavor[]import Flavor[].*import static Flavor[].*import Modelimport Model.*import static Model.*import TreePrunerimport TreePruner.*import static TreePruner.*import Propertyimport Property.*import static Property.*import List<Property>import List<Property>.*import static List<Property>.*import Collection<Property>import Collection<Property>.*import static Collection<Property>.*import Iterable<Property>import Iterable<Property>.*import static Iterable<Property>.*import NotExportableExceptionimport NotExportableException.*import static NotExportableException.*import Model<? super T>import Model<? super T>.*import static Model<? super T>.*import Model<>import Model<>.*import static Model<>.*import Model<T>import Model<T>.*import static Model<T>.*import Map<Class<>,Model<>>import Map<Class<>,Model<>>.*import static Map<Class<>,Model<>>.*import Comparable<Property>import Comparable<Property>.*import static Comparable<Property>.*import Set<Class<>>import Set<Class<>>.*import static Set<Class<>>.*import Collection<Class<>>import Collection<Class<>>.*import static Collection<Class<>>.*import Iterable<Class<>>import Iterable<Class<>>.*import static Iterable<Class<>>.*import Adjunctimport Adjunct.*import static Adjunct.*import InterceptorAnnotationimport InterceptorAnnotation.*import static InterceptorAnnotation.*import ? extends Interceptorimport ? extends Interceptor.*import static ? extends Interceptor.*import Class<? extends Interceptor>import Class<? extends Interceptor>.*import static Class<? extends Interceptor>.*import Processorimport Processor.*import static Processor.*import Klass<Class<>>import Klass<Class<>>.*import static Klass<Class<>>.*import Iterable<Klass<?>>import Iterable<Klass<?>>.*import static Iterable<Klass<?>>.*import KlassNavigatorimport KlassNavigator.*import static KlassNavigator.*import KlassNavigator<C>import KlassNavigator<C>.*import static KlassNavigator<C>.*import KlassNavigator<Class<>>import KlassNavigator<Class<>>.*import static KlassNavigator<Class<>>.*import ArrayList<Event>import ArrayList<Event>.*import static ArrayList<Event>.*import AbstractList<Event>import AbstractList<Event>.*import static AbstractList<Event>.*import AbstractCollection<Event>import AbstractCollection<Event>.*import static AbstractCollection<Event>.*import Collection<Event>import Collection<Event>.*import static Collection<Event>.*import Iterable<Event>import Iterable<Event>.*import static Iterable<Event>.*import List<Event>import List<Event>.*import static List<Event>.*import Spliterator<Event>import Spliterator<Event>.*import static Spliterator<Event>.*import ? super Eventimport ? super Event.*import static ? super Event.*import Consumer<? super Event>import Consumer<? super Event>.*import static Consumer<? super Event>.*import Iterator<Event>import Iterator<Event>.*import static Iterator<Event>.*import Stream<Event>import Stream<Event>.*import static Stream<Event>.*import BaseStream<Event,Stream<Event>>import BaseStream<Event,Stream<Event>>.*import static BaseStream<Event,Stream<Event>>.*import Predicate<? super Event>import Predicate<? super Event>.*import static Predicate<? super Event>.*import ? extends Eventimport ? extends Event.*import static ? extends Event.*import Collection<? extends Event>import Collection<? extends Event>.*import static Collection<? extends Event>.*import Iterable<? extends Event>import Iterable<? extends Event>.*import static Iterable<? extends Event>.*import ListIterator<Event>import ListIterator<Event>.*import static ListIterator<Event>.*import Comparator<? super Event>import Comparator<? super Event>.*import static Comparator<? super Event>.*import UnaryOperator<Event>import UnaryOperator<Event>.*import static UnaryOperator<Event>.*import Function<Event,Event>import Function<Event,Event>.*import static Function<Event,Event>.*import ContextDataimport ContextData.*import static ContextData.*import StackFrameimport StackFrame.*import static StackFrame.*import FunctionSourceimport FunctionSource.*import static FunctionSource.*import SourceInfoimport SourceInfo.*import static SourceInfo.*import ScopeProviderimport ScopeProvider.*import static ScopeProvider.*import GuiCallbackimport GuiCallback.*import static GuiCallback.*import Enum<FileType>import Enum<FileType>.*import static Enum<FileType>.*import Comparable<FileType>import Comparable<FileType>.*import static Comparable<FileType>.*import Class<FileType>import Class<FileType>.*import static Class<FileType>.*import FileType[]import FileType[].*import static FileType[].*import RunAdhocimport RunAdhoc.*import static RunAdhoc.*import RunAdhocCommandimport RunAdhocCommand.*import static RunAdhocCommand.*import RunAdhocScriptimport RunAdhocScript.*import static RunAdhocScript.*import RundeckApiAuthExceptionimport RundeckApiAuthException.*import static RundeckApiAuthException.*import Enum<Version>import Enum<Version>.*import static Enum<Version>.*import Comparable<Version>import Comparable<Version>.*import static Comparable<Version>.*import Class<Version>import Class<Version>.*import static Class<Version>.*import Version[]import Version[].*import static Version[].*import KeyResourceimport KeyResource.*import static KeyResource.*import List<KeyResource>import List<KeyResource>.*import static List<KeyResource>.*import Collection<KeyResource>import Collection<KeyResource>.*import static Collection<KeyResource>.*import Iterable<KeyResource>import Iterable<KeyResource>.*import static Iterable<KeyResource>.*import RundeckTokenimport RundeckToken.*import static RundeckToken.*import List<RundeckToken>import List<RundeckToken>.*import static List<RundeckToken>.*import Collection<RundeckToken>import Collection<RundeckToken>.*import static Collection<RundeckToken>.*import Iterable<RundeckToken>import Iterable<RundeckToken>.*import static Iterable<RundeckToken>.*import RundeckSystemInfoimport RundeckSystemInfo.*import static RundeckSystemInfo.*import RundeckExecutionStateimport RundeckExecutionState.*import static RundeckExecutionState.*import RundeckNodeimport RundeckNode.*import static RundeckNode.*import List<RundeckNode>import List<RundeckNode>.*import static List<RundeckNode>.*import Collection<RundeckNode>import Collection<RundeckNode>.*import static Collection<RundeckNode>.*import Iterable<RundeckNode>import Iterable<RundeckNode>.*import static Iterable<RundeckNode>.*import RundeckHistoryimport RundeckHistory.*import static RundeckHistory.*import Set<Long>import Set<Long>.*import static Set<Long>.*import Collection<Long>import Collection<Long>.*import static Collection<Long>.*import Iterable<Long>import Iterable<Long>.*import static Iterable<Long>.*import DeleteExecutionsResponseimport DeleteExecutionsResponse.*import static DeleteExecutionsResponse.*import ExecutionQueryimport ExecutionQuery.*import static ExecutionQuery.*import PagedResultsimport PagedResults.*import static PagedResults.*import PagedResults<>import PagedResults<>.*import static PagedResults<>.*import PagedResults<RundeckExecution>import PagedResults<RundeckExecution>.*import static PagedResults<RundeckExecution>.*import Iterable<RundeckExecution>import Iterable<RundeckExecution>.*import static Iterable<RundeckExecution>.*import List<RundeckExecution>import List<RundeckExecution>.*import static List<RundeckExecution>.*import Collection<RundeckExecution>import Collection<RundeckExecution>.*import static Collection<RundeckExecution>.*import RundeckJobDeleteBulkimport RundeckJobDeleteBulk.*import static RundeckJobDeleteBulk.*import RundeckJobsImportimport RundeckJobsImport.*import static RundeckJobsImport.*import RundeckJobsImportResultimport RundeckJobsImportResult.*import static RundeckJobsImportResult.*import List<RundeckJob>import List<RundeckJob>.*import static List<RundeckJob>.*import Collection<RundeckJob>import Collection<RundeckJob>.*import static Collection<RundeckJob>.*import Iterable<RundeckJob>import Iterable<RundeckJob>.*import static Iterable<RundeckJob>.*import ProjectConfigimport ProjectConfig.*import static ProjectConfig.*import ArchiveImportimport ArchiveImport.*import static ArchiveImport.*import RundeckProjectimport RundeckProject.*import static RundeckProject.*import List<RundeckProject>import List<RundeckProject>.*import static List<RundeckProject>.*import Collection<RundeckProject>import Collection<RundeckProject>.*import static Collection<RundeckProject>.*import Iterable<RundeckProject>import Iterable<RundeckProject>.*import static Iterable<RundeckProject>.*import RundeckJobsUUIDImportBehaviorimport RundeckJobsUUIDImportBehavior.*import static RundeckJobsUUIDImportBehavior.*import RundeckJobsImportMethodimport RundeckJobsImportMethod.*import static RundeckJobsImportMethod.*import BaseStateimport BaseState.*import static BaseState.*import RundeckWFExecStateimport RundeckWFExecState.*import static RundeckWFExecState.*import DeleteFailureimport DeleteFailure.*import static DeleteFailure.*import List<DeleteFailure>import List<DeleteFailure>.*import static List<DeleteFailure>.*import Collection<DeleteFailure>import Collection<DeleteFailure>.*import static Collection<DeleteFailure>.*import Iterable<DeleteFailure>import Iterable<DeleteFailure>.*import static Iterable<DeleteFailure>.*import StorageResourceimport StorageResource.*import static StorageResource.*import Enum<AbortStatus>import Enum<AbortStatus>.*import static Enum<AbortStatus>.*import Comparable<AbortStatus>import Comparable<AbortStatus>.*import static Comparable<AbortStatus>.*import Class<AbortStatus>import Class<AbortStatus>.*import static Class<AbortStatus>.*import AbortStatus[]import AbortStatus[].*import static AbortStatus[].*import EventStatusimport EventStatus.*import static EventStatus.*import Enum<EventStatus>import Enum<EventStatus>.*import static Enum<EventStatus>.*import Comparable<EventStatus>import Comparable<EventStatus>.*import static Comparable<EventStatus>.*import Class<EventStatus>import Class<EventStatus>.*import static Class<EventStatus>.*import RundeckEventimport RundeckEvent.*import static RundeckEvent.*import EventStatus[]import EventStatus[].*import static EventStatus[].*import NodeSummaryimport NodeSummary.*import static NodeSummary.*import ExecutionStatus[]import ExecutionStatus[].*import static ExecutionStatus[].*import RundeckNodeIdentityimport RundeckNodeIdentity.*import static RundeckNodeIdentity.*import Set<RundeckNodeIdentity>import Set<RundeckNodeIdentity>.*import static Set<RundeckNodeIdentity>.*import Collection<RundeckNodeIdentity>import Collection<RundeckNodeIdentity>.*import static Collection<RundeckNodeIdentity>.*import Iterable<RundeckNodeIdentity>import Iterable<RundeckNodeIdentity>.*import static Iterable<RundeckNodeIdentity>.*import WorkflowStateimport WorkflowState.*import static WorkflowState.*import WorkflowStepContextStateimport WorkflowStepContextState.*import static WorkflowStepContextState.*import List<WorkflowStepContextState>import List<WorkflowStepContextState>.*import static List<WorkflowStepContextState>.*import Collection<WorkflowStepContextState>import Collection<WorkflowStepContextState>.*import static Collection<WorkflowStepContextState>.*import Iterable<WorkflowStepContextState>import Iterable<WorkflowStepContextState>.*import static Iterable<WorkflowStepContextState>.*import Map<String,List<WorkflowStepContextState>>import Map<String,List<WorkflowStepContextState>>.*import static Map<String,List<WorkflowStepContextState>>.*import List<RundeckEvent>import List<RundeckEvent>.*import static List<RundeckEvent>.*import Collection<RundeckEvent>import Collection<RundeckEvent>.*import static Collection<RundeckEvent>.*import Iterable<RundeckEvent>import Iterable<RundeckEvent>.*import static Iterable<RundeckEvent>.*import RundeckJobDeleteimport RundeckJobDelete.*import static RundeckJobDelete.*import Iterable<RundeckJobDelete>import Iterable<RundeckJobDelete>.*import static Iterable<RundeckJobDelete>.*import Spliterator<RundeckJobDelete>import Spliterator<RundeckJobDelete>.*import static Spliterator<RundeckJobDelete>.*import ? super RundeckJobDeleteimport ? super RundeckJobDelete.*import static ? super RundeckJobDelete.*import Consumer<? super RundeckJobDelete>import Consumer<? super RundeckJobDelete>.*import static Consumer<? super RundeckJobDelete>.*import Iterator<RundeckJobDelete>import Iterator<RundeckJobDelete>.*import static Iterator<RundeckJobDelete>.*import List<RundeckJobDelete>import List<RundeckJobDelete>.*import static List<RundeckJobDelete>.*import Collection<RundeckJobDelete>import Collection<RundeckJobDelete>.*import static Collection<RundeckJobDelete>.*import Enum<RundeckJobsImportMethod>import Enum<RundeckJobsImportMethod>.*import static Enum<RundeckJobsImportMethod>.*import Comparable<RundeckJobsImportMethod>import Comparable<RundeckJobsImportMethod>.*import static Comparable<RundeckJobsImportMethod>.*import Class<RundeckJobsImportMethod>import Class<RundeckJobsImportMethod>.*import static Class<RundeckJobsImportMethod>.*import RundeckJobsImportMethod[]import RundeckJobsImportMethod[].*import static RundeckJobsImportMethod[].*import Map<RundeckJob,String>import Map<RundeckJob,String>.*import static Map<RundeckJob,String>.*import Enum<RundeckJobsUUIDImportBehavior>import Enum<RundeckJobsUUIDImportBehavior>.*import static Enum<RundeckJobsUUIDImportBehavior>.*import Comparable<RundeckJobsUUIDImportBehavior>import Comparable<RundeckJobsUUIDImportBehavior>.*import static Comparable<RundeckJobsUUIDImportBehavior>.*import Class<RundeckJobsUUIDImportBehavior>import Class<RundeckJobsUUIDImportBehavior>.*import static Class<RundeckJobsUUIDImportBehavior>.*import RundeckJobsUUIDImportBehavior[]import RundeckJobsUUIDImportBehavior[].*import static RundeckJobsUUIDImportBehavior[].*import Enum<RundeckLogLevel>import Enum<RundeckLogLevel>.*import static Enum<RundeckLogLevel>.*import Comparable<RundeckLogLevel>import Comparable<RundeckLogLevel>.*import static Comparable<RundeckLogLevel>.*import Class<RundeckLogLevel>import Class<RundeckLogLevel>.*import static Class<RundeckLogLevel>.*import RundeckLogLevel[]import RundeckLogLevel[].*import static RundeckLogLevel[].*import Enum<RundeckWFExecState>import Enum<RundeckWFExecState>.*import static Enum<RundeckWFExecState>.*import Comparable<RundeckWFExecState>import Comparable<RundeckWFExecState>.*import static Comparable<RundeckWFExecState>.*import Class<RundeckWFExecState>import Class<RundeckWFExecState>.*import static Class<RundeckWFExecState>.*import RundeckWFExecState[]import RundeckWFExecState[].*import static RundeckWFExecState[].*import ? extends StorageResourceimport ? extends StorageResource.*import static ? extends StorageResource.*import List<? extends StorageResource>import List<? extends StorageResource>.*import static List<? extends StorageResource>.*import Collection<? extends StorageResource>import Collection<? extends StorageResource>.*import static Collection<? extends StorageResource>.*import Iterable<? extends StorageResource>import Iterable<? extends StorageResource>.*import static Iterable<? extends StorageResource>.*import WorkflowStepStateimport WorkflowStepState.*import static WorkflowStepState.*import List<WorkflowStepState>import List<WorkflowStepState>.*import static List<WorkflowStepState>.*import Collection<WorkflowStepState>import Collection<WorkflowStepState>.*import static Collection<WorkflowStepState>.*import Iterable<WorkflowStepState>import Iterable<WorkflowStepState>.*import static Iterable<WorkflowStepState>.*import Map<String,WorkflowStepContextState>import Map<String,WorkflowStepContextState>.*import static Map<String,WorkflowStepContextState>.*import XmlNodeParser<T>import XmlNodeParser<T>.*import static XmlNodeParser<T>.*import BeansExceptionimport BeansException.*import static BeansException.*import PropertyAccessExceptionimport PropertyAccessException.*import static PropertyAccessException.*import ErrorCodedimport ErrorCoded.*import static ErrorCoded.*import MethodParameterimport MethodParameter.*import static MethodParameter.*import TypeMismatchExceptionimport TypeMismatchException.*import static TypeMismatchException.*import BeanFactoryimport BeanFactory.*import static BeanFactory.*import NoSuchBeanDefinitionExceptionimport NoSuchBeanDefinitionException.*import static NoSuchBeanDefinitionException.*import HierarchicalBeanFactoryimport HierarchicalBeanFactory.*import static HierarchicalBeanFactory.*import ListableBeanFactoryimport ListableBeanFactory.*import static ListableBeanFactory.*import AutowireCapableBeanFactoryimport AutowireCapableBeanFactory.*import static AutowireCapableBeanFactory.*import DependencyDescriptorimport DependencyDescriptor.*import static DependencyDescriptor.*import MessageSourceimport MessageSource.*import static MessageSource.*import ApplicationEventPublisherimport ApplicationEventPublisher.*import static ApplicationEventPublisher.*import ResourcePatternResolverimport ResourcePatternResolver.*import static ResourcePatternResolver.*import ApplicationEventimport ApplicationEvent.*import static ApplicationEvent.*import MessageSourceResolvableimport MessageSourceResolvable.*import static MessageSourceResolvable.*import NoSuchMessageExceptionimport NoSuchMessageException.*import static NoSuchMessageException.*import ParameterNameDiscovererimport ParameterNameDiscoverer.*import static ParameterNameDiscoverer.*import InputStreamSourceimport InputStreamSource.*import static InputStreamSource.*import ResourceLoaderimport ResourceLoader.*import static ResourceLoader.*import Resource[]import Resource[].*import static Resource[].*import ISqlJetMuteximport ISqlJetMutex.*import static ISqlJetMutex.*import SqlJetEncodingimport SqlJetEncoding.*import static SqlJetEncoding.*import Enum<SqlJetEncoding>import Enum<SqlJetEncoding>.*import static Enum<SqlJetEncoding>.*import Comparable<SqlJetEncoding>import Comparable<SqlJetEncoding>.*import static Comparable<SqlJetEncoding>.*import Class<SqlJetEncoding>import Class<SqlJetEncoding>.*import static Class<SqlJetEncoding>.*import SqlJetEncoding[]import SqlJetEncoding[].*import static SqlJetEncoding[].*import SqlJetErrorCodeimport SqlJetErrorCode.*import static SqlJetErrorCode.*import Enum<SqlJetErrorCode>import Enum<SqlJetErrorCode>.*import static Enum<SqlJetErrorCode>.*import Comparable<SqlJetErrorCode>import Comparable<SqlJetErrorCode>.*import static Comparable<SqlJetErrorCode>.*import Class<SqlJetErrorCode>import Class<SqlJetErrorCode>.*import static Class<SqlJetErrorCode>.*import SqlJetErrorCode[]import SqlJetErrorCode[].*import static SqlJetErrorCode[].*import SqlJetExceptionimport SqlJetException.*import static SqlJetException.*import SqlJetIOErrorCodeimport SqlJetIOErrorCode.*import static SqlJetIOErrorCode.*import Enum<SqlJetIOErrorCode>import Enum<SqlJetIOErrorCode>.*import static Enum<SqlJetIOErrorCode>.*import Comparable<SqlJetIOErrorCode>import Comparable<SqlJetIOErrorCode>.*import static Comparable<SqlJetIOErrorCode>.*import Class<SqlJetIOErrorCode>import Class<SqlJetIOErrorCode>.*import static Class<SqlJetIOErrorCode>.*import SqlJetIOErrorCode[]import SqlJetIOErrorCode[].*import static SqlJetIOErrorCode[].*import SqlJetIOExceptionimport SqlJetIOException.*import static SqlJetIOException.*import SqlJetTransactionModeimport SqlJetTransactionMode.*import static SqlJetTransactionMode.*import Enum<SqlJetTransactionMode>import Enum<SqlJetTransactionMode>.*import static Enum<SqlJetTransactionMode>.*import Comparable<SqlJetTransactionMode>import Comparable<SqlJetTransactionMode>.*import static Comparable<SqlJetTransactionMode>.*import Class<SqlJetTransactionMode>import Class<SqlJetTransactionMode>.*import static Class<SqlJetTransactionMode>.*import SqlJetTransactionMode[]import SqlJetTransactionMode[].*import static SqlJetTransactionMode[].*import SqlJetValueTypeimport SqlJetValueType.*import static SqlJetValueType.*import Enum<SqlJetValueType>import Enum<SqlJetValueType>.*import static Enum<SqlJetValueType>.*import Comparable<SqlJetValueType>import Comparable<SqlJetValueType>.*import static Comparable<SqlJetValueType>.*import Class<SqlJetValueType>import Class<SqlJetValueType>.*import static Class<SqlJetValueType>.*import SqlJetValueType[]import SqlJetValueType[].*import static SqlJetValueType[].*import ISqlJetBackendimport ISqlJetBackend.*import static ISqlJetBackend.*import ISqlJetSchemaimport ISqlJetSchema.*import static ISqlJetSchema.*import SqlJetSafetyLevelimport SqlJetSafetyLevel.*import static SqlJetSafetyLevel.*import SqlJetTransactionStateimport SqlJetTransactionState.*import static SqlJetTransactionState.*import ISqlJetBtreeimport ISqlJetBtree.*import static ISqlJetBtree.*import ISqlJetDbHandleimport ISqlJetDbHandle.*import static ISqlJetDbHandle.*import ISqlJetKeyInfoimport ISqlJetKeyInfo.*import static ISqlJetKeyInfo.*import ISqlJetBtreeCursorimport ISqlJetBtreeCursor.*import static ISqlJetBtreeCursor.*import ISqlJetPagerimport ISqlJetPager.*import static ISqlJetPager.*import SqlJetSavepointOperationimport SqlJetSavepointOperation.*import static SqlJetSavepointOperation.*import SqlJetSchemaimport SqlJetSchema.*import static SqlJetSchema.*import SqlJetBtreeTableCreateFlagsimport SqlJetBtreeTableCreateFlags.*import static SqlJetBtreeTableCreateFlags.*import Set<SqlJetBtreeTableCreateFlags>import Set<SqlJetBtreeTableCreateFlags>.*import static Set<SqlJetBtreeTableCreateFlags>.*import Collection<SqlJetBtreeTableCreateFlags>import Collection<SqlJetBtreeTableCreateFlags>.*import static Collection<SqlJetBtreeTableCreateFlags>.*import Iterable<SqlJetBtreeTableCreateFlags>import Iterable<SqlJetBtreeTableCreateFlags>.*import static Iterable<SqlJetBtreeTableCreateFlags>.*import SqlJetAutoVacuumModeimport SqlJetAutoVacuumMode.*import static SqlJetAutoVacuumMode.*import SqlJetPagerJournalModeimport SqlJetPagerJournalMode.*import static SqlJetPagerJournalMode.*import SqlJetBtreeFlagsimport SqlJetBtreeFlags.*import static SqlJetBtreeFlags.*import Set<SqlJetBtreeFlags>import Set<SqlJetBtreeFlags>.*import static Set<SqlJetBtreeFlags>.*import Collection<SqlJetBtreeFlags>import Collection<SqlJetBtreeFlags>.*import static Collection<SqlJetBtreeFlags>.*import Iterable<SqlJetBtreeFlags>import Iterable<SqlJetBtreeFlags>.*import static Iterable<SqlJetBtreeFlags>.*import SqlJetFileTypeimport SqlJetFileType.*import static SqlJetFileType.*import SqlJetFileOpenPermissionimport SqlJetFileOpenPermission.*import static SqlJetFileOpenPermission.*import Set<SqlJetFileOpenPermission>import Set<SqlJetFileOpenPermission>.*import static Set<SqlJetFileOpenPermission>.*import Collection<SqlJetFileOpenPermission>import Collection<SqlJetFileOpenPermission>.*import static Collection<SqlJetFileOpenPermission>.*import Iterable<SqlJetFileOpenPermission>import Iterable<SqlJetFileOpenPermission>.*import static Iterable<SqlJetFileOpenPermission>.*import ISqlJetMemoryPointerimport ISqlJetMemoryPointer.*import static ISqlJetMemoryPointer.*import ISqlJetUnpackedRecordimport ISqlJetUnpackedRecord.*import static ISqlJetUnpackedRecord.*import ISqlJetCallbackimport ISqlJetCallback.*import static ISqlJetCallback.*import ISqlJetCollSeqimport ISqlJetCollSeq.*import static ISqlJetCollSeq.*import ISqlJetConfigimport ISqlJetConfig.*import static ISqlJetConfig.*import ISqlJetBusyHandlerimport ISqlJetBusyHandler.*import static ISqlJetBusyHandler.*import ISqlJetOptionsimport ISqlJetOptions.*import static ISqlJetOptions.*import List<ISqlJetBackend>import List<ISqlJetBackend>.*import static List<ISqlJetBackend>.*import Collection<ISqlJetBackend>import Collection<ISqlJetBackend>.*import static Collection<ISqlJetBackend>.*import Iterable<ISqlJetBackend>import Iterable<ISqlJetBackend>.*import static Iterable<ISqlJetBackend>.*import SqlJetDbFlagsimport SqlJetDbFlags.*import static SqlJetDbFlags.*import Set<SqlJetDbFlags>import Set<SqlJetDbFlags>.*import static Set<SqlJetDbFlags>.*import Collection<SqlJetDbFlags>import Collection<SqlJetDbFlags>.*import static Collection<SqlJetDbFlags>.*import Iterable<SqlJetDbFlags>import Iterable<SqlJetDbFlags>.*import static Iterable<SqlJetDbFlags>.*import ISqlJetFileSystemimport ISqlJetFileSystem.*import static ISqlJetFileSystem.*import ISqlJetFileimport ISqlJetFile.*import static ISqlJetFile.*import SqlJetDeviceCharacteristicsimport SqlJetDeviceCharacteristics.*import static SqlJetDeviceCharacteristics.*import Set<SqlJetDeviceCharacteristics>import Set<SqlJetDeviceCharacteristics>.*import static Set<SqlJetDeviceCharacteristics>.*import Collection<SqlJetDeviceCharacteristics>import Collection<SqlJetDeviceCharacteristics>.*import static Collection<SqlJetDeviceCharacteristics>.*import Iterable<SqlJetDeviceCharacteristics>import Iterable<SqlJetDeviceCharacteristics>.*import static Iterable<SqlJetDeviceCharacteristics>.*import SqlJetLockTypeimport SqlJetLockType.*import static SqlJetLockType.*import SqlJetSyncFlagsimport SqlJetSyncFlags.*import static SqlJetSyncFlags.*import Set<SqlJetSyncFlags>import Set<SqlJetSyncFlags>.*import static Set<SqlJetSyncFlags>.*import Collection<SqlJetSyncFlags>import Collection<SqlJetSyncFlags>.*import static Collection<SqlJetSyncFlags>.*import Iterable<SqlJetSyncFlags>import Iterable<SqlJetSyncFlags>.*import static Iterable<SqlJetSyncFlags>.*import SqlJetFileAccesPermissionimport SqlJetFileAccesPermission.*import static SqlJetFileAccesPermission.*import ISqlJetFileSystemsManagerimport ISqlJetFileSystemsManager.*import static ISqlJetFileSystemsManager.*import ISqlJetFuncDefimport ISqlJetFuncDef.*import static ISqlJetFuncDef.*import SqlJetUnpackedRecordimport SqlJetUnpackedRecord.*import static SqlJetUnpackedRecord.*import ISqlJetMemoryBufferimport ISqlJetMemoryBuffer.*import static ISqlJetMemoryBuffer.*import ISqlJetPageimport ISqlJetPage.*import static ISqlJetPage.*import SqlJetPageFlagsimport SqlJetPageFlags.*import static SqlJetPageFlags.*import Set<SqlJetPageFlags>import Set<SqlJetPageFlags>.*import static Set<SqlJetPageFlags>.*import Collection<SqlJetPageFlags>import Collection<SqlJetPageFlags>.*import static Collection<SqlJetPageFlags>.*import Iterable<SqlJetPageFlags>import Iterable<SqlJetPageFlags>.*import static Iterable<SqlJetPageFlags>.*import ISqlJetPageCallbackimport ISqlJetPageCallback.*import static ISqlJetPageCallback.*import SqlJetPagerLockingModeimport SqlJetPagerLockingMode.*import static SqlJetPagerLockingMode.*import SqlJetPagerFlagsimport SqlJetPagerFlags.*import static SqlJetPagerFlags.*import Set<SqlJetPagerFlags>import Set<SqlJetPagerFlags>.*import static Set<SqlJetPagerFlags>.*import Collection<SqlJetPagerFlags>import Collection<SqlJetPagerFlags>.*import static Collection<SqlJetPagerFlags>.*import Iterable<SqlJetPagerFlags>import Iterable<SqlJetPagerFlags>.*import static Iterable<SqlJetPagerFlags>.*import ISqlJetReleasableimport ISqlJetReleasable.*import static ISqlJetReleasable.*import ISqlJetRowSetimport ISqlJetRowSet.*import static ISqlJetRowSet.*import ISqlJetVdbeMemimport ISqlJetVdbeMem.*import static ISqlJetVdbeMem.*import SqlJetTypeAffinityimport SqlJetTypeAffinity.*import static SqlJetTypeAffinity.*import SqlJetVdbeMemFlagsimport SqlJetVdbeMemFlags.*import static SqlJetVdbeMemFlags.*import Set<SqlJetVdbeMemFlags>import Set<SqlJetVdbeMemFlags>.*import static Set<SqlJetVdbeMemFlags>.*import Collection<SqlJetVdbeMemFlags>import Collection<SqlJetVdbeMemFlags>.*import static Collection<SqlJetVdbeMemFlags>.*import Iterable<SqlJetVdbeMemFlags>import Iterable<SqlJetVdbeMemFlags>.*import static Iterable<SqlJetVdbeMemFlags>.*import Enum<SqlJetAutoVacuumMode>import Enum<SqlJetAutoVacuumMode>.*import static Enum<SqlJetAutoVacuumMode>.*import Comparable<SqlJetAutoVacuumMode>import Comparable<SqlJetAutoVacuumMode>.*import static Comparable<SqlJetAutoVacuumMode>.*import Class<SqlJetAutoVacuumMode>import Class<SqlJetAutoVacuumMode>.*import static Class<SqlJetAutoVacuumMode>.*import SqlJetAutoVacuumMode[]import SqlJetAutoVacuumMode[].*import static SqlJetAutoVacuumMode[].*import Enum<SqlJetBtreeFlags>import Enum<SqlJetBtreeFlags>.*import static Enum<SqlJetBtreeFlags>.*import Comparable<SqlJetBtreeFlags>import Comparable<SqlJetBtreeFlags>.*import static Comparable<SqlJetBtreeFlags>.*import Class<SqlJetBtreeFlags>import Class<SqlJetBtreeFlags>.*import static Class<SqlJetBtreeFlags>.*import SqlJetBtreeFlags[]import SqlJetBtreeFlags[].*import static SqlJetBtreeFlags[].*import Enum<SqlJetBtreeTableCreateFlags>import Enum<SqlJetBtreeTableCreateFlags>.*import static Enum<SqlJetBtreeTableCreateFlags>.*import Comparable<SqlJetBtreeTableCreateFlags>import Comparable<SqlJetBtreeTableCreateFlags>.*import static Comparable<SqlJetBtreeTableCreateFlags>.*import Class<SqlJetBtreeTableCreateFlags>import Class<SqlJetBtreeTableCreateFlags>.*import static Class<SqlJetBtreeTableCreateFlags>.*import SqlJetBtreeTableCreateFlags[]import SqlJetBtreeTableCreateFlags[].*import static SqlJetBtreeTableCreateFlags[].*import SqlJetCloneableimport SqlJetCloneable.*import static SqlJetCloneable.*import Enum<SqlJetDbFlags>import Enum<SqlJetDbFlags>.*import static Enum<SqlJetDbFlags>.*import Comparable<SqlJetDbFlags>import Comparable<SqlJetDbFlags>.*import static Comparable<SqlJetDbFlags>.*import Class<SqlJetDbFlags>import Class<SqlJetDbFlags>.*import static Class<SqlJetDbFlags>.*import SqlJetDbFlags[]import SqlJetDbFlags[].*import static SqlJetDbFlags[].*import Enum<SqlJetDeviceCharacteristics>import Enum<SqlJetDeviceCharacteristics>.*import static Enum<SqlJetDeviceCharacteristics>.*import Comparable<SqlJetDeviceCharacteristics>import Comparable<SqlJetDeviceCharacteristics>.*import static Comparable<SqlJetDeviceCharacteristics>.*import Class<SqlJetDeviceCharacteristics>import Class<SqlJetDeviceCharacteristics>.*import static Class<SqlJetDeviceCharacteristics>.*import SqlJetDeviceCharacteristics[]import SqlJetDeviceCharacteristics[].*import static SqlJetDeviceCharacteristics[].*import Enum<SqlJetFileAccesPermission>import Enum<SqlJetFileAccesPermission>.*import static Enum<SqlJetFileAccesPermission>.*import Comparable<SqlJetFileAccesPermission>import Comparable<SqlJetFileAccesPermission>.*import static Comparable<SqlJetFileAccesPermission>.*import Class<SqlJetFileAccesPermission>import Class<SqlJetFileAccesPermission>.*import static Class<SqlJetFileAccesPermission>.*import SqlJetFileAccesPermission[]import SqlJetFileAccesPermission[].*import static SqlJetFileAccesPermission[].*import Enum<SqlJetFileOpenPermission>import Enum<SqlJetFileOpenPermission>.*import static Enum<SqlJetFileOpenPermission>.*import Comparable<SqlJetFileOpenPermission>import Comparable<SqlJetFileOpenPermission>.*import static Comparable<SqlJetFileOpenPermission>.*import Class<SqlJetFileOpenPermission>import Class<SqlJetFileOpenPermission>.*import static Class<SqlJetFileOpenPermission>.*import SqlJetFileOpenPermission[]import SqlJetFileOpenPermission[].*import static SqlJetFileOpenPermission[].*import Enum<SqlJetFileType>import Enum<SqlJetFileType>.*import static Enum<SqlJetFileType>.*import Comparable<SqlJetFileType>import Comparable<SqlJetFileType>.*import static Comparable<SqlJetFileType>.*import Class<SqlJetFileType>import Class<SqlJetFileType>.*import static Class<SqlJetFileType>.*import SqlJetFileType[]import SqlJetFileType[].*import static SqlJetFileType[].*import Enum<SqlJetLockType>import Enum<SqlJetLockType>.*import static Enum<SqlJetLockType>.*import Comparable<SqlJetLockType>import Comparable<SqlJetLockType>.*import static Comparable<SqlJetLockType>.*import Class<SqlJetLockType>import Class<SqlJetLockType>.*import static Class<SqlJetLockType>.*import SqlJetLockType[]import SqlJetLockType[].*import static SqlJetLockType[].*import Enum<SqlJetPageFlags>import Enum<SqlJetPageFlags>.*import static Enum<SqlJetPageFlags>.*import Comparable<SqlJetPageFlags>import Comparable<SqlJetPageFlags>.*import static Comparable<SqlJetPageFlags>.*import Class<SqlJetPageFlags>import Class<SqlJetPageFlags>.*import static Class<SqlJetPageFlags>.*import SqlJetPageFlags[]import SqlJetPageFlags[].*import static SqlJetPageFlags[].*import Enum<SqlJetPagerFlags>import Enum<SqlJetPagerFlags>.*import static Enum<SqlJetPagerFlags>.*import Comparable<SqlJetPagerFlags>import Comparable<SqlJetPagerFlags>.*import static Comparable<SqlJetPagerFlags>.*import Class<SqlJetPagerFlags>import Class<SqlJetPagerFlags>.*import static Class<SqlJetPagerFlags>.*import SqlJetPagerFlags[]import SqlJetPagerFlags[].*import static SqlJetPagerFlags[].*import Enum<SqlJetPagerJournalMode>import Enum<SqlJetPagerJournalMode>.*import static Enum<SqlJetPagerJournalMode>.*import Comparable<SqlJetPagerJournalMode>import Comparable<SqlJetPagerJournalMode>.*import static Comparable<SqlJetPagerJournalMode>.*import Class<SqlJetPagerJournalMode>import Class<SqlJetPagerJournalMode>.*import static Class<SqlJetPagerJournalMode>.*import SqlJetPagerJournalMode[]import SqlJetPagerJournalMode[].*import static SqlJetPagerJournalMode[].*import Enum<SqlJetPagerLockingMode>import Enum<SqlJetPagerLockingMode>.*import static Enum<SqlJetPagerLockingMode>.*import Comparable<SqlJetPagerLockingMode>import Comparable<SqlJetPagerLockingMode>.*import static Comparable<SqlJetPagerLockingMode>.*import Class<SqlJetPagerLockingMode>import Class<SqlJetPagerLockingMode>.*import static Class<SqlJetPagerLockingMode>.*import SqlJetPagerLockingMode[]import SqlJetPagerLockingMode[].*import static SqlJetPagerLockingMode[].*import Enum<SqlJetSafetyLevel>import Enum<SqlJetSafetyLevel>.*import static Enum<SqlJetSafetyLevel>.*import Comparable<SqlJetSafetyLevel>import Comparable<SqlJetSafetyLevel>.*import static Comparable<SqlJetSafetyLevel>.*import Class<SqlJetSafetyLevel>import Class<SqlJetSafetyLevel>.*import static Class<SqlJetSafetyLevel>.*import SqlJetSafetyLevel[]import SqlJetSafetyLevel[].*import static SqlJetSafetyLevel[].*import Enum<SqlJetSavepointOperation>import Enum<SqlJetSavepointOperation>.*import static Enum<SqlJetSavepointOperation>.*import Comparable<SqlJetSavepointOperation>import Comparable<SqlJetSavepointOperation>.*import static Comparable<SqlJetSavepointOperation>.*import Class<SqlJetSavepointOperation>import Class<SqlJetSavepointOperation>.*import static Class<SqlJetSavepointOperation>.*import SqlJetSavepointOperation[]import SqlJetSavepointOperation[].*import static SqlJetSavepointOperation[].*import Enum<SqlJetSyncFlags>import Enum<SqlJetSyncFlags>.*import static Enum<SqlJetSyncFlags>.*import Comparable<SqlJetSyncFlags>import Comparable<SqlJetSyncFlags>.*import static Comparable<SqlJetSyncFlags>.*import Class<SqlJetSyncFlags>import Class<SqlJetSyncFlags>.*import static Class<SqlJetSyncFlags>.*import SqlJetSyncFlags[]import SqlJetSyncFlags[].*import static SqlJetSyncFlags[].*import Enum<SqlJetTransactionState>import Enum<SqlJetTransactionState>.*import static Enum<SqlJetTransactionState>.*import Comparable<SqlJetTransactionState>import Comparable<SqlJetTransactionState>.*import static Comparable<SqlJetTransactionState>.*import Class<SqlJetTransactionState>import Class<SqlJetTransactionState>.*import static Class<SqlJetTransactionState>.*import SqlJetTransactionState[]import SqlJetTransactionState[].*import static SqlJetTransactionState[].*import SqlJetUnpackedRecordFlagsimport SqlJetUnpackedRecordFlags.*import static SqlJetUnpackedRecordFlags.*import Enum<SqlJetUnpackedRecordFlags>import Enum<SqlJetUnpackedRecordFlags>.*import static Enum<SqlJetUnpackedRecordFlags>.*import Comparable<SqlJetUnpackedRecordFlags>import Comparable<SqlJetUnpackedRecordFlags>.*import static Comparable<SqlJetUnpackedRecordFlags>.*import Class<SqlJetUnpackedRecordFlags>import Class<SqlJetUnpackedRecordFlags>.*import static Class<SqlJetUnpackedRecordFlags>.*import SqlJetUnpackedRecordFlags[]import SqlJetUnpackedRecordFlags[].*import static SqlJetUnpackedRecordFlags[].*import ISqlJetTriggerDefimport ISqlJetTriggerDef.*import static ISqlJetTriggerDef.*import ISqlJetIndexDefimport ISqlJetIndexDef.*import static ISqlJetIndexDef.*import ISqlJetViewDefimport ISqlJetViewDef.*import static ISqlJetViewDef.*import ISqlJetVirtualTableDefimport ISqlJetVirtualTableDef.*import static ISqlJetVirtualTableDef.*import ISqlJetTableDefimport ISqlJetTableDef.*import static ISqlJetTableDef.*import ISqlJetBtreeDataTableimport ISqlJetBtreeDataTable.*import static ISqlJetBtreeDataTable.*import Set<ISqlJetIndexDef>import Set<ISqlJetIndexDef>.*import static Set<ISqlJetIndexDef>.*import Collection<ISqlJetIndexDef>import Collection<ISqlJetIndexDef>.*import static Collection<ISqlJetIndexDef>.*import Iterable<ISqlJetIndexDef>import Iterable<ISqlJetIndexDef>.*import static Iterable<ISqlJetIndexDef>.*import ISqlJetBtreeSchemaTableimport ISqlJetBtreeSchemaTable.*import static ISqlJetBtreeSchemaTable.*import ISqlJetBtreeTableimport ISqlJetBtreeTable.*import static ISqlJetBtreeTable.*import ISqlJetBtreeIndexTableimport ISqlJetBtreeIndexTable.*import static ISqlJetBtreeIndexTable.*import SqlJetConflictActionimport SqlJetConflictAction.*import static SqlJetConflictAction.*import Map<String,ISqlJetBtreeIndexTable>import Map<String,ISqlJetBtreeIndexTable>.*import static Map<String,ISqlJetBtreeIndexTable>.*import Map<String,ISqlJetIndexDef>import Map<String,ISqlJetIndexDef>.*import static Map<String,ISqlJetIndexDef>.*import ISqlJetBtreeRecordimport ISqlJetBtreeRecord.*import static ISqlJetBtreeRecord.*import List<ISqlJetVdbeMem>import List<ISqlJetVdbeMem>.*import static List<ISqlJetVdbeMem>.*import Collection<ISqlJetVdbeMem>import Collection<ISqlJetVdbeMem>.*import static Collection<ISqlJetVdbeMem>.*import Iterable<ISqlJetVdbeMem>import Iterable<ISqlJetVdbeMem>.*import static Iterable<ISqlJetVdbeMem>.*import SqlJetKeyInfoimport SqlJetKeyInfo.*import static SqlJetKeyInfo.*import ISqlJetCollSeq[]import ISqlJetCollSeq[].*import static ISqlJetCollSeq[].*import Set<SqlJetUnpackedRecordFlags>import Set<SqlJetUnpackedRecordFlags>.*import static Set<SqlJetUnpackedRecordFlags>.*import Collection<SqlJetUnpackedRecordFlags>import Collection<SqlJetUnpackedRecordFlags>.*import static Collection<SqlJetUnpackedRecordFlags>.*import Iterable<SqlJetUnpackedRecordFlags>import Iterable<SqlJetUnpackedRecordFlags>.*import static Iterable<SqlJetUnpackedRecordFlags>.*import SqlJetVdbeMemimport SqlJetVdbeMem.*import static SqlJetVdbeMem.*import SqlJetVdbeMem[]import SqlJetVdbeMem[].*import static SqlJetVdbeMem[].*import SqlJetVdbeMemPoolimport SqlJetVdbeMemPool.*import static SqlJetVdbeMemPool.*import EnumSet<SqlJetVdbeMemFlags>import EnumSet<SqlJetVdbeMemFlags>.*import static EnumSet<SqlJetVdbeMemFlags>.*import AbstractSet<SqlJetVdbeMemFlags>import AbstractSet<SqlJetVdbeMemFlags>.*import static AbstractSet<SqlJetVdbeMemFlags>.*import AbstractCollection<SqlJetVdbeMemFlags>import AbstractCollection<SqlJetVdbeMemFlags>.*import static AbstractCollection<SqlJetVdbeMemFlags>.*import Enum<SqlJetVdbeMemFlags>import Enum<SqlJetVdbeMemFlags>.*import static Enum<SqlJetVdbeMemFlags>.*import Comparable<SqlJetVdbeMemFlags>import Comparable<SqlJetVdbeMemFlags>.*import static Comparable<SqlJetVdbeMemFlags>.*import Class<SqlJetVdbeMemFlags>import Class<SqlJetVdbeMemFlags>.*import static Class<SqlJetVdbeMemFlags>.*import SqlJetVdbeMemFlags[]import SqlJetVdbeMemFlags[].*import static SqlJetVdbeMemFlags[].*import ISqlJetColumnConstraintimport ISqlJetColumnConstraint.*import static ISqlJetColumnConstraint.*import ISqlJetColumnDefimport ISqlJetColumnDef.*import static ISqlJetColumnDef.*import List<ISqlJetColumnConstraint>import List<ISqlJetColumnConstraint>.*import static List<ISqlJetColumnConstraint>.*import Collection<ISqlJetColumnConstraint>import Collection<ISqlJetColumnConstraint>.*import static Collection<ISqlJetColumnConstraint>.*import Iterable<ISqlJetColumnConstraint>import Iterable<ISqlJetColumnConstraint>.*import static Iterable<ISqlJetColumnConstraint>.*import ISqlJetTypeDefimport ISqlJetTypeDef.*import static ISqlJetTypeDef.*import ISqlJetIndexedColumnimport ISqlJetIndexedColumn.*import static ISqlJetIndexedColumn.*import List<ISqlJetIndexedColumn>import List<ISqlJetIndexedColumn>.*import static List<ISqlJetIndexedColumn>.*import Collection<ISqlJetIndexedColumn>import Collection<ISqlJetIndexedColumn>.*import static Collection<ISqlJetIndexedColumn>.*import Iterable<ISqlJetIndexedColumn>import Iterable<ISqlJetIndexedColumn>.*import static Iterable<ISqlJetIndexedColumn>.*import SqlJetSortingOrderimport SqlJetSortingOrder.*import static SqlJetSortingOrder.*import ISqlJetTableConstraintimport ISqlJetTableConstraint.*import static ISqlJetTableConstraint.*import List<ISqlJetTableConstraint>import List<ISqlJetTableConstraint>.*import static List<ISqlJetTableConstraint>.*import Collection<ISqlJetTableConstraint>import Collection<ISqlJetTableConstraint>.*import static Collection<ISqlJetTableConstraint>.*import Iterable<ISqlJetTableConstraint>import Iterable<ISqlJetTableConstraint>.*import static Iterable<ISqlJetTableConstraint>.*import List<ISqlJetColumnDef>import List<ISqlJetColumnDef>.*import static List<ISqlJetColumnDef>.*import Collection<ISqlJetColumnDef>import Collection<ISqlJetColumnDef>.*import static Collection<ISqlJetColumnDef>.*import Iterable<ISqlJetColumnDef>import Iterable<ISqlJetColumnDef>.*import static Iterable<ISqlJetColumnDef>.*import Enum<SqlJetConflictAction>import Enum<SqlJetConflictAction>.*import static Enum<SqlJetConflictAction>.*import Comparable<SqlJetConflictAction>import Comparable<SqlJetConflictAction>.*import static Comparable<SqlJetConflictAction>.*import Class<SqlJetConflictAction>import Class<SqlJetConflictAction>.*import static Class<SqlJetConflictAction>.*import SqlJetConflictAction[]import SqlJetConflictAction[].*import static SqlJetConflictAction[].*import Enum<SqlJetSortingOrder>import Enum<SqlJetSortingOrder>.*import static Enum<SqlJetSortingOrder>.*import Comparable<SqlJetSortingOrder>import Comparable<SqlJetSortingOrder>.*import static Comparable<SqlJetSortingOrder>.*import Class<SqlJetSortingOrder>import Class<SqlJetSortingOrder>.*import static Class<SqlJetSortingOrder>.*import SqlJetSortingOrder[]import SqlJetSortingOrder[].*import static SqlJetSortingOrder[].*import Enum<SqlJetTypeAffinity>import Enum<SqlJetTypeAffinity>.*import static Enum<SqlJetTypeAffinity>.*import Comparable<SqlJetTypeAffinity>import Comparable<SqlJetTypeAffinity>.*import static Comparable<SqlJetTypeAffinity>.*import Class<SqlJetTypeAffinity>import Class<SqlJetTypeAffinity>.*import static Class<SqlJetTypeAffinity>.*import SqlJetTypeAffinity[]import SqlJetTypeAffinity[].*import static SqlJetTypeAffinity[].*import ISqlJetCursorimport ISqlJetCursor.*import static ISqlJetCursor.*import ISqlJetRunnableWithLockimport ISqlJetRunnableWithLock.*import static ISqlJetRunnableWithLock.*import SqlJetDbimport SqlJetDb.*import static SqlJetDb.*import ISqlJetTableimport ISqlJetTable.*import static ISqlJetTable.*import SqlJetScopeimport SqlJetScope.*import static SqlJetScope.*import ISqlJetTransactionimport ISqlJetTransaction.*import static ISqlJetTransaction.*import SqlJetEngineimport SqlJetEngine.*import static SqlJetEngine.*import SqlJetScopeBoundimport SqlJetScopeBound.*import static SqlJetScopeBound.*import ISqlJetEngineSynchronizedimport ISqlJetEngineSynchronized.*import static ISqlJetEngineSynchronized.*import ISqlJetEngineTransactionimport ISqlJetEngineTransaction.*import static ISqlJetEngineTransaction.*import ISVNCancellerimport ISVNCanceller.*import static ISVNCanceller.*import ISVNDirEntryHandlerimport ISVNDirEntryHandler.*import static ISVNDirEntryHandler.*import SVNDirEntryimport SVNDirEntry.*import static SVNDirEntry.*import ISVNLogEntryHandlerimport ISVNLogEntryHandler.*import static ISVNLogEntryHandler.*import SVNLockimport SVNLock.*import static SVNLock.*import SVNErrorCodeimport SVNErrorCode.*import static SVNErrorCode.*import SVNLogEntryPathimport SVNLogEntryPath.*import static SVNLogEntryPath.*import Map<String,SVNLogEntryPath>import Map<String,SVNLogEntryPath>.*import static Map<String,SVNLogEntryPath>.*import SVNMergeInfoimport SVNMergeInfo.*import static SVNMergeInfo.*import SVNMergeRangeListimport SVNMergeRangeList.*import static SVNMergeRangeList.*import Map<String,SVNMergeRangeList>import Map<String,SVNMergeRangeList>.*import static Map<String,SVNMergeRangeList>.*import SVNMergeInfoInheritanceimport SVNMergeInfoInheritance.*import static SVNMergeInfoInheritance.*import SVNMergeRangeimport SVNMergeRange.*import static SVNMergeRange.*import List<SVNMergeRange>import List<SVNMergeRange>.*import static List<SVNMergeRange>.*import Collection<SVNMergeRange>import Collection<SVNMergeRange>.*import static Collection<SVNMergeRange>.*import Iterable<SVNMergeRange>import Iterable<SVNMergeRange>.*import static Iterable<SVNMergeRange>.*import SVNMergeRange[]import SVNMergeRange[].*import static SVNMergeRange[].*import SVNPropertyValueimport SVNPropertyValue.*import static SVNPropertyValue.*import Map<String,SVNPropertyValue>import Map<String,SVNPropertyValue>.*import static Map<String,SVNPropertyValue>.*import ISVNProxyManagerimport ISVNProxyManager.*import static ISVNProxyManager.*import ISVNSSHHostVerifierimport ISVNSSHHostVerifier.*import static ISVNSSHHostVerifier.*import SVNSSHAuthenticationimport SVNSSHAuthentication.*import static SVNSSHAuthentication.*import ISVNSqlJetTriggerimport ISVNSqlJetTrigger.*import static ISVNSqlJetTrigger.*import SVNSqlJetDbimport SVNSqlJetDb.*import static SVNSqlJetDb.*import SVNSqlJetTransactionimport SVNSqlJetTransaction.*import static SVNSqlJetTransaction.*import SVNWCDbStatementsimport SVNWCDbStatements.*import static SVNWCDbStatements.*import SVNSqlJetStatementimport SVNSqlJetStatement.*import static SVNSqlJetStatement.*import SVNSqlJetSelectFieldsStatementimport SVNSqlJetSelectFieldsStatement.*import static SVNSqlJetSelectFieldsStatement.*import SVNSqlJetSelectStatementimport SVNSqlJetSelectStatement.*import static SVNSqlJetSelectStatement.*import SVNSqlJetTableStatementimport SVNSqlJetTableStatement.*import static SVNSqlJetTableStatement.*import Structureimport Structure.*import static Structure.*import InheritedPropertiesimport InheritedProperties.*import static InheritedProperties.*import Structure<InheritedProperties>import Structure<InheritedProperties>.*import static Structure<InheritedProperties>.*import List<Structure<InheritedProperties>>import List<Structure<InheritedProperties>>.*import static List<Structure<InheritedProperties>>.*import Collection<Structure<InheritedProperties>>import Collection<Structure<InheritedProperties>>.*import static Collection<Structure<InheritedProperties>>.*import Iterable<Structure<InheritedProperties>>import Iterable<Structure<InheritedProperties>>.*import static Iterable<Structure<InheritedProperties>>.*import SvnChecksumimport SvnChecksum.*import static SvnChecksum.*import Map<String,SVNProperties>import Map<String,SVNProperties>.*import static Map<String,SVNProperties>.*import Collection<ISVNSqlJetTrigger>import Collection<ISVNSqlJetTrigger>.*import static Collection<ISVNSqlJetTrigger>.*import Iterable<ISVNSqlJetTrigger>import Iterable<ISVNSqlJetTrigger>.*import static Iterable<ISVNSqlJetTrigger>.*import ISVNConnectorimport ISVNConnector.*import static ISVNConnector.*import SVNRepositoryImplimport SVNRepositoryImpl.*import static SVNRepositoryImpl.*import ISVNReporterimport ISVNReporter.*import static ISVNReporter.*import ISVNInheritedPropertiesHandlerimport ISVNInheritedPropertiesHandler.*import static ISVNInheritedPropertiesHandler.*import ISVNReplayHandlerimport ISVNReplayHandler.*import static ISVNReplayHandler.*import ISVNWorkspaceMediatorimport ISVNWorkspaceMediator.*import static ISVNWorkspaceMediator.*import ISVNEditorimport ISVNEditor.*import static ISVNEditor.*import SVNCapabilityimport SVNCapability.*import static SVNCapability.*import ISVNReporterBatonimport ISVNReporterBaton.*import static ISVNReporterBaton.*import ISVNLockHandlerimport ISVNLockHandler.*import static ISVNLockHandler.*import SVNLock[]import SVNLock[].*import static SVNLock[].*import ISVNFileRevisionHandlerimport ISVNFileRevisionHandler.*import static ISVNFileRevisionHandler.*import ISVNLocationSegmentHandlerimport ISVNLocationSegmentHandler.*import static ISVNLocationSegmentHandler.*import ISVNLocationEntryHandlerimport ISVNLocationEntryHandler.*import static ISVNLocationEntryHandler.*import SVNDateimport SVNDate.*import static SVNDate.*import ISVNOptionsimport ISVNOptions.*import static ISVNOptions.*import TableEntryimport TableEntry.*import static TableEntry.*import SVNHashMapimport SVNHashMap.*import static SVNHashMap.*import SVNSkelimport SVNSkel.*import static SVNSkel.*import Collection<SVNSkel>import Collection<SVNSkel>.*import static Collection<SVNSkel>.*import Iterable<SVNSkel>import Iterable<SVNSkel>.*import static Iterable<SVNSkel>.*import Map<String,byte[]>import Map<String,byte[]>.*import static Map<String,byte[]>.*import List<SVNSkel>import List<SVNSkel>.*import static List<SVNSkel>.*import AbstractDiffCallbackimport AbstractDiffCallback.*import static AbstractDiffCallback.*import SVNWCAccessimport SVNWCAccess.*import static SVNWCAccess.*import SVNAdminAreaimport SVNAdminArea.*import static SVNAdminArea.*import SVNStatusTypeimport SVNStatusType.*import static SVNStatusType.*import SVNStatusType[]import SVNStatusType[].*import static SVNStatusType[].*import ISVNSSLPasspharsePromptSupportimport ISVNSSLPasspharsePromptSupport.*import static ISVNSSLPasspharsePromptSupport.*import ISVNAuthenticationStorageOptionsimport ISVNAuthenticationStorageOptions.*import static ISVNAuthenticationStorageOptions.*import ISVNAuthenticationStorageimport ISVNAuthenticationStorage.*import static ISVNAuthenticationStorage.*import ISVNHostOptionsProviderimport ISVNHostOptionsProvider.*import static ISVNHostOptionsProvider.*import ISVNMergerFactoryimport ISVNMergerFactory.*import static ISVNMergerFactory.*import ISVNMergerimport ISVNMerger.*import static ISVNMerger.*import ISVNConflictHandlerimport ISVNConflictHandler.*import static ISVNConflictHandler.*import ISVNConfigEventHandlerimport ISVNConfigEventHandler.*import static ISVNConfigEventHandler.*import ISVNTunnelProviderimport ISVNTunnelProvider.*import static ISVNTunnelProvider.*import ISVNAuthStoreHandlerimport ISVNAuthStoreHandler.*import static ISVNAuthStoreHandler.*import ISVNGnomeKeyringPasswordProviderimport ISVNGnomeKeyringPasswordProvider.*import static ISVNGnomeKeyringPasswordProvider.*import ISVNFileFetcherimport ISVNFileFetcher.*import static ISVNFileFetcher.*import ISVNHostOptionsimport ISVNHostOptions.*import static ISVNHostOptions.*import ISVNMergeStrategyimport ISVNMergeStrategy.*import static ISVNMergeStrategy.*import SVNEntryimport SVNEntry.*import static SVNEntry.*import ISVNEntryHandlerimport ISVNEntryHandler.*import static ISVNEntryHandler.*import SVNMergeCallbackimport SVNMergeCallback.*import static SVNMergeCallback.*import ISVNReusableEditorimport ISVNReusableEditor.*import static ISVNReusableEditor.*import ISVNUpdateEditorimport ISVNUpdateEditor.*import static ISVNUpdateEditor.*import SVNCompositeConfigFileimport SVNCompositeConfigFile.*import static SVNCompositeConfigFile.*import SVNConfigFileimport SVNConfigFile.*import static SVNConfigFile.*import SVNConflictVersionimport SVNConflictVersion.*import static SVNConflictVersion.*import SVNExternalimport SVNExternal.*import static SVNExternal.*import SVNExternal[]import SVNExternal[].*import static SVNExternal[].*import SVNDiffOptionsimport SVNDiffOptions.*import static SVNDiffOptions.*import SVNMergeDriverimport SVNMergeDriver.*import static SVNMergeDriver.*import MergePathimport MergePath.*import static MergePath.*import MergeSourceimport MergeSource.*import static MergeSource.*import SVNBasicDelegateimport SVNBasicDelegate.*import static SVNBasicDelegate.*import Map[]import Map[].*import static Map[].*import Map<>[]import Map<>[].*import static Map<>[].*import SVNConflictActionimport SVNConflictAction.*import static SVNConflictAction.*import SVNConflictReasonimport SVNConflictReason.*import static SVNConflictReason.*import SVNTreeConflictDescriptionimport SVNTreeConflictDescription.*import static SVNTreeConflictDescription.*import SVNLogClient16import SVNLogClient16.*import static SVNLogClient16.*import SVNURL[]import SVNURL[].*import static SVNURL[].*import SVNLocationEntryimport SVNLocationEntry.*import static SVNLocationEntry.*import SVNEventimport SVNEvent.*import static SVNEvent.*import ISVNRepositoryPoolimport ISVNRepositoryPool.*import static ISVNRepositoryPool.*import SVNObjectsPoolimport SVNObjectsPool.*import static SVNObjectsPool.*import ISVNCleanupHandlerimport ISVNCleanupHandler.*import static ISVNCleanupHandler.*import SVNVersionedPropertiesimport SVNVersionedProperties.*import static SVNVersionedProperties.*import ISVNCommitParametersimport ISVNCommitParameters.*import static ISVNCommitParameters.*import SVNLogimport SVNLog.*import static SVNLog.*import SVNConflictChoiceimport SVNConflictChoice.*import static SVNConflictChoice.*import SVNAdminAreaInfoimport SVNAdminAreaInfo.*import static SVNAdminAreaInfo.*import SVNChecksumOutputStreamimport SVNChecksumOutputStream.*import static SVNChecksumOutputStream.*import Map<File,SVNTreeConflictDescription>import Map<File,SVNTreeConflictDescription>.*import static Map<File,SVNTreeConflictDescription>.*import SVNLogRunnerimport SVNLogRunner.*import static SVNLogRunner.*import ISVNEventHandlerimport ISVNEventHandler.*import static ISVNEventHandler.*import SVNAdminArea[]import SVNAdminArea[].*import static SVNAdminArea[].*import SVNRepositoryLocationimport SVNRepositoryLocation.*import static SVNRepositoryLocation.*import SVNCommitItemimport SVNCommitItem.*import static SVNCommitItem.*import SVNRepositoryLocation[]import SVNRepositoryLocation[].*import static SVNRepositoryLocation[].*import SVNRevision[]import SVNRevision[].*import static SVNRevision[].*import ISVNDebugLogimport ISVNDebugLog.*import static ISVNDebugLog.*import ISVNPathListHandlerimport ISVNPathListHandler.*import static ISVNPathListHandler.*import ISVNAnnotateHandlerimport ISVNAnnotateHandler.*import static ISVNAnnotateHandler.*import SVNExternalsStoreimport SVNExternalsStore.*import static SVNExternalsStore.*import Map<File,SVNDepth>import Map<File,SVNDepth>.*import static Map<File,SVNDepth>.*import Map<File,String>import Map<File,String>.*import static Map<File,String>.*import ConflictKindimport ConflictKind.*import static ConflictKind.*import Enum<ConflictKind>import Enum<ConflictKind>.*import static Enum<ConflictKind>.*import Comparable<ConflictKind>import Comparable<ConflictKind>.*import static Comparable<ConflictKind>.*import Class<ConflictKind>import Class<ConflictKind>.*import static Class<ConflictKind>.*import SVNWCConflictDescription17import SVNWCConflictDescription17.*import static SVNWCConflictDescription17.*import ConflictKind[]import ConflictKind[].*import static ConflictKind[].*import SVNOperationimport SVNOperation.*import static SVNOperation.*import SVNConflictDescriptionimport SVNConflictDescription.*import static SVNConflictDescription.*import CheckSpecialInfoimport CheckSpecialInfo.*import static CheckSpecialInfo.*import SVNWCContextimport SVNWCContext.*import static SVNWCContext.*import CheckWCRootInfoimport CheckWCRootInfo.*import static CheckWCRootInfo.*import SVNWCDbKindimport SVNWCDbKind.*import static SVNWCDbKind.*import CleanupHandlerimport CleanupHandler.*import static CleanupHandler.*import CommittableExternalInfoimport CommittableExternalInfo.*import static CommittableExternalInfo.*import ConflictInfoimport ConflictInfo.*import static ConflictInfo.*import ConflictMarkersInfoimport ConflictMarkersInfo.*import static ConflictMarkersInfo.*import EntryLocationInfoimport EntryLocationInfo.*import static EntryLocationInfo.*import ISVNWCNodeHandlerimport ISVNWCNodeHandler.*import static ISVNWCNodeHandler.*import MergeInfoimport MergeInfo.*import static MergeInfo.*import MergePropStatusInfoimport MergePropStatusInfo.*import static MergePropStatusInfo.*import MergePropertiesInfoimport MergePropertiesInfo.*import static MergePropertiesInfo.*import NodeCopyFromFieldimport NodeCopyFromField.*import static NodeCopyFromField.*import Enum<NodeCopyFromField>import Enum<NodeCopyFromField>.*import static Enum<NodeCopyFromField>.*import Comparable<NodeCopyFromField>import Comparable<NodeCopyFromField>.*import static Comparable<NodeCopyFromField>.*import Class<NodeCopyFromField>import Class<NodeCopyFromField>.*import static Class<NodeCopyFromField>.*import NodeCopyFromField[]import NodeCopyFromField[].*import static NodeCopyFromField[].*import NodeCopyFromInfoimport NodeCopyFromInfo.*import static NodeCopyFromInfo.*import NodeMovedAwayimport NodeMovedAway.*import static NodeMovedAway.*import NodeMovedHereimport NodeMovedHere.*import static NodeMovedHere.*import NodePresenceimport NodePresence.*import static NodePresence.*import ObstructionDataimport ObstructionData.*import static ObstructionData.*import PristineContentsInfoimport PristineContentsInfo.*import static PristineContentsInfo.*import PropDiffsimport PropDiffs.*import static PropDiffs.*import SVNEolStyleimport SVNEolStyle.*import static SVNEolStyle.*import Enum<SVNEolStyle>import Enum<SVNEolStyle>.*import static Enum<SVNEolStyle>.*import Comparable<SVNEolStyle>import Comparable<SVNEolStyle>.*import static Comparable<SVNEolStyle>.*import Class<SVNEolStyle>import Class<SVNEolStyle>.*import static Class<SVNEolStyle>.*import SVNEolStyle[]import SVNEolStyle[].*import static SVNEolStyle[].*import SVNEolStyleInfoimport SVNEolStyleInfo.*import static SVNEolStyleInfo.*import SVNWCNodeReposInfoimport SVNWCNodeReposInfo.*import static SVNWCNodeReposInfo.*import SVNWCScheduleimport SVNWCSchedule.*import static SVNWCSchedule.*import Enum<SVNWCSchedule>import Enum<SVNWCSchedule>.*import static Enum<SVNWCSchedule>.*import Comparable<SVNWCSchedule>import Comparable<SVNWCSchedule>.*import static Comparable<SVNWCSchedule>.*import Class<SVNWCSchedule>import Class<SVNWCSchedule>.*import static Class<SVNWCSchedule>.*import SVNWCSchedule[]import SVNWCSchedule[].*import static SVNWCSchedule[].*import ScheduleInternalInfoimport ScheduleInternalInfo.*import static ScheduleInternalInfo.*import TextConflictResolutionInfoimport TextConflictResolutionInfo.*import static TextConflictResolutionInfo.*import TranslateInfoimport TranslateInfo.*import static TranslateInfo.*import TreeLocalModsInfoimport TreeLocalModsInfo.*import static TreeLocalModsInfo.*import UniqueFileInfoimport UniqueFileInfo.*import static UniqueFileInfo.*import WritableBaseInfoimport WritableBaseInfo.*import static WritableBaseInfo.*import List<CommittableExternalInfo>import List<CommittableExternalInfo>.*import static List<CommittableExternalInfo>.*import Collection<CommittableExternalInfo>import Collection<CommittableExternalInfo>.*import static Collection<CommittableExternalInfo>.*import Iterable<CommittableExternalInfo>import Iterable<CommittableExternalInfo>.*import static Iterable<CommittableExternalInfo>.*import WCDbBaseInfoimport WCDbBaseInfo.*import static WCDbBaseInfo.*import SVNWCDbLockimport SVNWCDbLock.*import static SVNWCDbLock.*import ISVNWCDbimport ISVNWCDb.*import static ISVNWCDb.*import SVNWCDbimport SVNWCDb.*import static SVNWCDb.*import NodeOriginInfoimport NodeOriginInfo.*import static NodeOriginInfo.*import NodeOriginInfo[]import NodeOriginInfo[].*import static NodeOriginInfo[].*import Structure<>import Structure<>.*import static Structure<>.*import Structure<NodeOriginInfo>import Structure<NodeOriginInfo>.*import static Structure<NodeOriginInfo>.*import WCDbInfoimport WCDbInfo.*import static WCDbInfo.*import SvnOperationimport SvnOperation.*import static SvnOperation.*import SvnOperation<?>import SvnOperation<?>.*import static SvnOperation<?>.*import ISvnOperationOptionsProviderimport ISvnOperationOptionsProvider.*import static ISvnOperationOptionsProvider.*import SVNWCDbOpenModeimport SVNWCDbOpenMode.*import static SVNWCDbOpenMode.*import Movedimport Moved.*import static Moved.*import NodeInstallInfoimport NodeInstallInfo.*import static NodeInstallInfo.*import SVNWCDbRootimport SVNWCDbRoot.*import static SVNWCDbRoot.*import SVNWCDbBaseMovedToDataimport SVNWCDbBaseMovedToData.*import static SVNWCDbBaseMovedToData.*import SVNWCDbInfoimport SVNWCDbInfo.*import static SVNWCDbInfo.*import SVNWCDbStatusimport SVNWCDbStatus.*import static SVNWCDbStatus.*import Enum<SVNWCDbKind>import Enum<SVNWCDbKind>.*import static Enum<SVNWCDbKind>.*import Comparable<SVNWCDbKind>import Comparable<SVNWCDbKind>.*import static Comparable<SVNWCDbKind>.*import Class<SVNWCDbKind>import Class<SVNWCDbKind>.*import static Class<SVNWCDbKind>.*import SVNWCDbKind[]import SVNWCDbKind[].*import static SVNWCDbKind[].*import SVNWCDbNodeCheckReplaceDataimport SVNWCDbNodeCheckReplaceData.*import static SVNWCDbNodeCheckReplaceData.*import Enum<SVNWCDbOpenMode>import Enum<SVNWCDbOpenMode>.*import static Enum<SVNWCDbOpenMode>.*import Comparable<SVNWCDbOpenMode>import Comparable<SVNWCDbOpenMode>.*import static Comparable<SVNWCDbOpenMode>.*import Class<SVNWCDbOpenMode>import Class<SVNWCDbOpenMode>.*import static Class<SVNWCDbOpenMode>.*import SVNWCDbOpenMode[]import SVNWCDbOpenMode[].*import static SVNWCDbOpenMode[].*import Enum<SVNWCDbStatus>import Enum<SVNWCDbStatus>.*import static Enum<SVNWCDbStatus>.*import Comparable<SVNWCDbStatus>import Comparable<SVNWCDbStatus>.*import static Comparable<SVNWCDbStatus>.*import Class<SVNWCDbStatus>import Class<SVNWCDbStatus>.*import static Class<SVNWCDbStatus>.*import SVNWCDbStatus[]import SVNWCDbStatus[].*import static SVNWCDbStatus[].*import SVNWCDbUpgradeDataimport SVNWCDbUpgradeData.*import static SVNWCDbUpgradeData.*import SwitchedInfoimport SwitchedInfo.*import static SwitchedInfo.*import AdditionInfoFieldimport AdditionInfoField.*import static AdditionInfoField.*import Enum<AdditionInfoField>import Enum<AdditionInfoField>.*import static Enum<AdditionInfoField>.*import Comparable<AdditionInfoField>import Comparable<AdditionInfoField>.*import static Comparable<AdditionInfoField>.*import Class<AdditionInfoField>import Class<AdditionInfoField>.*import static Class<AdditionInfoField>.*import WCDbAdditionInfoimport WCDbAdditionInfo.*import static WCDbAdditionInfo.*import AdditionInfoField[]import AdditionInfoField[].*import static AdditionInfoField[].*import BaseInfoFieldimport BaseInfoField.*import static BaseInfoField.*import Enum<BaseInfoField>import Enum<BaseInfoField>.*import static Enum<BaseInfoField>.*import Comparable<BaseInfoField>import Comparable<BaseInfoField>.*import static Comparable<BaseInfoField>.*import Class<BaseInfoField>import Class<BaseInfoField>.*import static Class<BaseInfoField>.*import BaseInfoField[]import BaseInfoField[].*import static BaseInfoField[].*import InfoFieldimport InfoField.*import static InfoField.*import InfoField[]import InfoField[].*import static InfoField[].*import DeletionInfoFieldimport DeletionInfoField.*import static DeletionInfoField.*import Enum<DeletionInfoField>import Enum<DeletionInfoField>.*import static Enum<DeletionInfoField>.*import Comparable<DeletionInfoField>import Comparable<DeletionInfoField>.*import static Comparable<DeletionInfoField>.*import Class<DeletionInfoField>import Class<DeletionInfoField>.*import static Class<DeletionInfoField>.*import WCDbDeletionInfoimport WCDbDeletionInfo.*import static WCDbDeletionInfo.*import DeletionInfoField[]import DeletionInfoField[].*import static DeletionInfoField[].*import Enum<InfoField>import Enum<InfoField>.*import static Enum<InfoField>.*import Comparable<InfoField>import Comparable<InfoField>.*import static Comparable<InfoField>.*import Class<InfoField>import Class<InfoField>.*import static Class<InfoField>.*import RepositoryInfoFieldimport RepositoryInfoField.*import static RepositoryInfoField.*import Enum<RepositoryInfoField>import Enum<RepositoryInfoField>.*import static Enum<RepositoryInfoField>.*import Comparable<RepositoryInfoField>import Comparable<RepositoryInfoField>.*import static Comparable<RepositoryInfoField>.*import Class<RepositoryInfoField>import Class<RepositoryInfoField>.*import static Class<RepositoryInfoField>.*import WCDbRepositoryInfoimport WCDbRepositoryInfo.*import static WCDbRepositoryInfo.*import RepositoryInfoField[]import RepositoryInfoField[].*import static RepositoryInfoField[].*import WCDbWorkQueueInfoimport WCDbWorkQueueInfo.*import static WCDbWorkQueueInfo.*import Map<SVNURL,String>import Map<SVNURL,String>.*import static Map<SVNURL,String>.*import PristineInfoimport PristineInfo.*import static PristineInfo.*import Structure<PristineInfo>import Structure<PristineInfo>.*import static Structure<PristineInfo>.*import Map<File,File>import Map<File,File>.*import static Map<File,File>.*import Map<File,Map<String,SVNProperties>>import Map<File,Map<String,SVNProperties>>.*import static Map<File,Map<String,SVNProperties>>.*import List<SVNConflictDescription>import List<SVNConflictDescription>.*import static List<SVNConflictDescription>.*import Collection<SVNConflictDescription>import Collection<SVNConflictDescription>.*import static Collection<SVNConflictDescription>.*import Iterable<SVNConflictDescription>import Iterable<SVNConflictDescription>.*import static Iterable<SVNConflictDescription>.*import Map<String,SVNWCDbInfo>import Map<String,SVNWCDbInfo>.*import static Map<String,SVNWCDbInfo>.*import NodeInfoimport NodeInfo.*import static NodeInfo.*import NodeInfo[]import NodeInfo[].*import static NodeInfo[].*import Structure<NodeInfo>import Structure<NodeInfo>.*import static Structure<NodeInfo>.*import Map<String,SVNTreeConflictDescription>import Map<String,SVNTreeConflictDescription>.*import static Map<String,SVNTreeConflictDescription>.*import Map<String,WCDbBaseInfo>import Map<String,WCDbBaseInfo>.*import static Map<String,WCDbBaseInfo>.*import BaseMovedToimport BaseMovedTo.*import static BaseMovedTo.*import DirParsedInfoimport DirParsedInfo.*import static DirParsedInfo.*import SVNWCDbDirimport SVNWCDbDir.*import static SVNWCDbDir.*import MovedToimport MovedTo.*import static MovedTo.*import ReposInfoimport ReposInfo.*import static ReposInfo.*import Map<String,SVNWCDbKind>import Map<String,SVNWCDbKind>.*import static Map<String,SVNWCDbKind>.*import SVNEventActionimport SVNEventAction.*import static SVNEventAction.*import RepositoryInfoimport RepositoryInfo.*import static RepositoryInfo.*import Structure<RepositoryInfo>import Structure<RepositoryInfo>.*import static Structure<RepositoryInfo>.*import SVNWCDbSelectDeletionInfoimport SVNWCDbSelectDeletionInfo.*import static SVNWCDbSelectDeletionInfo.*import ISvnObjectReceiverimport ISvnObjectReceiver.*import static ISvnObjectReceiver.*import ISvnObjectReceiver<SVNProperties>import ISvnObjectReceiver<SVNProperties>.*import static ISvnObjectReceiver<SVNProperties>.*import List<SVNWCConflictDescription17>import List<SVNWCConflictDescription17>.*import static List<SVNWCConflictDescription17>.*import Collection<SVNWCConflictDescription17>import Collection<SVNWCConflictDescription17>.*import static Collection<SVNWCConflictDescription17>.*import Iterable<SVNWCConflictDescription17>import Iterable<SVNWCConflictDescription17>.*import static Iterable<SVNWCConflictDescription17>.*import WCLockimport WCLock.*import static WCLock.*import List<WCLock>import List<WCLock>.*import static List<WCLock>.*import Collection<WCLock>import Collection<WCLock>.*import static Collection<WCLock>.*import Iterable<WCLock>import Iterable<WCLock>.*import static Iterable<WCLock>.*import TypeSafetyimport TypeSafety.*import static TypeSafety.*import Enum<X>import Enum<X>.*import static Enum<X>.*import Comparable<X>import Comparable<X>.*import static Comparable<X>.*import Structure<X>import Structure<X>.*import static Structure<X>.*import Enum<X>[]import Enum<X>[].*import static Enum<X>[].*import X[]import X[].*import static X[].*import Enum<T>[]import Enum<T>[].*import static Enum<T>[].*import Structure<T>import Structure<T>.*import static Structure<T>.*import Enum<InheritedProperties>import Enum<InheritedProperties>.*import static Enum<InheritedProperties>.*import Comparable<InheritedProperties>import Comparable<InheritedProperties>.*import static Comparable<InheritedProperties>.*import Class<InheritedProperties>import Class<InheritedProperties>.*import static Class<InheritedProperties>.*import StructureFieldsimport StructureFields.*import static StructureFields.*import InheritedProperties[]import InheritedProperties[].*import static InheritedProperties[].*import Enum<NodeInfo>import Enum<NodeInfo>.*import static Enum<NodeInfo>.*import Comparable<NodeInfo>import Comparable<NodeInfo>.*import static Comparable<NodeInfo>.*import Class<NodeInfo>import Class<NodeInfo>.*import static Class<NodeInfo>.*import Enum<NodeOriginInfo>import Enum<NodeOriginInfo>.*import static Enum<NodeOriginInfo>.*import Comparable<NodeOriginInfo>import Comparable<NodeOriginInfo>.*import static Comparable<NodeOriginInfo>.*import Class<NodeOriginInfo>import Class<NodeOriginInfo>.*import static Class<NodeOriginInfo>.*import Enum<PristineInfo>import Enum<PristineInfo>.*import static Enum<PristineInfo>.*import Comparable<PristineInfo>import Comparable<PristineInfo>.*import static Comparable<PristineInfo>.*import Class<PristineInfo>import Class<PristineInfo>.*import static Class<PristineInfo>.*import PristineInfo[]import PristineInfo[].*import static PristineInfo[].*import Collection<PristineInfo>import Collection<PristineInfo>.*import static Collection<PristineInfo>.*import Iterable<PristineInfo>import Iterable<PristineInfo>.*import static Iterable<PristineInfo>.*import Enum<RepositoryInfo>import Enum<RepositoryInfo>.*import static Enum<RepositoryInfo>.*import Comparable<RepositoryInfo>import Comparable<RepositoryInfo>.*import static Comparable<RepositoryInfo>.*import Class<RepositoryInfo>import Class<RepositoryInfo>.*import static Class<RepositoryInfo>.*import RepositoryInfo[]import RepositoryInfo[].*import static RepositoryInfo[].*import NODES__Fieldsimport NODES__Fields.*import static NODES__Fields.*import Enum<NODES__Fields>import Enum<NODES__Fields>.*import static Enum<NODES__Fields>.*import Comparable<NODES__Fields>import Comparable<NODES__Fields>.*import static Comparable<NODES__Fields>.*import Class<NODES__Fields>import Class<NODES__Fields>.*import static Class<NODES__Fields>.*import SVNWCDbSchemaimport SVNWCDbSchema.*import static SVNWCDbSchema.*import NODES__Fields[]import NODES__Fields[].*import static NODES__Fields[].*import Enum<SVNWCDbSchema>import Enum<SVNWCDbSchema>.*import static Enum<SVNWCDbSchema>.*import Comparable<SVNWCDbSchema>import Comparable<SVNWCDbSchema>.*import static Comparable<SVNWCDbSchema>.*import Class<SVNWCDbSchema>import Class<SVNWCDbSchema>.*import static Class<SVNWCDbSchema>.*import SVNWCDbSchema[]import SVNWCDbSchema[].*import static SVNWCDbSchema[].*import ? extends Enum<?>import ? extends Enum<?>.*import static ? extends Enum<?>.*import Class<? extends Enum<?>>import Class<? extends Enum<?>>.*import static Class<? extends Enum<?>>.*import InternalSelectimport InternalSelect.*import static InternalSelect.*import SVNSqlJetSelectFieldsStatement<NODES__Fields>import SVNSqlJetSelectFieldsStatement<NODES__Fields>.*import static SVNSqlJetSelectFieldsStatement<NODES__Fields>.*import Enum<SVNWCDbStatements>import Enum<SVNWCDbStatements>.*import static Enum<SVNWCDbStatements>.*import Comparable<SVNWCDbStatements>import Comparable<SVNWCDbStatements>.*import static Comparable<SVNWCDbStatements>.*import Class<SVNWCDbStatements>import Class<SVNWCDbStatements>.*import static Class<SVNWCDbStatements>.*import ? extends SVNSqlJetStatementimport ? extends SVNSqlJetStatement.*import static ? extends SVNSqlJetStatement.*import Class<? extends SVNSqlJetStatement>import Class<? extends SVNSqlJetStatement>.*import static Class<? extends SVNSqlJetStatement>.*import SVNWCDbStatements[]import SVNWCDbStatements[].*import static SVNWCDbStatements[].*import ISvnCommitRunnerimport ISvnCommitRunner.*import static ISvnCommitRunner.*import SvnCommitPacketimport SvnCommitPacket.*import static SvnCommitPacket.*import SvnCommitimport SvnCommit.*import static SvnCommit.*import SvnWcGenerationimport SvnWcGeneration.*import static SvnWcGeneration.*import Enum<SvnWcGeneration>import Enum<SvnWcGeneration>.*import static Enum<SvnWcGeneration>.*import Comparable<SvnWcGeneration>import Comparable<SvnWcGeneration>.*import static Comparable<SvnWcGeneration>.*import Class<SvnWcGeneration>import Class<SvnWcGeneration>.*import static Class<SvnWcGeneration>.*import SvnWcGeneration[]import SvnWcGeneration[].*import static SvnWcGeneration[].*import ISvnDiffCallbackimport ISvnDiffCallback.*import static ISvnDiffCallback.*import SvnDiffCallbackResultimport SvnDiffCallbackResult.*import static SvnDiffCallbackResult.*import ISvnDiffGeneratorimport ISvnDiffGenerator.*import static ISvnDiffGenerator.*import SvnTargetimport SvnTarget.*import static SvnTarget.*import OperationKindimport OperationKind.*import static OperationKind.*import Enum<OperationKind>import Enum<OperationKind>.*import static Enum<OperationKind>.*import Comparable<OperationKind>import Comparable<OperationKind>.*import static Comparable<OperationKind>.*import Class<OperationKind>import Class<OperationKind>.*import static Class<OperationKind>.*import SvnDiffCallbackimport SvnDiffCallback.*import static SvnDiffCallback.*import OperationKind[]import OperationKind[].*import static OperationKind[].*import ISVNConnectionListenerimport ISVNConnectionListener.*import static ISVNConnectionListener.*import ISVNDeltaConsumerimport ISVNDeltaConsumer.*import static ISVNDeltaConsumer.*import SVNDiffWindowimport SVNDiffWindow.*import static SVNDiffWindow.*import ISVNFileCheckoutTargetimport ISVNFileCheckoutTarget.*import static ISVNFileCheckoutTarget.*import SVNFileRevisionimport SVNFileRevision.*import static SVNFileRevision.*import SVNLocationSegmentimport SVNLocationSegment.*import static SVNLocationSegment.*import Map<String,SVNMergeInfo>import Map<String,SVNMergeInfo>.*import static Map<String,SVNMergeInfo>.*import Collection<SVNDirEntry>import Collection<SVNDirEntry>.*import static Collection<SVNDirEntry>.*import Iterable<SVNDirEntry>import Iterable<SVNDirEntry>.*import static Iterable<SVNDirEntry>.*import List<SVNLocationSegment>import List<SVNLocationSegment>.*import static List<SVNLocationSegment>.*import Collection<SVNLocationSegment>import Collection<SVNLocationSegment>.*import static Collection<SVNLocationSegment>.*import Iterable<SVNLocationSegment>import Iterable<SVNLocationSegment>.*import static Iterable<SVNLocationSegment>.*import SVNDiffInstructionimport SVNDiffInstruction.*import static SVNDiffInstruction.*import SVNDiffInstruction[]import SVNDiffInstruction[].*import static SVNDiffInstruction[].*import SVNDiffWindowApplyBatonimport SVNDiffWindowApplyBaton.*import static SVNDiffWindowApplyBaton.*import ISVNAddParametersimport ISVNAddParameters.*import static ISVNAddParameters.*import ISVNChangelistHandlerimport ISVNChangelistHandler.*import static ISVNChangelistHandler.*import ISVNCommitHandlerimport ISVNCommitHandler.*import static ISVNCommitHandler.*import SVNCommitItem[]import SVNCommitItem[].*import static SVNCommitItem[].*import SVNConflictResultimport SVNConflictResult.*import static SVNConflictResult.*import ISVNDiffGeneratorimport ISVNDiffGenerator.*import static ISVNDiffGenerator.*import ISVNDiffStatusHandlerimport ISVNDiffStatusHandler.*import static ISVNDiffStatusHandler.*import SVNDiffStatusimport SVNDiffStatus.*import static SVNDiffStatus.*import ISVNExternalsHandlerimport ISVNExternalsHandler.*import static ISVNExternalsHandler.*import ISVNFileFilterimport ISVNFileFilter.*import static ISVNFileFilter.*import ISVNInfoHandlerimport ISVNInfoHandler.*import static ISVNInfoHandler.*import SVNMergeResultimport SVNMergeResult.*import static SVNMergeResult.*import SVNMergeFileSetimport SVNMergeFileSet.*import static SVNMergeFileSet.*import ISVNPropertyHandlerimport ISVNPropertyHandler.*import static ISVNPropertyHandler.*import SVNPropertyDataimport SVNPropertyData.*import static SVNPropertyData.*import ISVNPropertyValueProviderimport ISVNPropertyValueProvider.*import static ISVNPropertyValueProvider.*import ISVNStatusFileProviderimport ISVNStatusFileProvider.*import static ISVNStatusFileProvider.*import Map<String,File>import Map<String,File>.*import static Map<String,File>.*import ISVNStatusHandlerimport ISVNStatusHandler.*import static ISVNStatusHandler.*import SVNStatusimport SVNStatus.*import static SVNStatus.*import SVNBasicClientimport SVNBasicClient.*import static SVNBasicClient.*import SvnOperationFactoryimport SvnOperationFactory.*import static SvnOperationFactory.*import SVNChangelistClientimport SVNChangelistClient.*import static SVNChangelistClient.*import SVNAdminBasicClientimport SVNAdminBasicClient.*import static SVNAdminBasicClient.*import SVNMoveClientimport SVNMoveClient.*import static SVNMoveClient.*import SVNDiffClientimport SVNDiffClient.*import static SVNDiffClient.*import SVNLookClientimport SVNLookClient.*import static SVNLookClient.*import SVNAdminClientimport SVNAdminClient.*import static SVNAdminClient.*import SVNCommitPacketimport SVNCommitPacket.*import static SVNCommitPacket.*import SVNCommitPacket[]import SVNCommitPacket[].*import static SVNCommitPacket[].*import SVNCommitInfo[]import SVNCommitInfo[].*import static SVNCommitInfo[].*import Collection<SVNCommitItem>import Collection<SVNCommitItem>.*import static Collection<SVNCommitItem>.*import Iterable<SVNCommitItem>import Iterable<SVNCommitItem>.*import static Iterable<SVNCommitItem>.*import SVNCopySourceimport SVNCopySource.*import static SVNCopySource.*import SVNCopySource[]import SVNCopySource[].*import static SVNCopySource[].*import List<SVNExternal>import List<SVNExternal>.*import static List<SVNExternal>.*import Collection<SVNExternal>import Collection<SVNExternal>.*import static Collection<SVNExternal>.*import Iterable<SVNExternal>import Iterable<SVNExternal>.*import static Iterable<SVNExternal>.*import Map<SvnTarget,List<SVNExternal>>import Map<SvnTarget,List<SVNExternal>>.*import static Map<SvnTarget,List<SVNExternal>>.*import Collection<SVNURL>import Collection<SVNURL>.*import static Collection<SVNURL>.*import Iterable<SVNURL>import Iterable<SVNURL>.*import static Iterable<SVNURL>.*import Map<SVNURL,SVNMergeRangeList>import Map<SVNURL,SVNMergeRangeList>.*import static Map<SVNURL,SVNMergeRangeList>.*import SVNRevisionRangeimport SVNRevisionRange.*import static SVNRevisionRange.*import Collection<SVNRevisionRange>import Collection<SVNRevisionRange>.*import static Collection<SVNRevisionRange>.*import Iterable<SVNRevisionRange>import Iterable<SVNRevisionRange>.*import static Iterable<SVNRevisionRange>.*import ISVNChangeEntryHandlerimport ISVNChangeEntryHandler.*import static ISVNChangeEntryHandler.*import SVNChangeEntryimport SVNChangeEntry.*import static SVNChangeEntry.*import ISVNChangedDirectoriesHandlerimport ISVNChangedDirectoriesHandler.*import static ISVNChangedDirectoriesHandler.*import ISVNGNUDiffGeneratorimport ISVNGNUDiffGenerator.*import static ISVNGNUDiffGenerator.*import ISVNHistoryHandlerimport ISVNHistoryHandler.*import static ISVNHistoryHandler.*import SVNAdminPathimport SVNAdminPath.*import static SVNAdminPath.*import ISVNTreeHandlerimport ISVNTreeHandler.*import static ISVNTreeHandler.*import SVNUUIDActionimport SVNUUIDAction.*import static SVNUUIDAction.*import SVNSyncInfoimport SVNSyncInfo.*import static SVNSyncInfo.*import SVNAdminEventimport SVNAdminEvent.*import static SVNAdminEvent.*import SVNAdminEventActionimport SVNAdminEventAction.*import static SVNAdminEventAction.*import AbstractSvnCommitimport AbstractSvnCommit.*import static AbstractSvnCommit.*import SvnReceivingOperationimport SvnReceivingOperation.*import static SvnReceivingOperation.*import SvnReceivingOperation<SVNCommitInfo>import SvnReceivingOperation<SVNCommitInfo>.*import static SvnReceivingOperation<SVNCommitInfo>.*import SvnOperation<SVNCommitInfo>import SvnOperation<SVNCommitInfo>.*import static SvnOperation<SVNCommitInfo>.*import ISvnObjectReceiver<SVNCommitInfo>import ISvnObjectReceiver<SVNCommitInfo>.*import static ISvnObjectReceiver<SVNCommitInfo>.*import Collection<SvnTarget>import Collection<SvnTarget>.*import static Collection<SvnTarget>.*import Iterable<SvnTarget>import Iterable<SvnTarget>.*import static Iterable<SvnTarget>.*import Collection<SVNCommitInfo>import Collection<SVNCommitInfo>.*import static Collection<SVNCommitInfo>.*import Iterable<SVNCommitInfo>import Iterable<SVNCommitInfo>.*import static Iterable<SVNCommitInfo>.*import ISvnObjectReceiver<>import ISvnObjectReceiver<>.*import static ISvnObjectReceiver<>.*import ISvnObjectReceiver<T>import ISvnObjectReceiver<T>.*import static ISvnObjectReceiver<T>.*import ISvnCommitHandlerimport ISvnCommitHandler.*import static ISvnCommitHandler.*import AbstractSvnUpdateimport AbstractSvnUpdate.*import static AbstractSvnUpdate.*import SvnOperation<V>import SvnOperation<V>.*import static SvnOperation<V>.*import ISvnExternalsHandlerimport ISvnExternalsHandler.*import static ISvnExternalsHandler.*import ISvnAddParametersimport ISvnAddParameters.*import static ISvnAddParameters.*import ISvnCommitParametersimport ISvnCommitParameters.*import static ISvnCommitParameters.*import ISvnOperationHandlerimport ISvnOperationHandler.*import static ISvnOperationHandler.*import ISvnOperationRunnerimport ISvnOperationRunner.*import static ISvnOperationRunner.*import ISvnPatchHandlerimport ISvnPatchHandler.*import static ISvnPatchHandler.*import SvnAnnotateimport SvnAnnotate.*import static SvnAnnotate.*import SvnAnnotateItemimport SvnAnnotateItem.*import static SvnAnnotateItem.*import SvnReceivingOperation<SvnAnnotateItem>import SvnReceivingOperation<SvnAnnotateItem>.*import static SvnReceivingOperation<SvnAnnotateItem>.*import SvnOperation<SvnAnnotateItem>import SvnOperation<SvnAnnotateItem>.*import static SvnOperation<SvnAnnotateItem>.*import ISvnObjectReceiver<SvnAnnotateItem>import ISvnObjectReceiver<SvnAnnotateItem>.*import static ISvnObjectReceiver<SvnAnnotateItem>.*import Collection<SvnAnnotateItem>import Collection<SvnAnnotateItem>.*import static Collection<SvnAnnotateItem>.*import Iterable<SvnAnnotateItem>import Iterable<SvnAnnotateItem>.*import static Iterable<SvnAnnotateItem>.*import SvnCanonicalizeUrlsimport SvnCanonicalizeUrls.*import static SvnCanonicalizeUrls.*import SvnOperation<Void>import SvnOperation<Void>.*import static SvnOperation<Void>.*import SvnCatimport SvnCat.*import static SvnCat.*import SvnOperation<SVNProperties>import SvnOperation<SVNProperties>.*import static SvnOperation<SVNProperties>.*import SvnCheckoutimport SvnCheckout.*import static SvnCheckout.*import AbstractSvnUpdate<Long>import AbstractSvnUpdate<Long>.*import static AbstractSvnUpdate<Long>.*import SvnOperation<Long>import SvnOperation<Long>.*import static SvnOperation<Long>.*import SvnCleanupimport SvnCleanup.*import static SvnCleanup.*import SvnCommitPacket[]import SvnCommitPacket[].*import static SvnCommitPacket[].*import SvnCommitItemimport SvnCommitItem.*import static SvnCommitItem.*import Collection<SvnCommitItem>import Collection<SvnCommitItem>.*import static Collection<SvnCommitItem>.*import Iterable<SvnCommitItem>import Iterable<SvnCommitItem>.*import static Iterable<SvnCommitItem>.*import SvnCopyimport SvnCopy.*import static SvnCopy.*import SvnCopySourceimport SvnCopySource.*import static SvnCopySource.*import Collection<SvnCopySource>import Collection<SvnCopySource>.*import static Collection<SvnCopySource>.*import Iterable<SvnCopySource>import Iterable<SvnCopySource>.*import static Iterable<SvnCopySource>.*import SvnObjectimport SvnObject.*import static SvnObject.*import SvnDiffimport SvnDiff.*import static SvnDiff.*import SvnDiffStatusimport SvnDiffStatus.*import static SvnDiffStatus.*import SvnDiffSummarizeimport SvnDiffSummarize.*import static SvnDiffSummarize.*import SvnReceivingOperation<SvnDiffStatus>import SvnReceivingOperation<SvnDiffStatus>.*import static SvnReceivingOperation<SvnDiffStatus>.*import SvnOperation<SvnDiffStatus>import SvnOperation<SvnDiffStatus>.*import static SvnOperation<SvnDiffStatus>.*import ISvnObjectReceiver<SvnDiffStatus>import ISvnObjectReceiver<SvnDiffStatus>.*import static ISvnObjectReceiver<SvnDiffStatus>.*import Collection<SvnDiffStatus>import Collection<SvnDiffStatus>.*import static Collection<SvnDiffStatus>.*import Iterable<SvnDiffStatus>import Iterable<SvnDiffStatus>.*import static Iterable<SvnDiffStatus>.*import SvnExportimport SvnExport.*import static SvnExport.*import SvnGetChangelistPathsimport SvnGetChangelistPaths.*import static SvnGetChangelistPaths.*import SvnReceivingOperation<String>import SvnReceivingOperation<String>.*import static SvnReceivingOperation<String>.*import SvnOperation<String>import SvnOperation<String>.*import static SvnOperation<String>.*import ISvnObjectReceiver<String>import ISvnObjectReceiver<String>.*import static ISvnObjectReceiver<String>.*import SvnGetInfoimport SvnGetInfo.*import static SvnGetInfo.*import SvnReceivingOperation<SvnInfo>import SvnReceivingOperation<SvnInfo>.*import static SvnReceivingOperation<SvnInfo>.*import SvnOperation<SvnInfo>import SvnOperation<SvnInfo>.*import static SvnOperation<SvnInfo>.*import ISvnObjectReceiver<SvnInfo>import ISvnObjectReceiver<SvnInfo>.*import static ISvnObjectReceiver<SvnInfo>.*import SvnGetMergeInfoimport SvnGetMergeInfo.*import static SvnGetMergeInfo.*import SvnOperation<Map<SVNURL,SVNMergeRangeList>>import SvnOperation<Map<SVNURL,SVNMergeRangeList>>.*import static SvnOperation<Map<SVNURL,SVNMergeRangeList>>.*import SvnGetPropertiesimport SvnGetProperties.*import static SvnGetProperties.*import SvnReceivingOperation<SVNProperties>import SvnReceivingOperation<SVNProperties>.*import static SvnReceivingOperation<SVNProperties>.*import Collection<SVNProperties>import Collection<SVNProperties>.*import static Collection<SVNProperties>.*import Iterable<SVNProperties>import Iterable<SVNProperties>.*import static Iterable<SVNProperties>.*import SvnInheritedPropertiesimport SvnInheritedProperties.*import static SvnInheritedProperties.*import List<SvnInheritedProperties>import List<SvnInheritedProperties>.*import static List<SvnInheritedProperties>.*import Collection<SvnInheritedProperties>import Collection<SvnInheritedProperties>.*import static Collection<SvnInheritedProperties>.*import Iterable<SvnInheritedProperties>import Iterable<SvnInheritedProperties>.*import static Iterable<SvnInheritedProperties>.*import ISvnObjectReceiver<List<SvnInheritedProperties>>import ISvnObjectReceiver<List<SvnInheritedProperties>>.*import static ISvnObjectReceiver<List<SvnInheritedProperties>>.*import SvnGetStatusimport SvnGetStatus.*import static SvnGetStatus.*import SvnStatusimport SvnStatus.*import static SvnStatus.*import SvnReceivingOperation<SvnStatus>import SvnReceivingOperation<SvnStatus>.*import static SvnReceivingOperation<SvnStatus>.*import SvnOperation<SvnStatus>import SvnOperation<SvnStatus>.*import static SvnOperation<SvnStatus>.*import ISvnObjectReceiver<SvnStatus>import ISvnObjectReceiver<SvnStatus>.*import static ISvnObjectReceiver<SvnStatus>.*import Collection<SvnStatus>import Collection<SvnStatus>.*import static Collection<SvnStatus>.*import Iterable<SvnStatus>import Iterable<SvnStatus>.*import static Iterable<SvnStatus>.*import ISvnFileListHookimport ISvnFileListHook.*import static ISvnFileListHook.*import SvnGetStatusSummaryimport SvnGetStatusSummary.*import static SvnGetStatusSummary.*import SvnStatusSummaryimport SvnStatusSummary.*import static SvnStatusSummary.*import SvnOperation<SvnStatusSummary>import SvnOperation<SvnStatusSummary>.*import static SvnOperation<SvnStatusSummary>.*import SvnImportimport SvnImport.*import static SvnImport.*import SvnWorkingCopyInfoimport SvnWorkingCopyInfo.*import static SvnWorkingCopyInfo.*import SvnListimport SvnList.*import static SvnList.*import SvnReceivingOperation<SVNDirEntry>import SvnReceivingOperation<SVNDirEntry>.*import static SvnReceivingOperation<SVNDirEntry>.*import SvnOperation<SVNDirEntry>import SvnOperation<SVNDirEntry>.*import static SvnOperation<SVNDirEntry>.*import ISvnObjectReceiver<SVNDirEntry>import ISvnObjectReceiver<SVNDirEntry>.*import static ISvnObjectReceiver<SVNDirEntry>.*import SvnLogimport SvnLog.*import static SvnLog.*import SvnReceivingOperation<SVNLogEntry>import SvnReceivingOperation<SVNLogEntry>.*import static SvnReceivingOperation<SVNLogEntry>.*import SvnOperation<SVNLogEntry>import SvnOperation<SVNLogEntry>.*import static SvnOperation<SVNLogEntry>.*import ISvnObjectReceiver<SVNLogEntry>import ISvnObjectReceiver<SVNLogEntry>.*import static ISvnObjectReceiver<SVNLogEntry>.*import Collection<SVNLogEntry>import Collection<SVNLogEntry>.*import static Collection<SVNLogEntry>.*import Iterable<SVNLogEntry>import Iterable<SVNLogEntry>.*import static Iterable<SVNLogEntry>.*import SvnRevisionRangeimport SvnRevisionRange.*import static SvnRevisionRange.*import Collection<SvnRevisionRange>import Collection<SvnRevisionRange>.*import static Collection<SvnRevisionRange>.*import Iterable<SvnRevisionRange>import Iterable<SvnRevisionRange>.*import static Iterable<SvnRevisionRange>.*import SvnLogMergeInfoimport SvnLogMergeInfo.*import static SvnLogMergeInfo.*import SvnMarkReplacedimport SvnMarkReplaced.*import static SvnMarkReplaced.*import SvnMergeimport SvnMerge.*import static SvnMerge.*import ? extends SvnOperation<?>import ? extends SvnOperation<?>.*import static ? extends SvnOperation<?>.*import ISvnOperationRunner<?,? extends SvnOperation<?>>import ISvnOperationRunner<?,? extends SvnOperation<?>>.*import static ISvnOperationRunner<?,? extends SvnOperation<?>>.*import ISvnOperationRunner<>import ISvnOperationRunner<>.*import static ISvnOperationRunner<>.*import ISvnOperationRunner<?,SvnOperation<?>>import ISvnOperationRunner<?,SvnOperation<?>>.*import static ISvnOperationRunner<?,SvnOperation<?>>.*import SvnSetWCDbVersionimport SvnSetWCDbVersion.*import static SvnSetWCDbVersion.*import SvnRepositoryGetFileSizeimport SvnRepositoryGetFileSize.*import static SvnRepositoryGetFileSize.*import SvnRepositoryGetRevisionPropertiesimport SvnRepositoryGetRevisionProperties.*import static SvnRepositoryGetRevisionProperties.*import SvnRepositoryGetTreeimport SvnRepositoryGetTree.*import static SvnRepositoryGetTree.*import SvnRepositoryGetHistoryimport SvnRepositoryGetHistory.*import static SvnRepositoryGetHistory.*import SvnRepositoryGetDiffimport SvnRepositoryGetDiff.*import static SvnRepositoryGetDiff.*import SvnRepositoryGetChangedDirectoriesimport SvnRepositoryGetChangedDirectories.*import static SvnRepositoryGetChangedDirectories.*import SvnRepositoryGetChangedimport SvnRepositoryGetChanged.*import static SvnRepositoryGetChanged.*import SvnRepositoryCatimport SvnRepositoryCat.*import static SvnRepositoryCat.*import SvnRepositoryGetPropertiesimport SvnRepositoryGetProperties.*import static SvnRepositoryGetProperties.*import SvnRepositoryGetRevisionPropertyimport SvnRepositoryGetRevisionProperty.*import static SvnRepositoryGetRevisionProperty.*import SvnRepositoryGetPropertyimport SvnRepositoryGetProperty.*import static SvnRepositoryGetProperty.*import SvnRepositoryGetYoungestimport SvnRepositoryGetYoungest.*import static SvnRepositoryGetYoungest.*import SvnRepositoryGetUUIDimport SvnRepositoryGetUUID.*import static SvnRepositoryGetUUID.*import SvnRepositoryGetLogimport SvnRepositoryGetLog.*import static SvnRepositoryGetLog.*import SvnRepositoryGetLockimport SvnRepositoryGetLock.*import static SvnRepositoryGetLock.*import SvnRepositoryGetInfoimport SvnRepositoryGetInfo.*import static SvnRepositoryGetInfo.*import SvnRepositoryGetDateimport SvnRepositoryGetDate.*import static SvnRepositoryGetDate.*import SvnRepositoryGetAuthorimport SvnRepositoryGetAuthor.*import static SvnRepositoryGetAuthor.*import SvnRepositoryFilterimport SvnRepositoryFilter.*import static SvnRepositoryFilter.*import SvnRepositorySynchronizeimport SvnRepositorySynchronize.*import static SvnRepositorySynchronize.*import SvnRepositoryCopyRevisionPropertiesimport SvnRepositoryCopyRevisionProperties.*import static SvnRepositoryCopyRevisionProperties.*import SvnRepositorySyncInfoimport SvnRepositorySyncInfo.*import static SvnRepositorySyncInfo.*import SvnRepositoryInitializeimport SvnRepositoryInitialize.*import static SvnRepositoryInitialize.*import SvnRepositoryVerifyimport SvnRepositoryVerify.*import static SvnRepositoryVerify.*import SvnRepositoryUpgradeimport SvnRepositoryUpgrade.*import static SvnRepositoryUpgrade.*import SvnRepositorySetUUIDimport SvnRepositorySetUUID.*import static SvnRepositorySetUUID.*import SvnRepositoryRemoveTransactionsimport SvnRepositoryRemoveTransactions.*import static SvnRepositoryRemoveTransactions.*import SvnRepositoryRemoveLocksimport SvnRepositoryRemoveLocks.*import static SvnRepositoryRemoveLocks.*import SvnRepositoryRecoverimport SvnRepositoryRecover.*import static SvnRepositoryRecover.*import SvnRepositoryPackimport SvnRepositoryPack.*import static SvnRepositoryPack.*import SvnRepositoryListTransactionsimport SvnRepositoryListTransactions.*import static SvnRepositoryListTransactions.*import SvnRepositoryListLocksimport SvnRepositoryListLocks.*import static SvnRepositoryListLocks.*import SvnRepositoryLoadimport SvnRepositoryLoad.*import static SvnRepositoryLoad.*import SvnRepositoryHotCopyimport SvnRepositoryHotCopy.*import static SvnRepositoryHotCopy.*import SvnRepositoryCreateimport SvnRepositoryCreate.*import static SvnRepositoryCreate.*import SvnRepositoryDumpimport SvnRepositoryDump.*import static SvnRepositoryDump.*import SvnResolveimport SvnResolve.*import static SvnResolve.*import SvnSuggestMergeSourcesimport SvnSuggestMergeSources.*import static SvnSuggestMergeSources.*import SvnPatchimport SvnPatch.*import static SvnPatch.*import SvnRemoteDeleteimport SvnRemoteDelete.*import static SvnRemoteDelete.*import SvnRemoteMkDirimport SvnRemoteMkDir.*import static SvnRemoteMkDir.*import SvnSetPropertyimport SvnSetProperty.*import static SvnSetProperty.*import SvnRevertimport SvnRevert.*import static SvnRevert.*import SvnScheduleForRemovalimport SvnScheduleForRemoval.*import static SvnScheduleForRemoval.*import SvnScheduleForAdditionimport SvnScheduleForAddition.*import static SvnScheduleForAddition.*import SvnRelocateimport SvnRelocate.*import static SvnRelocate.*import SvnSwitchimport SvnSwitch.*import static SvnSwitch.*import SvnUpdateimport SvnUpdate.*import static SvnUpdate.*import SvnUpgradeimport SvnUpgrade.*import static SvnUpgrade.*import SvnUnlockimport SvnUnlock.*import static SvnUnlock.*import SvnSetLockimport SvnSetLock.*import static SvnSetLock.*import SvnSetChangelistimport SvnSetChangelist.*import static SvnSetChangelist.*import SvnRemoteSetPropertyimport SvnRemoteSetProperty.*import static SvnRemoteSetProperty.*import SvnRemoteCopyimport SvnRemoteCopy.*import static SvnRemoteCopy.*import SvnOperation<T>import SvnOperation<T>.*import static SvnOperation<T>.*import SvnOperation<SVNURL>import SvnOperation<SVNURL>.*import static SvnOperation<SVNURL>.*import ISvnObjectReceiver<SVNPropertyData>import ISvnObjectReceiver<SVNPropertyData>.*import static ISvnObjectReceiver<SVNPropertyData>.*import SvnScheduleimport SvnSchedule.*import static SvnSchedule.*import Enum<SvnSchedule>import Enum<SvnSchedule>.*import static Enum<SvnSchedule>.*import Comparable<SvnSchedule>import Comparable<SvnSchedule>.*import static Comparable<SvnSchedule>.*import Class<SvnSchedule>import Class<SvnSchedule>.*import static Class<SvnSchedule>.*import SvnSchedule[]import SvnSchedule[].*import static SvnSchedule[].*import SvnReceivingOperation<SVNLock>import SvnReceivingOperation<SVNLock>.*import static SvnReceivingOperation<SVNLock>.*import SvnOperation<SVNLock>import SvnOperation<SVNLock>.*import static SvnOperation<SVNLock>.*import ISvnObjectReceiver<SVNLock>import ISvnObjectReceiver<SVNLock>.*import static ISvnObjectReceiver<SVNLock>.*import Collection<SVNLock>import Collection<SVNLock>.*import static Collection<SVNLock>.*import Iterable<SVNLock>import Iterable<SVNLock>.*import static Iterable<SVNLock>.*import SvnReceivingOperation<SVNPropertyData>import SvnReceivingOperation<SVNPropertyData>.*import static SvnReceivingOperation<SVNPropertyData>.*import SvnOperation<SVNPropertyData>import SvnOperation<SVNPropertyData>.*import static SvnOperation<SVNPropertyData>.*import Collection<SVNPropertyData>import Collection<SVNPropertyData>.*import static Collection<SVNPropertyData>.*import Iterable<SVNPropertyData>import Iterable<SVNPropertyData>.*import static Iterable<SVNPropertyData>.*import ISvnPropertyValueProviderimport ISvnPropertyValueProvider.*import static ISvnPropertyValueProvider.*import SvnOperation<Collection<SVNURL>>import SvnOperation<Collection<SVNURL>>.*import static SvnOperation<Collection<SVNURL>>.*import AbstractSvnUpdate<long[]>import AbstractSvnUpdate<long[]>.*import static AbstractSvnUpdate<long[]>.*import SvnOperation<long[]>import SvnOperation<long[]>.*import static SvnOperation<long[]>.*import SvnOperation<SvnWcGeneration>import SvnOperation<SvnWcGeneration>.*import static SvnOperation<SvnWcGeneration>.*import SvnRepositoryOperationimport SvnRepositoryOperation.*import static SvnRepositoryOperation.*import SvnRepositoryOperation<Long>import SvnRepositoryOperation<Long>.*import static SvnRepositoryOperation<Long>.*import SvnRepositoryReceivingOperationimport SvnRepositoryReceivingOperation.*import static SvnRepositoryReceivingOperation.*import SvnRepositoryReceivingOperation<SVNAdminEvent>import SvnRepositoryReceivingOperation<SVNAdminEvent>.*import static SvnRepositoryReceivingOperation<SVNAdminEvent>.*import SvnReceivingOperation<SVNAdminEvent>import SvnReceivingOperation<SVNAdminEvent>.*import static SvnReceivingOperation<SVNAdminEvent>.*import SvnOperation<SVNAdminEvent>import SvnOperation<SVNAdminEvent>.*import static SvnOperation<SVNAdminEvent>.*import ISvnObjectReceiver<SVNAdminEvent>import ISvnObjectReceiver<SVNAdminEvent>.*import static ISvnObjectReceiver<SVNAdminEvent>.*import Collection<SVNAdminEvent>import Collection<SVNAdminEvent>.*import static Collection<SVNAdminEvent>.*import Iterable<SVNAdminEvent>import Iterable<SVNAdminEvent>.*import static Iterable<SVNAdminEvent>.*import SvnRepositoryOperation<SVNURL>import SvnRepositoryOperation<SVNURL>.*import static SvnRepositoryOperation<SVNURL>.*import SvnRepositoryOperation<String>import SvnRepositoryOperation<String>.*import static SvnRepositoryOperation<String>.*import SvnRepositoryReceivingOperation<SVNChangeEntry>import SvnRepositoryReceivingOperation<SVNChangeEntry>.*import static SvnRepositoryReceivingOperation<SVNChangeEntry>.*import SvnReceivingOperation<SVNChangeEntry>import SvnReceivingOperation<SVNChangeEntry>.*import static SvnReceivingOperation<SVNChangeEntry>.*import SvnOperation<SVNChangeEntry>import SvnOperation<SVNChangeEntry>.*import static SvnOperation<SVNChangeEntry>.*import ISvnObjectReceiver<SVNChangeEntry>import ISvnObjectReceiver<SVNChangeEntry>.*import static ISvnObjectReceiver<SVNChangeEntry>.*import Collection<SVNChangeEntry>import Collection<SVNChangeEntry>.*import static Collection<SVNChangeEntry>.*import Iterable<SVNChangeEntry>import Iterable<SVNChangeEntry>.*import static Iterable<SVNChangeEntry>.*import SvnRepositoryReceivingOperation<String>import SvnRepositoryReceivingOperation<String>.*import static SvnRepositoryReceivingOperation<String>.*import SvnRepositoryOperation<Date>import SvnRepositoryOperation<Date>.*import static SvnRepositoryOperation<Date>.*import SvnOperation<Date>import SvnOperation<Date>.*import static SvnOperation<Date>.*import SvnRepositoryReceivingOperation<SVNAdminPath>import SvnRepositoryReceivingOperation<SVNAdminPath>.*import static SvnRepositoryReceivingOperation<SVNAdminPath>.*import SvnReceivingOperation<SVNAdminPath>import SvnReceivingOperation<SVNAdminPath>.*import static SvnReceivingOperation<SVNAdminPath>.*import SvnOperation<SVNAdminPath>import SvnOperation<SVNAdminPath>.*import static SvnOperation<SVNAdminPath>.*import ISvnObjectReceiver<SVNAdminPath>import ISvnObjectReceiver<SVNAdminPath>.*import static ISvnObjectReceiver<SVNAdminPath>.*import Collection<SVNAdminPath>import Collection<SVNAdminPath>.*import static Collection<SVNAdminPath>.*import Iterable<SVNAdminPath>import Iterable<SVNAdminPath>.*import static Iterable<SVNAdminPath>.*import SvnRepositoryOperation<SVNLogEntry>import SvnRepositoryOperation<SVNLogEntry>.*import static SvnRepositoryOperation<SVNLogEntry>.*import SvnRepositoryOperation<SVNLock>import SvnRepositoryOperation<SVNLock>.*import static SvnRepositoryOperation<SVNLock>.*import SvnRepositoryOperation<SVNProperties>import SvnRepositoryOperation<SVNProperties>.*import static SvnRepositoryOperation<SVNProperties>.*import SvnRepositoryOperation<SVNPropertyValue>import SvnRepositoryOperation<SVNPropertyValue>.*import static SvnRepositoryOperation<SVNPropertyValue>.*import SvnOperation<SVNPropertyValue>import SvnOperation<SVNPropertyValue>.*import static SvnOperation<SVNPropertyValue>.*import SvnReceivingOperation<T>import SvnReceivingOperation<T>.*import static SvnReceivingOperation<T>.*import SvnCommitItem[]import SvnCommitItem[].*import static SvnCommitItem[].*import SVNLogTypeimport SVNLogType.*import static SVNLogType.*import CSSParseExceptionimport CSSParseException.*import static CSSParseException.*import DOMStringListimport DOMStringList.*import static DOMStringList.*import CSSRuleimport CSSRule.*import static CSSRule.*import SAXParseExceptionimport SAXParseException.*import static SAXParseException.*import XMLFilterimport XMLFilter.*import static XMLFilter.*import Set<AppContext>import Set<AppContext>.*import static Set<AppContext>.*import Collection<AppContext>import Collection<AppContext>.*import static Collection<AppContext>.*import Iterable<AppContext>import Iterable<AppContext>.*import static Iterable<AppContext>.*import Enum<Cause>import Enum<Cause>.*import static Enum<Cause>.*import Comparable<Cause>import Comparable<Cause>.*import static Comparable<Cause>.*import Class<Cause>import Class<Cause>.*import static Class<Cause>.*import CausedFocusEventimport CausedFocusEvent.*import static CausedFocusEvent.*import ConstrainableGraphicsimport ConstrainableGraphics.*import static ConstrainableGraphics.*import DisplayChangedListenerimport DisplayChangedListener.*import static DisplayChangedListener.*import PathConsumer2Dimport PathConsumer2D.*import static PathConsumer2D.*import PixelConverterimport PixelConverter.*import static PixelConverter.*import FlushableCacheDataimport FlushableCacheData.*import static FlushableCacheData.*import ImageAccessorimport ImageAccessor.*import static ImageAccessor.*import SurfaceDataimport SurfaceData.*import static SurfaceData.*import CharToGlyphMapperimport CharToGlyphMapper.*import static CharToGlyphMapper.*import Font2Dimport Font2D.*import static Font2D.*import FontStrikeDescimport FontStrikeDesc.*import static FontStrikeDesc.*import FontStrikeimport FontStrike.*import static FontStrike.*import ConcurrentHashMap<FontStrikeDesc,Reference<>>import ConcurrentHashMap<FontStrikeDesc,Reference<>>.*import static ConcurrentHashMap<FontStrikeDesc,Reference<>>.*import AbstractMap<FontStrikeDesc,Reference<>>import AbstractMap<FontStrikeDesc,Reference<>>.*import static AbstractMap<FontStrikeDesc,Reference<>>.*import Map<FontStrikeDesc,Reference<>>import Map<FontStrikeDesc,Reference<>>.*import static Map<FontStrikeDesc,Reference<>>.*import ConcurrentMap<FontStrikeDesc,Reference<>>import ConcurrentMap<FontStrikeDesc,Reference<>>.*import static ConcurrentMap<FontStrikeDesc,Reference<>>.*import FontFamilyimport FontFamily.*import static FontFamily.*import Font2DHandleimport Font2DHandle.*import static Font2DHandle.*import FontFamily[]import FontFamily[].*import static FontFamily[].*import StrikeMetricsimport StrikeMetrics.*import static StrikeMetrics.*import FontStrikeDisposerimport FontStrikeDisposer.*import static FontStrikeDisposer.*import PollDisposableimport PollDisposable.*import static PollDisposable.*import long[][]import long[][].*import static long[][].*import GlyphListimport GlyphList.*import static GlyphList.*import FontInfoimport FontInfo.*import static FontInfo.*import Enum<Wrapper>import Enum<Wrapper>.*import static Enum<Wrapper>.*import Comparable<Wrapper>import Comparable<Wrapper>.*import static Comparable<Wrapper>.*import Class<Wrapper>import Class<Wrapper>.*import static Class<Wrapper>.*import Wrapper[]import Wrapper[].*import static Wrapper[].*import DestSurfaceProviderimport DestSurfaceProvider.*import static DestSurfaceProvider.*import Surfaceimport Surface.*import static Surface.*import Disposerimport Disposer.*import static Disposer.*import ReferenceQueue<>import ReferenceQueue<>.*import static ReferenceQueue<>.*import DisposerTargetimport DisposerTarget.*import static DisposerTarget.*import StateTrackableimport StateTrackable.*import static StateTrackable.*import StateTrackerimport StateTracker.*import static StateTracker.*import SunGraphics2Dimport SunGraphics2D.*import static SunGraphics2D.*import Blitimport Blit.*import static Blit.*import ValidatePipeimport ValidatePipe.*import static ValidatePipe.*import CompositeTypeimport CompositeType.*import static CompositeType.*import RenderLoopsimport RenderLoops.*import static RenderLoops.*import MaskFillimport MaskFill.*import static MaskFill.*import TextPipeimport TextPipe.*import static TextPipe.*import ShapeDrawPipeimport ShapeDrawPipe.*import static ShapeDrawPipe.*import DrawImagePipeimport DrawImagePipe.*import static DrawImagePipe.*import PixelFillPipeimport PixelFillPipe.*import static PixelFillPipe.*import PixelDrawPipeimport PixelDrawPipe.*import static PixelDrawPipe.*import SurfaceTypeimport SurfaceType.*import static SurfaceType.*import SurfaceDataProxyimport SurfaceDataProxy.*import static SurfaceDataProxy.*import PixelToParallelogramConverterimport PixelToParallelogramConverter.*import static PixelToParallelogramConverter.*import AAShapePipeimport AAShapePipe.*import static AAShapePipe.*import CompositePipeimport CompositePipe.*import static CompositePipe.*import PixelToShapeConverterimport PixelToShapeConverter.*import static PixelToShapeConverter.*import SpanShapeRendererimport SpanShapeRenderer.*import static SpanShapeRenderer.*import AlphaColorPipeimport AlphaColorPipe.*import static AlphaColorPipe.*import LoopPipeimport LoopPipe.*import static LoopPipe.*import GraphicsPrimitiveimport GraphicsPrimitive.*import static GraphicsPrimitive.*import DrawGlyphListimport DrawGlyphList.*import static DrawGlyphList.*import DrawGlyphListAAimport DrawGlyphListAA.*import static DrawGlyphListAA.*import DrawGlyphListLCDimport DrawGlyphListLCD.*import static DrawGlyphListLCD.*import DrawLineimport DrawLine.*import static DrawLine.*import DrawParallelogramimport DrawParallelogram.*import static DrawParallelogram.*import DrawPathimport DrawPath.*import static DrawPath.*import DrawPolygonsimport DrawPolygons.*import static DrawPolygons.*import DrawRectimport DrawRect.*import static DrawRect.*import FillParallelogramimport FillParallelogram.*import static FillParallelogram.*import FillPathimport FillPath.*import static FillPath.*import FillRectimport FillRect.*import static FillRect.*import FillSpansimport FillSpans.*import static FillSpans.*import SpanIteratorimport SpanIterator.*import static SpanIterator.*import GeneralBinaryOpimport GeneralBinaryOp.*import static GeneralBinaryOp.*import GeneralUnaryOpimport GeneralUnaryOp.*import static GeneralUnaryOp.*import ParallelogramPipeimport ParallelogramPipe.*import static ParallelogramPipe.*import AATileGeneratorimport AATileGenerator.*import static AATileGenerator.*import RenderingEngineimport RenderingEngine.*import static RenderingEngine.*import LoopBasedPipeimport LoopBasedPipe.*import static LoopBasedPipe.*import ShapeSpanIteratorimport ShapeSpanIterator.*import static ShapeSpanIterator.*import RegionIteratorimport RegionIterator.*import static RegionIterator.*import Loaderimport Loader.*import static Loader.*import Enumeration<Resource>import Enumeration<Resource>.*import static Enumeration<Resource>.*import List<IOException>import List<IOException>.*import static List<IOException>.*import Collection<IOException>import Collection<IOException>.*import static Collection<IOException>.*import Iterable<IOException>import Iterable<IOException>.*import static Iterable<IOException>.*import HashMap<String,Loader>import HashMap<String,Loader>.*import static HashMap<String,Loader>.*import AbstractMap<String,Loader>import AbstractMap<String,Loader>.*import static AbstractMap<String,Loader>.*import Map<String,Loader>import Map<String,Loader>.*import static Map<String,Loader>.*import ArrayList<Loader>import ArrayList<Loader>.*import static ArrayList<Loader>.*import AbstractList<Loader>import AbstractList<Loader>.*import static AbstractList<Loader>.*import AbstractCollection<Loader>import AbstractCollection<Loader>.*import static AbstractCollection<Loader>.*import Collection<Loader>import Collection<Loader>.*import static Collection<Loader>.*import Iterable<Loader>import Iterable<Loader>.*import static Iterable<Loader>.*import List<Loader>import List<Loader>.*import static List<Loader>.*import Stack<URL>import Stack<URL>.*import static Stack<URL>.*import Vector<URL>import Vector<URL>.*import static Vector<URL>.*import AbstractList<URL>import AbstractList<URL>.*import static AbstractList<URL>.*import AbstractCollection<URL>import AbstractCollection<URL>.*import static AbstractCollection<URL>.*import FieldAccessorimport FieldAccessor.*import static FieldAccessor.*import LangReflectAccessimport LangReflectAccess.*import static LangReflectAccess.*import Map<String,Method>import Map<String,Method>.*import static Map<String,Method>.*import Map<String,Class<?>>import Map<String,Class<?>>.*import static Map<String,Class<?>>.*import GenericsFactoryimport GenericsFactory.*import static GenericsFactory.*import FieldTypeSignatureimport FieldTypeSignature.*import static FieldTypeSignature.*import FieldTypeSignature[]import FieldTypeSignature[].*import static FieldTypeSignature[].*import AbstractRepositoryimport AbstractRepository.*import static AbstractRepository.*import Treeimport Tree.*import static Tree.*import Reifierimport Reifier.*import static Reifier.*import GenericDeclRepositoryimport GenericDeclRepository.*import static GenericDeclRepository.*import MethodTypeSignatureimport MethodTypeSignature.*import static MethodTypeSignature.*import GenericDeclRepository<MethodTypeSignature>import GenericDeclRepository<MethodTypeSignature>.*import static GenericDeclRepository<MethodTypeSignature>.*import AbstractRepository<MethodTypeSignature>import AbstractRepository<MethodTypeSignature>.*import static AbstractRepository<MethodTypeSignature>.*import AbstractRepository<S>import AbstractRepository<S>.*import static AbstractRepository<S>.*import Signatureimport Signature.*import static Signature.*import ArrayTypeSignatureimport ArrayTypeSignature.*import static ArrayTypeSignature.*import TypeTreeVisitorimport TypeTreeVisitor.*import static TypeTreeVisitor.*import TypeTreeVisitor<?>import TypeTreeVisitor<?>.*import static TypeTreeVisitor<?>.*import TypeSignatureimport TypeSignature.*import static TypeSignature.*import BaseTypeimport BaseType.*import static BaseType.*import BooleanSignatureimport BooleanSignature.*import static BooleanSignature.*import BottomSignatureimport BottomSignature.*import static BottomSignature.*import ByteSignatureimport ByteSignature.*import static ByteSignature.*import CharSignatureimport CharSignature.*import static CharSignature.*import ClassSignatureimport ClassSignature.*import static ClassSignature.*import Visitor<?>import Visitor<?>.*import static Visitor<?>.*import ClassTypeSignatureimport ClassTypeSignature.*import static ClassTypeSignature.*import ClassTypeSignature[]import ClassTypeSignature[].*import static ClassTypeSignature[].*import FormalTypeParameterimport FormalTypeParameter.*import static FormalTypeParameter.*import FormalTypeParameter[]import FormalTypeParameter[].*import static FormalTypeParameter[].*import SimpleClassTypeSignatureimport SimpleClassTypeSignature.*import static SimpleClassTypeSignature.*import List<SimpleClassTypeSignature>import List<SimpleClassTypeSignature>.*import static List<SimpleClassTypeSignature>.*import Collection<SimpleClassTypeSignature>import Collection<SimpleClassTypeSignature>.*import static Collection<SimpleClassTypeSignature>.*import Iterable<SimpleClassTypeSignature>import Iterable<SimpleClassTypeSignature>.*import static Iterable<SimpleClassTypeSignature>.*import DoubleSignatureimport DoubleSignature.*import static DoubleSignature.*import TypeArgumentimport TypeArgument.*import static TypeArgument.*import FloatSignatureimport FloatSignature.*import static FloatSignature.*import TypeTreeimport TypeTree.*import static TypeTree.*import IntSignatureimport IntSignature.*import static IntSignature.*import LongSignatureimport LongSignature.*import static LongSignature.*import ReturnTypeimport ReturnType.*import static ReturnType.*import TypeSignature[]import TypeSignature[].*import static TypeSignature[].*import ShortSignatureimport ShortSignature.*import static ShortSignature.*import TypeArgument[]import TypeArgument[].*import static TypeArgument[].*import TypeVariableSignatureimport TypeVariableSignature.*import static TypeVariableSignature.*import VoidDescriptorimport VoidDescriptor.*import static VoidDescriptor.*import Wildcardimport Wildcard.*import static Wildcard.*import TypeTreeVisitor<Type>import TypeTreeVisitor<Type>.*import static TypeTreeVisitor<Type>.*import TypeTreeVisitor<T>import TypeTreeVisitor<T>.*import static TypeTreeVisitor<T>.*import BitArrayimport BitArray.*import static BitArray.*import DerEncoderimport DerEncoder.*import static DerEncoder.*import DerInputBufferimport DerInputBuffer.*import static DerInputBuffer.*import DerInputStreamimport DerInputStream.*import static DerInputStream.*import DerValueimport DerValue.*import static DerValue.*import DerValue[]import DerValue[].*import static DerValue[].*import ObjectIdentifierimport ObjectIdentifier.*import static ObjectIdentifier.*import DerOutputStreamimport DerOutputStream.*import static DerOutputStream.*import DerEncoder[]import DerEncoder[].*import static DerEncoder[].*import Hashtable<String,CodeSigner[]>import Hashtable<String,CodeSigner[]>.*import static Hashtable<String,CodeSigner[]>.*import Dictionary<String,CodeSigner[]>import Dictionary<String,CodeSigner[]>.*import static Dictionary<String,CodeSigner[]>.*import Map<String,CodeSigner[]>import Map<String,CodeSigner[]>.*import static Map<String,CodeSigner[]>.*import ArrayList<byte[]>import ArrayList<byte[]>.*import static ArrayList<byte[]>.*import AbstractList<byte[]>import AbstractList<byte[]>.*import static AbstractList<byte[]>.*import AbstractCollection<byte[]>import AbstractCollection<byte[]>.*import static AbstractCollection<byte[]>.*import Collection<byte[]>import Collection<byte[]>.*import static Collection<byte[]>.*import Iterable<byte[]>import Iterable<byte[]>.*import static Iterable<byte[]>.*import List<byte[]>import List<byte[]>.*import static List<byte[]>.*import ArrayList<MessageDigest>import ArrayList<MessageDigest>.*import static ArrayList<MessageDigest>.*import AbstractList<MessageDigest>import AbstractList<MessageDigest>.*import static AbstractList<MessageDigest>.*import AbstractCollection<MessageDigest>import AbstractCollection<MessageDigest>.*import static AbstractCollection<MessageDigest>.*import Collection<MessageDigest>import Collection<MessageDigest>.*import static Collection<MessageDigest>.*import Iterable<MessageDigest>import Iterable<MessageDigest>.*import static Iterable<MessageDigest>.*import List<MessageDigest>import List<MessageDigest>.*import static List<MessageDigest>.*import HashMap<String,MessageDigest>import HashMap<String,MessageDigest>.*import static HashMap<String,MessageDigest>.*import AbstractMap<String,MessageDigest>import AbstractMap<String,MessageDigest>.*import static AbstractMap<String,MessageDigest>.*import Map<String,MessageDigest>import Map<String,MessageDigest>.*import static Map<String,MessageDigest>.*import AVAimport AVA.*import static AVA.*import GeneralNameInterfaceimport GeneralNameInterface.*import static GeneralNameInterface.*import RDNimport RDN.*import static RDN.*import List<AVA>import List<AVA>.*import static List<AVA>.*import Collection<AVA>import Collection<AVA>.*import static Collection<AVA>.*import Iterable<AVA>import Iterable<AVA>.*import static Iterable<AVA>.*import AVA[]import AVA[].*import static AVA[].*import List<RDN>import List<RDN>.*import static List<RDN>.*import Collection<RDN>import Collection<RDN>.*import static Collection<RDN>.*import Iterable<RDN>import Iterable<RDN>.*import static Iterable<RDN>.*import RDN[]import RDN[].*import static RDN[].*import CaseInsensitiveCharimport CaseInsensitiveChar.*import static CaseInsensitiveChar.*import InternalLocaleBuilderimport InternalLocaleBuilder.*import static InternalLocaleBuilder.*import CaseInsensitiveStringimport CaseInsensitiveString.*import static CaseInsensitiveString.*import LocaleSyntaxExceptionimport LocaleSyntaxException.*import static LocaleSyntaxException.*import LanguageTagimport LanguageTag.*import static LanguageTag.*import ParseStatusimport ParseStatus.*import static ParseStatus.*import Map<CaseInsensitiveChar,String>import Map<CaseInsensitiveChar,String>.*import static Map<CaseInsensitiveChar,String>.*import Set<CaseInsensitiveString>import Set<CaseInsensitiveString>.*import static Set<CaseInsensitiveString>.*import Collection<CaseInsensitiveString>import Collection<CaseInsensitiveString>.*import static Collection<CaseInsensitiveString>.*import Iterable<CaseInsensitiveString>import Iterable<CaseInsensitiveString>.*import static Iterable<CaseInsensitiveString>.*import Map<CaseInsensitiveString,String>import Map<CaseInsensitiveString,String>.*import static Map<CaseInsensitiveString,String>.*import org.jenkinsci.plugins.rundeck.*import java.util.*import java.lang.*import hudson.model.*import java.util.function.*import java.util.stream.*import hudson.console.*import jenkins.model.lazy.*import hudson.*import hudson.util.*import hudson.widgets.*import java.lang.reflect.*import hudson.scm.*import org.rundeck.api.domain.*import hudson.triggers.*import hudson.model.queue.*import java.util.concurrent.*import hudson.tasks.*import org.kohsuke.stapler.lang.*import org.rundeck.api.parser.*import org.jenkinsci.plugins.rundeck.cache.*import com.google.common.cache.*import com.google.common.base.*import com.google.common.util.concurrent.*import com.google.common.collect.*import org.rundeck.api.*import .*import antlr.*import com.cloudbees.plugins.credentials.*import com.cloudbees.plugins.credentials.common.*import com.cloudbees.plugins.credentials.domains.*import com.cloudbees.plugins.credentials.impl.*import com.gargoylesoftware.htmlunit.*import com.gargoylesoftware.htmlunit.html.*import com.gargoylesoftware.htmlunit.activex.javascript.msxml.*import com.gargoylesoftware.htmlunit.attachment.*import com.gargoylesoftware.htmlunit.html.impl.*import com.gargoylesoftware.htmlunit.javascript.*import com.gargoylesoftware.htmlunit.javascript.background.*import com.gargoylesoftware.htmlunit.javascript.configuration.*import com.gargoylesoftware.htmlunit.javascript.host.*import com.gargoylesoftware.htmlunit.javascript.host.css.*import com.gargoylesoftware.htmlunit.javascript.host.dom.*import com.gargoylesoftware.htmlunit.javascript.host.event.*import com.gargoylesoftware.htmlunit.javascript.host.geo.*import com.gargoylesoftware.htmlunit.javascript.host.html.*import com.gargoylesoftware.htmlunit.javascript.host.performance.*import com.gargoylesoftware.htmlunit.javascript.host.speech.*import com.gargoylesoftware.htmlunit.javascript.host.xml.*import com.gargoylesoftware.htmlunit.util.*import com.gargoylesoftware.htmlunit.xml.*import com.google.common.annotations.*import java.lang.ref.*import java.util.concurrent.atomic.*import com.google.inject.*import com.google.inject.matcher.*import javax.inject.*import com.google.inject.binder.*import com.google.inject.spi.*import com.infradna.tool.bridge_method_injector.*import com.thoughtworks.xstream.*import com.thoughtworks.xstream.converters.*import com.thoughtworks.xstream.converters.reflection.*import com.thoughtworks.xstream.core.*import com.thoughtworks.xstream.io.*import com.thoughtworks.xstream.mapper.*import com.thoughtworks.xstream.security.*import com.trilead.ssh2.auth.*import edu.umd.cs.findbugs.annotations.*import hidden.jth.org.apache.http.*import hidden.jth.org.apache.http.annotation.*import hidden.jth.org.apache.http.auth.*import hidden.jth.org.apache.http.client.*import hidden.jth.org.apache.http.cookie.*import hudson.remoting.*import hudson.cli.*import hudson.cli.declarative.*import hudson.init.*import hudson.lifecycle.*import hudson.logging.*import hudson.markup.*import org.kohsuke.args4j.spi.*import hudson.slaves.*import hudson.tools.*import hudson.model.labels.*import hudson.model.listeners.*import hudson.node_monitors.*import hudson.os.*import hudson.remoting.forward.*import hudson.scheduler.*import hudson.scm.subversion.*import hudson.search.*import hudson.security.*import hudson.security.captcha.*import hudson.security.csrf.*import hudson.util.io.*import hudson.views.*import java.applet.*import java.awt.*import sun.awt.util.*import java.awt.color.*import java.awt.datatransfer.*import java.awt.dnd.*import java.awt.dnd.peer.*import java.awt.event.*import java.awt.font.*import java.awt.geom.*import java.awt.im.*import java.awt.image.*import java.awt.image.renderable.*import java.awt.peer.*import java.beans.*import java.io.*import java.lang.annotation.*import java.lang.invoke.*import java.math.*import java.net.*import java.nio.*import java.nio.channels.*import java.nio.file.attribute.*import java.nio.channels.spi.*import java.nio.charset.*import java.nio.file.*import java.nio.file.spi.*import java.security.*import java.security.cert.*import java.security.spec.*import java.text.*import java.time.*import java.time.temporal.*import java.time.chrono.*import java.time.format.*import java.time.zone.*import java.util.concurrent.locks.*import java.util.jar.*import java.util.logging.*import java.util.regex.*import java.util.zip.*import javax.accessibility.*import javax.annotation.*import javax.annotation.concurrent.*import javax.annotation.meta.*import javax.annotation.processing.*import javax.crypto.*import javax.lang.model.*import javax.lang.model.element.*import javax.lang.model.type.*import javax.lang.model.util.*import javax.net.ssl.*import javax.security.auth.*import javax.security.auth.x500.*import javax.servlet.*import javax.servlet.annotation.*import javax.servlet.descriptor.*import javax.servlet.http.*import javax.swing.text.*import javax.tools.*import javax.xml.transform.*import javax.xml.transform.stream.*import jenkins.*import jenkins.model.*import jenkins.model.queue.*import jenkins.mvn.*import jenkins.scm.*import jenkins.slaves.systemInfo.*import jenkins.tasks.*import jenkins.triggers.*import jenkins.util.*import jenkins.util.io.*import junit.framework.*import mockit.*import org.hamcrest.*import mockit.internal.*import mockit.internal.expectations.*import mockit.internal.expectations.argumentMatching.*import mockit.internal.expectations.invocation.*import net.java.sezpoz.*import net.sf.json.*import net.sf.json.processors.*import net.sf.json.util.*import net.sourceforge.htmlunit.corejs.javascript.*import net.sourceforge.htmlunit.corejs.javascript.ast.*import net.sourceforge.htmlunit.corejs.javascript.debug.*import net.sourceforge.htmlunit.corejs.javascript.xml.*import org.acegisecurity.*import org.acegisecurity.acls.sid.*import org.acegisecurity.context.*import org.acegisecurity.ui.rememberme.*import org.acegisecurity.userdetails.*import org.aopalliance.aop.*import org.aopalliance.intercept.*import org.apache.commons.beanutils.*import org.apache.commons.collections.*import org.apache.commons.fileupload.*import org.apache.commons.io.*import org.apache.commons.io.filefilter.*import org.apache.commons.jelly.*import org.apache.commons.lang.*import org.apache.commons.lang.exception.*import org.apache.commons.lang.time.*import org.apache.tools.ant.*import org.apache.tools.ant.input.*import org.apache.tools.ant.types.*import org.apache.tools.ant.types.resources.selectors.*import org.apache.tools.ant.types.selectors.*import org.apache.tools.ant.types.selectors.modifiedselector.*import org.apache.tools.ant.util.*import org.apache.xerces.parsers.*import org.apache.xerces.util.*import org.apache.xerces.xni.*import org.apache.xerces.xni.parser.*import org.apache.xerces.xs.*import org.apache.xml.utils.*import org.cyberneko.html.*import org.dom4j.*import org.dom4j.io.*import org.dom4j.rule.*import org.dom4j.tree.*import org.eclipse.jetty.http.*import org.eclipse.jetty.util.*import org.eclipse.jetty.io.*import org.eclipse.jetty.security.*import org.eclipse.jetty.server.*import org.eclipse.jetty.server.handler.*import org.eclipse.jetty.server.session.*import org.eclipse.jetty.util.annotation.*import org.eclipse.jetty.util.component.*import org.eclipse.jetty.util.log.*import org.eclipse.jetty.util.resource.*import org.eclipse.jetty.util.statistic.*import org.eclipse.jetty.util.thread.*import org.jaxen.*import org.jaxen.saxpath.*import org.jenkins.ui.icon.*import org.jenkinsci.bytecode.*import org.jenkinsci.constant_pool_scanner.*import org.jenkinsci.remoting.*import org.jetbrains.annotations.*import org.jfree.base.*import org.jfree.chart.*import org.jfree.chart.annotations.*import org.jfree.chart.axis.*import org.jfree.chart.block.*import org.jfree.chart.entity.*import org.jfree.chart.event.*import org.jfree.chart.imagemap.*import org.jfree.chart.labels.*import org.jfree.chart.plot.*import org.jfree.chart.renderer.*import org.jfree.chart.renderer.category.*import org.jfree.chart.renderer.xy.*import org.jfree.chart.title.*import org.jfree.chart.urls.*import org.jfree.data.*import org.jfree.data.category.*import org.jfree.data.general.*import org.jfree.data.xy.*import org.jfree.text.*import org.jfree.ui.*import org.jfree.ui.about.*import org.jfree.util.*import org.jruby.ext.posix.*import org.junit.*import org.junit.internal.*import org.junit.rules.*import org.junit.runner.*import org.junit.runners.model.*import org.jvnet.hudson.annotation_indexer.*import org.jvnet.hudson.reactor.*import org.jvnet.hudson.test.*import org.jvnet.hudson.test.recipes.*import org.jvnet.hudson.test.rhino.*import org.jvnet.localizer.*import org.kohsuke.accmod.*import org.kohsuke.accmod.impl.*import org.kohsuke.accmod.restrictions.*import org.kohsuke.args4j.*import org.kohsuke.asm5.*import org.kohsuke.stapler.*import org.kohsuke.stapler.bind.*import org.kohsuke.stapler.export.*import org.kohsuke.stapler.framework.adjunct.*import org.kohsuke.stapler.framework.io.*import org.kohsuke.stapler.interceptor.*import org.koshuke.stapler.simile.timeline.*import org.mozilla.javascript.tools.debugger.*import org.rundeck.api.util.*import org.rundeck.api.query.*import org.springframework.beans.*import org.springframework.beans.factory.*import org.springframework.beans.factory.config.*import org.springframework.context.*import org.springframework.core.*import org.springframework.core.io.*import org.springframework.core.io.support.*import org.springframework.dao.*import org.tmatesoft.sqljet.core.*import org.tmatesoft.sqljet.core.internal.*import org.tmatesoft.sqljet.core.internal.schema.*import org.tmatesoft.sqljet.core.internal.table.*import org.tmatesoft.sqljet.core.internal.vdbe.*import org.tmatesoft.sqljet.core.schema.*import org.tmatesoft.sqljet.core.table.*import org.tmatesoft.sqljet.core.table.engine.*import org.tmatesoft.svn.core.*import org.tmatesoft.svn.core.auth.*import org.tmatesoft.svn.core.internal.db.*import org.tmatesoft.svn.core.internal.wc17.db.*import org.tmatesoft.svn.core.internal.io.svn.*import org.tmatesoft.svn.core.internal.util.*import org.tmatesoft.svn.core.internal.wc.*import org.tmatesoft.svn.core.internal.wc.admin.*import org.tmatesoft.svn.core.internal.wc16.*import org.tmatesoft.svn.core.internal.wc17.*import org.tmatesoft.svn.core.wc2.*import org.tmatesoft.svn.core.internal.wc17.db.statement.*import org.tmatesoft.svn.core.internal.wc2.*import org.tmatesoft.svn.core.internal.wc2.ng.*import org.tmatesoft.svn.core.io.*import org.tmatesoft.svn.core.io.diff.*import org.tmatesoft.svn.core.wc.*import org.tmatesoft.svn.core.wc.admin.*import org.tmatesoft.svn.core.wc2.admin.*import org.tmatesoft.svn.core.wc2.hooks.*import org.tmatesoft.svn.util.*import org.w3c.css.sac.*import org.w3c.dom.*import org.w3c.dom.css.*import org.w3c.dom.ranges.*import org.w3c.dom.stylesheets.*import org.xml.sax.*import org.xml.sax.ext.*import org.xml.sax.helpers.*import sun.awt.*import sun.awt.geom.*import sun.awt.image.*import sun.font.*import sun.invoke.empty.*import sun.invoke.util.*import sun.java2d.*import sun.java2d.cmm.*import sun.java2d.loops.*import sun.java2d.pipe.*import sun.misc.*import sun.nio.ch.*import sun.reflect.*import sun.reflect.annotation.*import sun.reflect.generics.factory.*import sun.reflect.generics.repository.*import sun.reflect.generics.tree.*import sun.reflect.generics.visitor.*import sun.security.util.*import sun.security.x509.*import sun.util.locale.*...[] tags, ...;this.namethis.valueother.nameother.value/** Option provider for Rundeck - see http://rundeck.org/docs/manual/jobs.html#option-model-provider ... *//** Provider for artifacts of a specific build, with the name and absolute url of the artifact.<br> ... */// mandatory parameters// optional parameters/** Builds a string representation of a tree of items ... */// Add special handling for %2F (/ character) separator between multibranch pipeline project path elements/** Provider for builds of a specific artifact, with the version/date of the build and absolute url of the artifact.<br> ... */// build options// add optional references to last / lastStable / lastSuccessful builds/** Find the Jenkins project matching the given name. ... *//** Find a build for the given project, using the provided buildNumber as a hint. If not found, will fallback to the ... */// first, try with a direct build number reference// try a string-reference// fallback to the last build/** Find an artifact of the given build, matching the artifactName (filename) or the artifactPattern (java-regex). If ... *//** Build the absolute url of the given artifact ... *//** Outputs the given list of options as a JSON. See format at ... *//** Javabean representation of an option */this.rundeckClientthis.executionIdthis.maxlinesthis.maxRetriesthis.sleepRetrythis.sleepUnmodifiedthis.sleepModified/** This class implements logtailing for Rundeck. ... *//** Standard constructor that contains sensible defaults for handling the API calls correctly. ... *//** Extended constructor containing all the variables that can be set. ... *//** This will clear and update the result set for the @link {@link #next()} call using the RunDeck Client to perform an API call, it will also update the ... *//** Returns the resultset which has been fetched using the hasNext method. */this.executionother.executionargs.length/** The cause of a Rundeck initiated build (encapsulates the {@link RundeckExecution} at the origin of the Rundeck ... *//** Instantiate a new cause for the given execution ... *//** {@link EnvironmentContributingAction} used to make information about the {@link RundeckExecution} available to ... *//** Instantiate a new action, which will use the data from the given execution ... */// Split argstring around hyphens at the beginning or a combination of whitespace and hyphenthis.urlthis.apiVersionthis.loginthis.tokenthis.passwordthis.sslHostnameVerifyAllowAllthis.sslCertificateTrustAllowSelfSignedthis.systemProxyEnabledthis.useIntermediateStreamFilethis.clientthis.rundeckInstanceNamethis.rundeckthis.rundeckJobthis.rundeckJobUrl/** {@link Action} used to display a Rundeck icon with a link to the Rundeck job page, and some information about the ... *//** Load the Rundeck job details (name, description, and so on) using the Rundeck API. ... *//** Build the absolute url to the Rundeck job page. ... */this.rundeckInstancethis.jobIdthis.optionsthis.nodeFiltersthis.tagsthis.tagthis.shouldWaitForRundeckJobthis.shouldFailTheBuildthis.notifyOnAllStatusthis.includeRundeckLogsthis.tailLogthis.jobUserthis.jobPasswordthis.jobTokenthis.performUsertags.lengththis.rundeckBuildergetRundeckDescriptor(...).rundeckJobCachethis.rundeckInstancesthis.executionUrl/** Jenkins {@link Notifier} that runs a job on Rundeck (via the {@link RundeckClient}) ... *//** Pattern used for the token expansion of $ARTIFACT_NAME{regex} *//** Pattern used for extracting the job reference (project:group/name) *///TODO: Could be renamed to rundeckInstanceName/** for multiple rundeck users *//** rundeck user during job perform *//** Check if we need to notify Rundeck for this build. If we have a tag, we will look for it in the changelog of the ... */// check for the tag in the changelog// if we have an upstream cause, check for the tag in the changelog from upstream/** Notify Rundeck : run a job on Rundeck ... */// perform environment substitution before finding the rundeck job//if the jobId is in the form "project:[group/*]name", find the actual job ID first.//possible if it was unable to abort execution after an interruption//                printStream.println(rundeckOutputEntry);//                        String.format("[%s] [%s] %s",//                        new Object[]{ rundeckOutputEntry.getTime(), rundeckOutputEntry.getLevel(), rundeckOutputEntry.getMessage() }));/** Parse the given input (should be in the Java-Properties syntax) and expand Jenkins environment variables. ... */// try to expand jenkins env vars// expand our custom tokens : $ARTIFACT_NAME{regex} => name of the first matching artifact found// http://groups.google.com/group/rundeck-discuss/browse_thread/thread/94a6833b84fdc10b/** If we should not fail the build, we need to run after finalized, so that the result of "perform" is not used by ... *//** optional non default rundeck user for actual job ... */// support backward compatibility// required to convert the Descriptor configuration (global setting)// same code as super.getConfigFile()//nothing changed// Only check the job name if there are no environment variables to substitute/** check valid job ... */// no context/** Return a rundeck Job ID, by find a rundeck job if the identifier is a project:[group/]*name format, otherwise ... *///TODO: Could be rewritten to be cache as well, if needed/** Find a {@link RundeckJob} with the given identifier using internal cache if possible. ... *//** get RundeckClient if optional user is given ... */// create new instance with given user and password and URL from global instance/** {@link BuildBadgeAction} used to display a Rundeck icon + a link to the Rundeck execution page, on the Jenkins ... *//** @param ... *//** Entry point for the Rundeck plugin ... */this.filterJobsthis.jobsIdentifiersthis.executionStatuses/** Triggers a build when we receive a WebHook notification from Rundeck. ... *//** Called when we receive a Rundeck notification ... *//** Filter notifications based on the {@link RundeckExecution} and the trigger configuration ... *//** Check if the given jobIdentifier matches (= identifies) the given job ... */// UUID// "project:group/job" reference/** Simplistic version of StaplerRequest.bindJSONToList, in order to use a List of String *//** Listener for Rundeck WebHook notifications (see http://rundeck.org/docs/manual/jobs.html#webhooks), will trigger a ... */// read request body / parse Rundeck execution// write a basic response//response.getWriter().append("Thanks");// notify all registered triggers/** Dummy Rundeck job cache implementation based. Used as a placeholder when caching is disabled. ... */this.cacheStatsDisplayHitThresholdthis.rundeckJobInstanceAwareCache/** In-memory Rundeck job cache implementation based on Cache from Guava. ... *///just in case given instance was removed//stats printing disabled/** Interface with operation for Rundeck job cache. ... */this.enabled/** Rundeck job cache configuration. ... *///TODO: Could be immutable with builder and copy constructormessages.length//@formatter:off//@formatter:on/** Tests for {@link RundeckCause} ... */this.jenkins/** Test the backward compatibility of {@link RundeckNotifier} ... */jenkins.root/** Test the {@link RundeckNotifier} ... */// first build// second build// check config// build/** Just a mock {@link RundeckClient} which is always successful */// successful/** Entry point to auto-generated tests (generated by maven-hpi-plugin). ... */OptionProvider.OptionRundeckNotifier.RundeckDescriptorRundeckApiException.RundeckApiTokenExceptionMap<>.Entry<String,Cache<String,RundeckJob>>RunDeckLogTail.RunDeckLogTailIteratorRundeckCause.RundeckExecutionEnvironmentContributingActionRundeckExecution.ExecutionStatuslong serialVersionUID, ...;String name, ...;String value, ...;Logger log, ...;RundeckClient rundeckClient, ...;Long executionId, ...;int maxlines, ...;int maxRetries, ...;long sleepRetry, ...;long sleepUnmodified, ...;long sleepModified, ...;int offset, ...;boolean completed, ...;int retries, ...;int controlMaxlines, ...;List<RundeckOutputEntry> next, ...;Pattern ARG_STRING_PATTERN, ...;RundeckExecution execution, ...;String url, ...;Integer apiVersion, ...;String login, ...;Secret token, ...;Secret password, ...;boolean sslHostnameVerifyAllowAll, ...;boolean sslCertificateTrustAllowSelfSigned, ...;boolean systemProxyEnabled, ...;boolean useIntermediateStreamFile, ...;int apiVersion, ...;RundeckClient client, ...;String rundeckInstanceName, ...;RundeckClient rundeck, ...;RundeckJob rundeckJob, ...;String rundeckJobUrl, ...;Pattern TOKEN_ARTIFACT_NAME_PATTERN, ...;Pattern JOB_REFERENCE_PATTERN, ...;int DELAY_BETWEEN_POLLS_IN_MILLIS, ...;String rundeckInstance, ...;String jobId, ...;String options, ...;String nodeFilters, ...;String tag, ...;Boolean shouldWaitForRundeckJob, ...;Boolean shouldFailTheBuild, ...;Boolean notifyOnAllStatus, ...;Boolean includeRundeckLogs, ...;Boolean tailLog, ...;String jobUser, ...;Secret jobPassword, ...;Secret jobToken, ...;String performUser, ...;RundeckClient rundeckInstance, ...;Map<String,RundeckInstance> rundeckInstances, ...;RundeckJobCache rundeckJobCache, ...;RundeckJobCacheConfig rundeckJobCacheConfig, ...;RundeckInstanceBuilder rundeckBuilder, ...;String executionUrl, ...;OptionProvider optionProvider, ...;WebHookListener webHookListener, ...;Boolean filterJobs, ...;List<String> jobsIdentifiers, ...;List<String> executionStatuses, ...;int RUNDECK_INSTANCE_CACHE_CONTAINER_EXPIRATION_IN_DAYS, ...;int cacheStatsDisplayHitThreshold, ...;LoadingCache<String,Cache<String,RundeckJob>> rundeckJobInstanceAwareCache, ...;long hitCounter, ...;boolean enabled, ...;int afterAccessExpirationInMinutes, ...;int maximumSize, ...;long EXECUTION_ID, ...;RundeckOutput rundeckOutput, ...;RunDeckLogTail runDeckLogTail, ...;Thread unused, ...;MockRundeckClient client, ...;HttpServletResponse.SC_BAD_REQUESTNoExternalUse.classJob<>.classRunDeckLogTail.classLevel.FINELevel.WARNINGBoolean.TRUELevel.SEVERERundeckClient.API_VERSIONRundeckNotifier.classResult.SUCCESSUpstreamCause.classAbstractProject<>.classList<>.classResult.FAILUREExecutionStatus.RUNNINGBuildStepMonitor.NONERundeckInstance.classJenkins.ADMINISTERItem.CONFIGURERundeckDescriptor.classHttpServletResponse.SC_OKRundeckTrigger.classDummyRundeckJobCache.classInMemoryRundeckJobCache.classTimeUnit.DAYSnew CacheLoader<String,Cache<String,RundeckJob>>(...) { ... }TimeUnit.MINUTESnew Callable<RundeckJob>(...) { ... }new NonStrictExpectations(...) { ... }new Expectations(...) { ... }RundeckExecutionBuildBadgeAction.classnew MockRundeckClient(...) { ... }CredentialsScope.GLOBALSVNDepth.INFINITYSVNDepth.EMPTYSystem.outNameProvider.classObject.classDomElement.classDomAttr.classHtmlAbbreviated.classHtmlAcronym.classHtmlAddress.classHtmlArticle.classHtmlAside.classHtmlBaseFont.classHtmlBidirectionalIsolation.classHtmlBidirectionalOverride.classHtmlBig.classHtmlBold.classHtmlCenter.classHtmlCitation.classHtmlCode.classHtmlCommand.classHtmlDefinition.classHtmlDefinitionDescription.classHtmlDefinitionTerm.classHtmlElement.classHtmlEmphasis.classHtmlExample.classHtmlFigure.classHtmlFigureCaption.classHtmlFooter.classHtmlHeader.classHtmlItalic.classHtmlKeyboard.classHtmlLayer.classHtmlListing.classHtmlMark.classHtmlNav.classHtmlNoBreak.classHtmlNoEmbed.classHtmlNoFrames.classHtmlNoLayer.classHtmlNoScript.classHtmlPlainText.classHtmlRuby.classHtmlRp.classHtmlRt.classHtmlS.classHtmlSample.classHtmlSection.classHtmlSmall.classHtmlStrike.classHtmlStrong.classHtmlSubscript.classHtmlSummary.classHtmlSuperscript.classHtmlTeletype.classHtmlUnderlined.classHtmlWordBreak.classHtmlMain.classHtmlVariable.classDoNotUse.classOptionHandler<>.classJenkins.classFuture<>.classLabel.classint.classvoid.classNumber.classFactoryImpl.classNone.classRuleRunnerImpl.classRunnerImpl.classHandlerImpl.classProcessor.classimport new CacheLoader<String,Cache<String,RundeckJob>>(...) { ... }import new CacheLoader<String,Cache<String,RundeckJob>>(...) { ... }.*import static new CacheLoader<String,Cache<String,RundeckJob>>(...) { ... }.*import new Callable<RundeckJob>(...) { ... }import new Callable<RundeckJob>(...) { ... }.*import static new Callable<RundeckJob>(...) { ... }.*import new NonStrictExpectations(...) { ... }import new NonStrictExpectations(...) { ... }.*import static new NonStrictExpectations(...) { ... }.*import new Expectations(...) { ... }import new Expectations(...) { ... }.*import static new Expectations(...) { ... }.*RundeckExecution.ExecutionStatus.SUCCEEDEDimport new MockRundeckClient(...) { ... }import new MockRundeckClient(...) { ... }.*import static new MockRundeckClient(...) { ... }.*RundeckExecution.ExecutionStatus.RUNNING.*/([^/]*?)(\.([^.]*))?.java.jar.classvalidStatecheckStatecheckArgumentorg.apache.commons.lang3ValidatePreconditionsRuntimebyte|char|short|int|longbyte|char|short|int|long|double|floatorg.apache.http.protocol;HttpRequestHandler;true;handle;(HttpRequest,HttpResponse,HttpContext);;Parameter[0];remoteorg.apache.hc.core5.http.io;HttpRequestHandler;true;handle;(ClassicHttpRequest,ClassicHttpResponse,HttpContext);;Parameter[0];remoteorg.apache.hc.core5.http.io;HttpServerRequestHandler;true;handle;(ClassicHttpRequest,ResponseTrigger,HttpContext);;Parameter[0];remoteandroid.util;AttributeSet;false;getAttributeBooleanValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeCount;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeFloatValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeIntValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeListValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeName;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeNameResource;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeNamespace;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeResourceValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeUnsignedIntValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getAttributeValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getClassAttribute;;;ReturnValue;remoteandroid.util;AttributeSet;false;getIdAttribute;;;ReturnValue;remoteandroid.util;AttributeSet;false;getIdAttributeResourceValue;;;ReturnValue;remoteandroid.util;AttributeSet;false;getPositionDescription;;;ReturnValue;remoteandroid.util;AttributeSet;false;getStyleAttribute;;;ReturnValue;remoteandroid.webkit;WebView;false;getOriginalUrl;();;ReturnValue;remoteandroid.webkit;WebView;false;getUrl;();;ReturnValue;remotejava.net.http;WebSocket$Listener;true;onText;(WebSocket,CharSequence,boolean);;Parameter[1];remotejava.net;Socket;false;getInputStream;();;ReturnValue;remotejava.net;URLConnection;false;getInputStream;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getComment;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getName;();;ReturnValue;remotejavax.servlet.http;Cookie;false;getValue;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeader;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeaderNames;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getHeaders;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameter;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterMap;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterNames;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getParameterValues;(String);;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getPathInfo;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getQueryString;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRemoteUser;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRequestURI;();;ReturnValue;remotejavax.servlet.http;HttpServletRequest;false;getRequestURL;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getInputStream;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameter;(String);;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterMap;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterNames;();;ReturnValue;remotejavax.servlet;ServletRequest;false;getParameterValues;(String);;ReturnValue;remotejavax.servlet;ServletRequest;false;getReader;();;ReturnValue;remotejavax.validation;ConstraintValidator;true;isValid;;;Parameter[0];remoteorg.apache.http;HttpEntity;false;getContent;();;ReturnValue;remoteorg.apache.http;HttpMessage;false;getParams;();;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getCookies;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getHeaderNames;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getHeaderValues;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getParameterMap;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getParameterValues;;;ReturnValue;remoteorg.springframework.security.web.savedrequest;SavedRequest;true;getRedirectUrl;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;exchange;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;getForEntity;;;ReturnValue;remoteorg.springframework.web.client;RestTemplate;false;postForEntity;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getDescription;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeader;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeaderNames;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getHeaderValues;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameter;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterMap;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterNames;;;ReturnValue;remoteorg.springframework.web.context.request;WebRequest;false;getParameterValues;;;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getBytes;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getContentType;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getInputStream;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getName;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getOriginalFilename;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartFile;true;getResource;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFile;(String);;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFileMap;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFileNames;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getFiles;(String);;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getMultiFileMap;();;ReturnValue;remoteorg.springframework.web.multipart;MultipartRequest;true;getMultipartContentType;(String);;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getName;();;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getNamespace;();;ReturnValue;remoteorg.xmlpull.v1;XmlPullParser;false;getText;();;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;getHeader;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;getQueryString;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;header;;;ReturnValue;remoteplay.mvc;Http$RequestHeader;false;queryString;;;ReturnValue;remoteorg.apache.http.protocolHttpRequestHandler(HttpRequest,HttpResponse,HttpContext)Parameter[0]org.apache.hc.core5.http.io(ClassicHttpRequest,ClassicHttpResponse,HttpContext)HttpServerRequestHandler(ClassicHttpRequest,ResponseTrigger,HttpContext)android.utilgetAttributeBooleanValueReturnValuegetAttributeFloatValuegetAttributeIntValuegetAttributeListValuegetAttributeNameResourcegetAttributeNamespacegetAttributeResourceValuegetAttributeUnsignedIntValuegetClassAttributegetIdAttributeResourceValuegetPositionDescriptionandroid.webkitWebViewgetOriginalUrljava.net.httpWebSocket$ListeneronText(WebSocket,CharSequence,boolean)Parameter[1](String)javax.validationConstraintValidatororg.apache.httpHttpEntityHttpMessageorg.springframework.security.web.savedrequestSavedRequestgetHeaderValuesgetRedirectUrlorg.springframework.web.clientRestTemplateexchangegetForEntitypostForEntityorg.springframework.web.context.requestorg.springframework.web.multipartMultipartFilegetOriginalFilenameMultipartRequestgetFileMapgetFileNamesgetMultiFileMapgetMultipartContentTypeorg.xmlpull.v1XmlPullParserplay.mvcHttp$RequestHeaderjava.sql;Statement;true;execute;;;Argument[0];sqljava.sql;Statement;true;addBatch;;;Argument[0];sqlorg.jooq;PlainSQL;false;;;Annotated;Argument[0];sqljava.sql;Connection;true;prepareCall;;;Argument[0];sqljava.sql;Statement;true;executeQuery;;;Argument[0];sqlandroid.webkit;WebView;false;loadData;;;Argument[0];xssjava.sql;Statement;true;executeUpdate;;;Argument[0];sqlorg.hibernate;Session;true;createQuery;;;Argument[0];sqljava.sql;Connection;true;prepareStatement;;;Argument[0];sqlorg.hibernate;Session;true;createSQLQuery;;;Argument[0];sqljava.sql;Statement;true;executeLargeUpdate;;;Argument[0];sqljavax.ws.rs.client;Client;true;target;;;Argument[0];open-urljakarta.ws.rs.client;Client;true;target;;;Argument[0];open-urlorg.hibernate;QueryProducer;true;createQuery;;;Argument[0];sqlandroid.webkit;WebView;false;evaluateJavascript;;;Argument[0];xssorg.hibernate;QueryProducer;true;createSQLQuery;;;Argument[0];sqlandroid.webkit;WebView;false;loadDataWithBaseURL;;;Argument[1];xssjavax.ws.rs.core;Response;true;seeOther;;;Argument[0];url-redirectjakarta.ws.rs.core;Response;true;seeOther;;;Argument[0];url-redirectorg.apache.ibatis.jdbc;SqlRunner;false;run;(String);;Argument[0];sqlorg.hibernate;QueryProducer;true;createNativeQuery;;;Argument[0];sqlorg.hibernate;SharedSessionContract;true;createQuery;;;Argument[0];sqlorg.apache.http;HttpResponse;true;setEntity;(HttpEntity);;Argument[0];xssorg.hibernate;SharedSessionContract;true;createSQLQuery;;;Argument[0];sqljavax.ws.rs.core;Response;true;temporaryRedirect;;;Argument[0];url-redirectcom.google.common.io;Resources;false;readLines;;;Argument[0];url-open-streamjavax.ws.rs.core;ResponseBuilder;false;header;;;Argument[1];header-splittingjakarta.ws.rs.core;Response;true;temporaryRedirect;;;Argument[0];url-redirectorg.apache.ibatis.jdbc;SqlRunner;false;delete;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;insert;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;update;(String,Object[]);;Argument[0];sqlcom.google.common.io;Resources;false;toByteArray;(URL);;Argument[0];url-open-streamorg.apache.ibatis.jdbc;SqlRunner;false;selectAll;(String,Object[]);;Argument[0];sqlorg.apache.ibatis.jdbc;SqlRunner;false;selectOne;(String,Object[]);;Argument[0];sqlcom.google.common.io;Resources;false;asByteSource;(URL);;Argument[0];url-open-streamjavax.servlet.http;HttpServletResponse;false;addCookie;;;Argument[0];header-splittingcom.google.common.io;Resources;false;toString;(URL,Charset);;Argument[0];url-open-streamjavax.servlet.http;HttpServletResponse;false;addHeader;;;Argument[0..1];header-splittingjavax.servlet.http;HttpServletResponse;false;setHeader;;;Argument[0..1];header-splittingcom.google.common.io;Resources;false;copy;(URL,OutputStream);;Argument[0];url-open-streamorg.apache.hc.core5.http;HttpEntityContainer;true;setEntity;(HttpEntity);;Argument[0];xsscom.google.common.io;Resources;false;asCharSource;(URL,Charset);;Argument[0];url-open-streamorg.apache.http.util;EntityUtils;true;updateEntity;(HttpResponse,HttpEntity);;Argument[1];xssjavax.servlet.http;HttpServletResponse;false;sendError;(int,String);;Argument[1];information-leakjavax.script;CompiledScript;false;eval;;;Argument[-1];mvelorg.mvel2.compiler;Accessor;false;getValue;;;Argument[-1];mvelorg.mvel2.compiler;CompiledAccExpression;false;getValue;;;Argument[-1];mvelorg.mvel2.compiler;CompiledExpression;false;getDirectValue;;;Argument[-1];mvelorg.mvel2.compiler;ExecutableStatement;false;getValue;;;Argument[-1];mvelorg.mvel2.jsr223;MvelCompiledScript;false;eval;;;Argument[-1];mvelorg.mvel2.jsr223;MvelScriptEngine;false;eval;;;Argument[0];mvelorg.mvel2.jsr223;MvelScriptEngine;false;evaluate;;;Argument[0];mvelorg.mvel2.templates;TemplateRuntime;false;eval;;;Argument[0];mvelorg.mvel2.templates;TemplateRuntime;false;execute;;;Argument[0];mvelorg.mvel2;MVEL;false;eval;;;Argument[0];mvelorg.mvel2;MVEL;false;evalToBoolean;;;Argument[0];mvelorg.mvel2;MVEL;false;evalToString;;;Argument[0];mvelorg.mvel2;MVEL;false;executeAllExpression;;;Argument[0];mvelorg.mvel2;MVEL;false;executeExpression;;;Argument[0];mvelorg.mvel2;MVEL;false;executeSetExpression;;;Argument[0];mvelorg.mvel2;MVELRuntime;false;execute;;;Argument[1];mvelcom.opensymphony.xwork2.ognl;OgnlUtil;false;callMethod;;;Argument[0];ognl-injectioncom.opensymphony.xwork2.ognl;OgnlUtil;false;getValue;;;Argument[0];ognl-injectioncom.opensymphony.xwork2.ognl;OgnlUtil;false;setValue;;;Argument[0];ognl-injectionognl.enhance;ExpressionAccessor;true;get;;;Argument[-1];ognl-injectionognl.enhance;ExpressionAccessor;true;set;;;Argument[-1];ognl-injectionognl;Node;false;getValue;;;Argument[-1];ognl-injectionognl;Node;false;setValue;;;Argument[-1];ognl-injectionognl;Ognl;false;getValue;;;Argument[0];ognl-injectionognl;Ognl;false;setValue;;;Argument[0];ognl-injectionorg.apache.commons.ognl.enhance;ExpressionAccessor;true;get;;;Argument[-1];ognl-injectionorg.apache.commons.ognl.enhance;ExpressionAccessor;true;set;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Node;true;getValue;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Node;true;setValue;;;Argument[-1];ognl-injectionorg.apache.commons.ognl;Ognl;false;getValue;;;Argument[0];ognl-injectionorg.apache.commons.ognl;Ognl;false;setValue;;;Argument[0];ognl-injectionorg.springframework.http;RequestEntity;false;RequestEntity;(HttpMethod,URI);;Argument[1];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(MultiValueMap,HttpMethod,URI);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,HttpMethod,URI);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,HttpMethod,URI,Type);;Argument[2];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,MultiValueMap,HttpMethod,URI);;Argument[3];open-urlorg.springframework.http;RequestEntity;false;RequestEntity;(Object,MultiValueMap,HttpMethod,URI,Type);;Argument[3];open-urlorg.springframework.http;RequestEntity;false;delete;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;get;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;head;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;method;;;Argument[1];open-urlorg.springframework.http;RequestEntity;false;options;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;patch;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;post;;;Argument[0];open-urlorg.springframework.http;RequestEntity;false;put;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;delete;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;doExecute;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;exchange;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;execute;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;getForEntity;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;getForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;headForHeaders;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;optionsForAllow;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;patchForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForEntity;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForLocation;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;postForObject;;;Argument[0];open-urlorg.springframework.web.client;RestTemplate;false;put;;;Argument[0];open-urlorg.springframework.web.reactive.function.client;WebClient$Builder;false;baseUrl;;;Argument[0];open-urlorg.springframework.web.reactive.function.client;WebClient;false;create;;;Argument[0];open-urljavax.xml.xpath;XPath;true;compile;;;Argument[0];xpathjavax.xml.xpath;XPath;true;evaluate;;;Argument[0];xpathjavax.xml.xpath;XPath;true;evaluateExpression;;;Argument[0];xpathorg.dom4j.tree;AbstractNode;true;createPattern;;;Argument[0];xpathorg.dom4j.tree;AbstractNode;true;createXPathFilter;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createPattern;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createXPath;;;Argument[0];xpathorg.dom4j.util;ProxyDocumentFactory;true;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createPattern;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createXPath;;;Argument[0];xpathorg.dom4j;DocumentFactory;true;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createPattern;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createXPath;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;createXPathFilter;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;selectNodes;;;Argument[0];xpathorg.dom4j;DocumentHelper;false;sort;;;Argument[1];xpathorg.dom4j;Node;true;createXPath;;;Argument[0];xpathorg.dom4j;Node;true;matches;;;Argument[0];xpathorg.dom4j;Node;true;numberValueOf;;;Argument[0];xpathorg.dom4j;Node;true;selectNodes;;;Argument[0..1];xpathorg.dom4j;Node;true;selectObject;;;Argument[0];xpathorg.dom4j;Node;true;selectSingleNode;;;Argument[0];xpathorg.dom4j;Node;true;valueOf;;;Argument[0];xpathorg.springframework.jdbc.core;JdbcTemplate;false;batchUpdate;(String[]);;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;batchUpdate;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;execute;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;query;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForList;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForMap;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForObject;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForRowSet;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;queryForStream;;;Argument[0];sqlorg.springframework.jdbc.core;JdbcTemplate;false;update;;;Argument[0];sqlorg.springframework.jdbc.object;BatchSqlUpdate;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;MappingSqlQuery;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;MappingSqlQueryWithParameters;false;BatchSqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;RdbmsOperation;true;setSql;;;Argument[0];sqlorg.springframework.jdbc.object;SqlCall;false;SqlCall;;;Argument[1];sqlorg.springframework.jdbc.object;SqlFunction;false;SqlFunction;;;Argument[1];sqlorg.springframework.jdbc.object;SqlQuery;false;SqlQuery;;;Argument[1];sqlorg.springframework.jdbc.object;SqlUpdate;false;SqlUpdate;;;Argument[1];sqlorg.springframework.jdbc.object;UpdatableSqlQuery;false;UpdatableSqlQuery;;;Argument[1];sqljava.io;FileOutputStream;false;FileOutputStream;;;Argument[0];create-filejava.io;FileWriter;false;FileWriter;;;Argument[0];create-filejava.io;RandomAccessFile;false;RandomAccessFile;;;Argument[0];create-filejava.net.http;HttpRequest$Builder;false;uri;;;Argument[0];open-urljava.net.http;HttpRequest;false;newBuilder;;;Argument[0];open-urljava.net;URL;false;openConnection;;;Argument[-1];open-urljava.net;URL;false;openStream;;;Argument[-1];open-urljava.net;URLClassLoader;false;URLClassLoader;(String,URL[],ClassLoader);;Argument[1];open-urljava.net;URLClassLoader;false;URLClassLoader;(String,URL[],ClassLoader,URLStreamHandlerFactory);;Argument[1];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[]);;Argument[0];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[],ClassLoader);;Argument[0];open-urljava.net;URLClassLoader;false;URLClassLoader;(URL[],ClassLoader,URLStreamHandlerFactory);;Argument[0];open-urljava.net;URLClassLoader;false;newInstance;;;Argument[0];open-urljava.nio.file;Files;false;copy;;;Argument[1];create-filejava.nio.file;Files;false;createDirectory;;;Argument[0];create-filejava.nio.file;Files;false;createFile;;;Argument[0];create-filejava.nio.file;Files;false;createLink;;;Argument[0];create-filejava.nio.file;Files;false;createSymbolicLink;;;Argument[0];create-filejava.nio.file;Files;false;createTempDirectory;;;Argument[0];create-filejava.nio.file;Files;false;createTempFile;;;Argument[0];create-filejava.nio.file;Files;false;move;;;Argument[1];create-filejava.nio.file;Files;false;newBufferedReader;;;Argument[0];create-filejava.nio.file;Files;false;newOutputStream;;;Argument[0];create-filejavax.net.ssl;HttpsURLConnection;true;setDefaultHostnameVerifier;;;Argument[0];set-hostname-verifierjavax.net.ssl;HttpsURLConnection;true;setHostnameVerifier;;;Argument[0];set-hostname-verifierjavax.validation;ConstraintValidatorContext;true;buildConstraintViolationWithTemplate;;;Argument[0];bean-validationorg.apache.http.client.methods;HttpDelete;false;HttpDelete;;;Argument[0];open-urlorg.apache.http.client.methods;HttpGet;false;HttpGet;;;Argument[0];open-urlorg.apache.http.client.methods;HttpHead;false;HttpHead;;;Argument[0];open-urlorg.apache.http.client.methods;HttpOptions;false;HttpOptions;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPatch;false;HttpPatch;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPost;false;HttpPost;;;Argument[0];open-urlorg.apache.http.client.methods;HttpPut;false;HttpPut;;;Argument[0];open-urlorg.apache.http.client.methods;HttpRequestBase;true;setURI;;;Argument[0];open-urlorg.apache.http.client.methods;HttpTrace;false;HttpTrace;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;delete;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;get;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;head;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;options;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;patch;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;post;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;put;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;setUri;;;Argument[0];open-urlorg.apache.http.client.methods;RequestBuilder;false;trace;;;Argument[0];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(RequestLine);;Argument[0];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(String,String);;Argument[1];open-urlorg.apache.http.message;BasicHttpEntityEnclosingRequest;false;BasicHttpEntityEnclosingRequest;(String,String,ProtocolVersion);;Argument[1];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(RequestLine);;Argument[0];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(String,String);;Argument[1];open-urlorg.apache.http.message;BasicHttpRequest;false;BasicHttpRequest;(String,String,ProtocolVersion);;Argument[1];open-urlorg.apache.http;HttpRequest;true;setURI;;;Argument[0];open-urlgroovy.lang;GroovyClassLoader;false;parseClass;(GroovyCodeSource);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(GroovyCodeSource,boolean);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(InputStream,String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(Reader,String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(String);;Argument[0];groovygroovy.lang;GroovyClassLoader;false;parseClass;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(GroovyCodeSource);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(Reader);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(Reader,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(String,String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;evaluate;(URI);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(Reader);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(Reader,String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(String,String);;Argument[0];groovygroovy.lang;GroovyShell;false;parse;(URI);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(GroovyCodeSource,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(GroovyCodeSource,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(Reader,String,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(Reader,String,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(String,String,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(String,String,String[]);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(URI,List);;Argument[0];groovygroovy.lang;GroovyShell;false;run;(URI,String[]);;Argument[0];groovygroovy.util;Eval;false;me;(String);;Argument[0];groovygroovy.util;Eval;false;me;(String,Object,String);;Argument[2];groovygroovy.util;Eval;false;x;(Object,String);;Argument[1];groovygroovy.util;Eval;false;xy;(Object,Object,String);;Argument[2];groovygroovy.util;Eval;false;xyz;(Object,Object,Object,String);;Argument[3];groovyorg.codehaus.groovy.control;CompilationUnit;false;compile;;;Argument[-1];groovyorg.apache.commons.jexl2;Expression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlEngine;false;getProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl2;JexlEngine;false;getProperty;(Object,String);;Argument[1];jexlorg.apache.commons.jexl2;JexlEngine;false;setProperty;(JexlContext,Object,String,Object);;Argument[2];jexlorg.apache.commons.jexl2;JexlEngine;false;setProperty;(Object,String,Object);;Argument[1];jexlorg.apache.commons.jexl2;JexlExpression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlExpression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlScript;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;JexlScript;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl2;Script;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl2;Script;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Expression;false;prepare;;;Argument[-1];jexlorg.apache.commons.jexl2;UnifiedJEXL$Template;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;Expression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlEngine;false;getProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl3;JexlEngine;false;getProperty;(Object,String);;Argument[1];jexlorg.apache.commons.jexl3;JexlEngine;false;setProperty;(JexlContext,Object,String);;Argument[2];jexlorg.apache.commons.jexl3;JexlEngine;false;setProperty;(Object,String,Object);;Argument[1];jexlorg.apache.commons.jexl3;JexlExpression;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlExpression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlScript;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;JexlScript;false;execute;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Expression;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Expression;false;prepare;;;Argument[-1];jexlorg.apache.commons.jexl3;JxltEngine$Template;false;evaluate;;;Argument[-1];jexlorg.apache.commons.jexl3;Script;false;callable;;;Argument[-1];jexlorg.apache.commons.jexl3;Script;false;execute;;;Argument[-1];jexljavax.management.remote;JMXConnector;true;connect;;;Argument[-1];jndi-injectionjavax.management.remote;JMXConnectorFactory;false;connect;;;Argument[0];jndi-injectionjavax.naming;Context;true;list;;;Argument[0];jndi-injectionjavax.naming;Context;true;listBindings;;;Argument[0];jndi-injectionjavax.naming;Context;true;lookup;;;Argument[0];jndi-injectionjavax.naming;Context;true;lookupLink;;;Argument[0];jndi-injectionjavax.naming;Context;true;rename;;;Argument[0];jndi-injectionjavax.naming;InitialContext;true;doLookup;;;Argument[0];jndi-injectionorg.apache.shiro.jndi;JndiTemplate;false;lookup;;;Argument[0];jndi-injectionorg.springframework.jndi;JndiTemplate;false;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;findByDn;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;list;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;listBindings;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;lookupContext;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;rename;;;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(Name,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;search;(String,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;searchForObject;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap.core;LdapOperations;true;searchForObject;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;findByDn;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;list;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;listBindings;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;lookup;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;lookupContext;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;rename;;;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(Name,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,int,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;search;(String,String,int,String[],ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;searchForObject;(Name,String,ContextMapper);;Argument[0];jndi-injectionorg.springframework.ldap;LdapOperations;true;searchForObject;(String,String,ContextMapper);;Argument[0];jndi-injectioncom.unboundid.ldap.sdk;LDAPConnection;false;asyncSearch;;;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(ReadOnlySearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[]);;Argument[0..7];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,String,String[]);;Argument[0..7];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,Filter,String[]);;Argument[0..3];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(SearchResultListener,String,SearchScope,String,String[]);;Argument[0..3];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[]);;Argument[0..6];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,DereferencePolicy,int,int,boolean,String,String[]);;Argument[0..6];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,Filter,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;search;(String,SearchScope,String,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(ReadOnlySearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(SearchRequest);;Argument[0];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,DereferencePolicy,int,boolean,Filter,String[]);;Argument[0..5];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,DereferencePolicy,int,boolean,String,String[]);;Argument[0..5];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,Filter,String[]);;Argument[0..2];ldapcom.unboundid.ldap.sdk;LDAPConnection;false;searchForEntry;(String,SearchScope,String,String[]);;Argument[0..2];ldapjavax.naming.directory;DirContext;true;search;;;Argument[0..1];ldaporg.apache.directory.ldap.client.api;LdapConnection;true;search;;;Argument[0..2];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(LdapQuery,String);;Argument[0];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticatedLdapEntryContextCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(Name,String,String,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticatedLdapEntryContextCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;authenticate;(String,String,String,AuthenticationErrorCallback);;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;find;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;findOne;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;search;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;searchForContext;;;Argument[0..1];ldaporg.springframework.ldap.core;LdapTemplate;false;searchForObject;;;Argument[0..1];ldapandroid.content;ContentProvider;true;delete;(Uri,String,String[]);;Argument[1];sqlandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String);;Argument[2];sqlandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[2];sqlandroid.content;ContentProvider;true;update;(Uri,ContentValues,String,String[]);;Argument[2];sqlandroid.content;ContentResolver;true;delete;(Uri,String,String[]);;Argument[1];sqlandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String);;Argument[2];sqlandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[2];sqlandroid.content;ContentResolver;true;update;(Uri,ContentValues,String,String[]);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;compileStatement;(String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;delete;(String,String,String[]);;Argument[0..1];sqlandroid.database.sqlite;SQLiteDatabase;false;execPerConnectionSQL;(String,Object[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;execSQL;(String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;execSQL;(String,Object[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String);;Argument[0..2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String);;Argument[4..6];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(String,String[],String,String[],String,String,String,String);;Argument[4..7];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String);;Argument[5..8];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;query;(boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[5..8];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[4];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String);;Argument[6..9];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[3];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[4];sqlandroid.database.sqlite;SQLiteDatabase;false;queryWithFactory;(CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[6..9];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQuery;(String,String[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQuery;(String,String[],CancellationSignal);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQueryWithFactory;(CursorFactory,String,String[],String);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;rawQueryWithFactory;(CursorFactory,String,String[],String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteDatabase;false;update;(String,ContentValues,String,String[]);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;update;(String,ContentValues,String,String[]);;Argument[2];sqlandroid.database.sqlite;SQLiteDatabase;false;updateWithOnConflict;(String,ContentValues,String,String[],int);;Argument[0];sqlandroid.database.sqlite;SQLiteDatabase;false;updateWithOnConflict;(String,ContentValues,String,String[],int);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;delete;(SQLiteDatabase,String,String[]);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;delete;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;insert;(SQLiteDatabase,ContentValues);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String);;Argument[4..6];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String);;Argument[4..7];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[2];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;query;(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal);;Argument[4..7];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;update;(SQLiteDatabase,ContentValues,String,String[]);;Argument[-1];sqlandroid.database.sqlite;SQLiteQueryBuilder;true;update;(SQLiteDatabase,ContentValues,String,String[]);;Argument[2];sqlandroid.database;DatabaseUtils;false;blobFileDescriptorForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database;DatabaseUtils;false;createDbFromSqlStatements;(Context,String,int,String);;Argument[3];sqlandroid.database;DatabaseUtils;false;longForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String);;Argument[1];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String,String);;Argument[1..2];sqlandroid.database;DatabaseUtils;false;queryNumEntries;(SQLiteDatabase,String,String,String[]);;Argument[1..2];sqlandroid.database;DatabaseUtils;false;stringForQuery;(SQLiteDatabase,String,String[]);;Argument[1];sqljava.sqlArgument[0]sqladdBatchorg.jooqPlainSQLAnnotatedprepareCallexecuteQueryloadDataxssexecuteUpdateorg.hibernatecreateQueryprepareStatementcreateSQLQueryexecuteLargeUpdatejavax.ws.rs.clientClientopen-urljakarta.ws.rs.clientQueryProducerevaluateJavascriptloadDataWithBaseURLArgument[1]javax.ws.rs.coreseeOtherurl-redirectjakarta.ws.rs.coreorg.apache.ibatis.jdbcSqlRunnercreateNativeQuerySharedSessionContractsetEntity(HttpEntity)temporaryRedirectcom.google.common.ioResourcesurl-open-streamResponseBuilderheader-splitting(String,Object[])(URL)selectOneasByteSource(URL,Charset)Argument[0..1](URL,OutputStream)org.apache.hc.core5.httpHttpEntityContainerasCharSourceorg.apache.http.utilEntityUtilsupdateEntity(HttpResponse,HttpEntity)(int,String)information-leakjavax.scriptCompiledScriptArgument[-1]mvelorg.mvel2.compilerAccessorCompiledAccExpressionCompiledExpressiongetDirectValueExecutableStatementorg.mvel2.jsr223MvelCompiledScriptMvelScriptEngineorg.mvel2.templatesTemplateRuntimeorg.mvel2MVELevalToBooleanevalToStringexecuteAllExpressionexecuteExpressionexecuteSetExpressionMVELRuntimecom.opensymphony.xwork2.ognlOgnlUtilognl-injectionognl.enhanceExpressionAccessorognlOgnlorg.apache.commons.ognl.enhanceorg.apache.commons.ognlorg.springframework.httpRequestEntity(HttpMethod,URI)(MultiValueMap,HttpMethod,URI)Argument[2](Object,HttpMethod,URI)(Object,HttpMethod,URI,Type)(Object,MultiValueMap,HttpMethod,URI)Argument[3](Object,MultiValueMap,HttpMethod,URI,Type)patchdoExecutegetForObjectheadForHeadersoptionsForAllowpatchForObjectpostForLocationpostForObjectorg.springframework.web.reactive.function.clientWebClient$BuilderxpathevaluateExpressionorg.dom4j.utilProxyDocumentFactoryDocumentHelperorg.springframework.jdbc.coreJdbcTemplatebatchUpdate(String[])queryForListqueryForMapqueryForObjectqueryForRowSetqueryForStreamorg.springframework.jdbc.objectBatchSqlUpdateMappingSqlQueryMappingSqlQueryWithParametersRdbmsOperationsetSqlSqlCallSqlFunctionSqlQuerySqlUpdateUpdatableSqlQuerycreate-fileFileWriterHttpRequest$BuilderHttpRequest(String,URL[],ClassLoader)(String,URL[],ClassLoader,URLStreamHandlerFactory)(URL[])(URL[],ClassLoader)(URL[],ClassLoader,URLStreamHandlerFactory)FilescreateFilenewBufferedReaderHttpsURLConnectionsetDefaultHostnameVerifierset-hostname-verifiersetHostnameVerifierConstraintValidatorContextbuildConstraintViolationWithTemplatebean-validationorg.apache.http.client.methodsHttpDeleteHttpGetHttpHeadHttpOptionsHttpPatchHttpPostHttpPutHttpRequestBaseHttpTraceRequestBuildersetUriorg.apache.http.messageBasicHttpEntityEnclosingRequest(RequestLine)(String,String)(String,String,ProtocolVersion)BasicHttpRequestgroovy.langGroovyClassLoaderparseClass(GroovyCodeSource)groovy(GroovyCodeSource,boolean)(InputStream,String)(Reader,String)GroovyShell(Reader)(String,String,String)(URI)(GroovyCodeSource,List)(GroovyCodeSource,String[])(Reader,String,List)(Reader,String,String[])(String,String,List)(String,String,String[])(URI,List)(URI,String[])groovy.utilEvalme(String,Object,String)(Object,String)(Object,Object,String)xyz(Object,Object,Object,String)org.codehaus.groovy.controlCompilationUnitorg.apache.commons.jexl2ExpressioncallablejexlJexlEngine(JexlContext,Object,String)(JexlContext,Object,String,Object)(Object,String,Object)JexlExpressionJexlScriptUnifiedJEXL$ExpressionUnifiedJEXL$Templateorg.apache.commons.jexl3JxltEngine$ExpressionJxltEngine$Templatejavax.management.remoteJMXConnectorjndi-injectionJMXConnectorFactoryjavax.naminglistBindingslookupLinkInitialContextdoLookuporg.apache.shiro.jndiJndiTemplateorg.springframework.jndiorg.springframework.ldap.coreLdapOperationsfindByDnlookupContext(Name,String,ContextMapper)(Name,String,int,ContextMapper)(Name,String,int,String[],ContextMapper)(String,String,ContextMapper)(String,String,int,ContextMapper)(String,String,int,String[],ContextMapper)searchForObjectorg.springframework.ldapcom.unboundid.ldap.sdkLDAPConnectionasyncSearch(ReadOnlySearchRequest)(SearchRequest)(SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])Argument[0..7](SearchResultListener,String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])(SearchResultListener,String,SearchScope,Filter,String[])Argument[0..3](SearchResultListener,String,SearchScope,String,String[])(String,SearchScope,DereferencePolicy,int,int,boolean,Filter,String[])Argument[0..6](String,SearchScope,DereferencePolicy,int,int,boolean,String,String[])(String,SearchScope,Filter,String[])Argument[0..2](String,SearchScope,String,String[])searchForEntry(String,SearchScope,DereferencePolicy,int,boolean,Filter,String[])Argument[0..5](String,SearchScope,DereferencePolicy,int,boolean,String,String[])javax.naming.directoryDirContextorg.apache.directory.ldap.client.apiLdapConnectionLdapTemplate(LdapQuery,String)(Name,String,String)(Name,String,String,AuthenticatedLdapEntryContextCallback)(Name,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)(Name,String,String,AuthenticationErrorCallback)(String,String,String,AuthenticatedLdapEntryContextCallback)(String,String,String,AuthenticatedLdapEntryContextCallback,AuthenticationErrorCallback)(String,String,String,AuthenticationErrorCallback)findOnesearchForContextandroid.contentContentProvider(Uri,String,String[])(Uri,String[],String,String[],String)(Uri,String[],String,String[],String,CancellationSignal)(Uri,ContentValues,String,String[])ContentResolverandroid.database.sqliteSQLiteDatabasecompileStatementexecPerConnectionSQLexecSQL(String,String[],String,String[],String,String,String)Argument[4..6](String,String[],String,String[],String,String,String,String)Argument[4..7](boolean,String,String[],String,String[],String,String,String,String)Argument[5..8](boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)queryWithFactory(CursorFactory,boolean,String,String[],String,String[],String,String,String,String)Argument[4]Argument[6..9](CursorFactory,boolean,String,String[],String,String[],String,String,String,String,CancellationSignal)rawQuery(String,String[])(String,String[],CancellationSignal)rawQueryWithFactory(CursorFactory,String,String[],String)(CursorFactory,String,String[],String,CancellationSignal)(String,ContentValues,String,String[])updateWithOnConflict(String,ContentValues,String,String[],int)SQLiteQueryBuilder(SQLiteDatabase,String,String[])(SQLiteDatabase,ContentValues)(SQLiteDatabase,String[],String,String[],String,String,String)(SQLiteDatabase,String[],String,String[],String,String,String,String)(SQLiteDatabase,String[],String,String[],String,String,String,String,CancellationSignal)(SQLiteDatabase,ContentValues,String,String[])android.databaseDatabaseUtilsblobFileDescriptorForQuerycreateDbFromSqlStatements(Context,String,int,String)longForQueryqueryNumEntries(SQLiteDatabase,String)(SQLiteDatabase,String,String)Argument[1..2](SQLiteDatabase,String,String,String[])stringForQuery.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taint.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taint.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taint.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taint.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taint.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taint.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taint.json;Json;false;createPatch;;;Argument[0];ReturnValue;taint.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taint.json;Json;false;createPointer;;;Argument[0];ReturnValue;taint.json;Json;false;createReader;;;Argument[0];ReturnValue;taint.json;Json;false;createValue;;;Argument[0];ReturnValue;taint.json;Json;false;createWriter;;;Argument[0];ReturnValue;taint.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taint.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taint.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;value.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;value.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonArray;false;getString;;;Argument[1];ReturnValue;value.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taint.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taint.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;value.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taint.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;value.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taint.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taint.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taint.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;value.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;value.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonObject;false;getString;;;Argument[1];ReturnValue;value.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taint.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;value.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;value.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taint.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taint.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taint.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taint.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taint.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;value.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taint.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taint.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taint.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taint.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taint.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taint.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taint.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taint.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taint.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taint.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taint.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taint.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taint.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taint.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintjavax.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taintjavax.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taintjavax.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taintjavax.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taintjavax.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taintjavax.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taintjavax.json;Json;false;createPatch;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createPointer;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createReader;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createValue;;;Argument[0];ReturnValue;taintjavax.json;Json;false;createWriter;;;Argument[0];ReturnValue;taintjavax.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taintjavax.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taintjavax.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonArray;false;getString;;;Argument[1];ReturnValue;valuejavax.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taintjavax.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taintjavax.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;valuejavax.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taintjavax.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taintjavax.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taintjavax.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taintjavax.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;valuejavax.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;valuejavax.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonObject;false;getString;;;Argument[1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taintjavax.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;valuejavax.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejavax.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taintjavax.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taintjavax.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;valuejavax.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taintjavax.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taintjavax.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taintjavax.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taintjavax.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taintjavax.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taintjavax.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taintjavax.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taintjavax.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taintjavax.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taintjavax.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taintjavax.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taintjavax.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintjakartajakarta.json.stream;JsonParserFactory;false;createParser;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createArrayBuilder;(Collection);;Element of Argument[0];ReturnValue;taintjakarta.json;Json;false;createArrayBuilder;(JsonArray);;Argument[0];ReturnValue;taintjakarta.json;Json;false;createDiff;;;Argument[0..1];ReturnValue;taintjakarta.json;Json;false;createMergeDiff;;;Argument[0..1];ReturnValue;taintjakarta.json;Json;false;createMergePatch;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(JsonObject);;Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(Map);;MapKey of Argument[0];ReturnValue;taintjakarta.json;Json;false;createObjectBuilder;(Map);;MapValue of Argument[0];ReturnValue;taintjakarta.json;Json;false;createPatch;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createPatchBuilder;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createPointer;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createReader;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createValue;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;createWriter;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;decodePointer;;;Argument[0];ReturnValue;taintjakarta.json;Json;false;encodePointer;;;Argument[0];ReturnValue;taintjakarta.json;JsonArray;false;getBoolean;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getBoolean;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getInt;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getInt;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getJsonString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArray;false;getString;;;Argument[1];ReturnValue;valuejakarta.json;JsonArray;false;getValuesAs;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArrayBuilder;false;add;(BigDecimal);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(BigInteger);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonArrayBuilder);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonObjectBuilder);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(JsonValue);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(String);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(boolean);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(double);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,BigDecimal);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,BigInteger);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonArrayBuilder);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonObjectBuilder);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,JsonValue);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,String);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,boolean);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,double);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,int);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(int,long);;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;(long);;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;addAll;;;Argument[0];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonArrayBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;set;;;Argument[-1];ReturnValue;valuejakarta.json;JsonArrayBuilder;false;set;;;Argument[1];Argument[-1];taintjakarta.json;JsonArrayBuilder;false;setNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonMergePatch;false;apply;;;Argument[-1];ReturnValue;taintjakarta.json;JsonMergePatch;false;apply;;;Argument[0];ReturnValue;taintjakarta.json;JsonMergePatch;false;toJsonValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigDecimalValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigIntegerValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;bigIntegerValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;doubleValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;intValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;intValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;longValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;longValueExact;;;Argument[-1];ReturnValue;taintjakarta.json;JsonNumber;false;numberValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getBoolean;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getBoolean;;;Argument[1];ReturnValue;valuejakarta.json;JsonObject;false;getInt;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getInt;;;Argument[1];ReturnValue;valuejakarta.json;JsonObject;false;getJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonNumber;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getJsonString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObject;false;getString;;;Argument[1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;add;;;Argument[1];Argument[-1];taintjakarta.json;JsonObjectBuilder;false;addAll;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;addAll;;;Argument[0];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;addNull;;;Argument[-1];ReturnValue;valuejakarta.json;JsonObjectBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonObjectBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatch;false;apply;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatch;false;apply;;;Argument[0];ReturnValue;taintjakarta.json;JsonPatch;false;toJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;add;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;add;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;build;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;copy;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;copy;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;move;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;move;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;remove;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;remove;;;Argument[0];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;replace;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;replace;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPatchBuilder;false;test;;;Argument[-1];ReturnValue;valuejakarta.json;JsonPatchBuilder;false;test;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;add;;;Argument[-1];ReturnValue;taintjakarta.json;JsonPointer;false;add;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;getValue;;;Argument[0];ReturnValue;taintjakarta.json;JsonPointer;false;remove;;;Argument[0];ReturnValue;taintjakarta.json;JsonPointer;false;replace;;;Argument[0..1];ReturnValue;taintjakarta.json;JsonPointer;false;toString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;read;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReader;false;readValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonReaderFactory;false;createReader;;;Argument[0];ReturnValue;taintjakarta.json;JsonString;false;getChars;;;Argument[-1];ReturnValue;taintjakarta.json;JsonString;false;getString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonStructure;true;getValue;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;asJsonArray;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;asJsonObject;;;Argument[-1];ReturnValue;taintjakarta.json;JsonValue;true;toString;;;Argument[-1];ReturnValue;taintjakarta.json;JsonWriter;false;write;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriter;false;writeArray;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriter;false;writeObject;;;Argument[0];Argument[-1];taintjakarta.json;JsonWriterFactory;false;createWriter;;;Argument[-1];Argument[0];taintjavax.ws.rs.core;Response;false;ok;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Response;false;ok;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;Response;false;accepted;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Response;false;accepted;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;PathSegment;true;getPath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;PathSegment;true;getPath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response;false;fromResponse;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Response;false;fromResponse;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;GenericEntity;true;getEntity;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;GenericEntity;true;getEntity;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;GenericEntity;false;GenericEntity;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3;RegExUtils;false;removeAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceAll;;;Argument[2];ReturnValue;taintjakarta.ws.rs.core;GenericEntity;false;GenericEntity;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrLookup;false;lookup;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;removeFirst;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;PathSegment;true;getMatrixParameters;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replaceFirst;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;removePattern;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;PathSegment;true;getMatrixParameters;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replacePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;RegExUtils;false;replacePattern;;;Argument[2];ReturnValue;taintorg.apache.commons.text.lookup;StringLookup;true;lookup;;;Argument[-1];ReturnValue;taintcom.fasterxml.jackson.core;JsonFactory;false;createParser;;;Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectMapper;true;valueToTree;;;Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectMapper;true;convertValue;;;Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectMapper;false;createParser;;;Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectReader;false;createParser;;;Argument[0];ReturnValue;taintorg.apache.commons.collections;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;KeyValue;true;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.apache.commons.collections;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4;KeyValue;true;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrLookup;false;mapLookup;;;MapValue of Argument[0];ReturnValue;taintcom.fasterxml.jackson.databind;ObjectMapper;true;valueToTree;;;MapValue of Argument[0];ReturnValue;taintorg.apache.commons.text.lookup;StringLookupFactory;false;mapStringLookup;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapKey of Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapKey of Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapValue of Argument[0];MapValue of Argument[-1];valuejakarta.ws.rs.core;AbstractMultivaluedMap;false;AbstractMultivaluedMap;;;MapValue of Argument[0];MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapKey of Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapKey of Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapValue of Argument[0];MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(Map);;MapValue of Argument[0];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedHashMap;false;MultivaluedHashMap;(MultivaluedMap);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.lang3.mutable;MutableObject;false;getValue;;;SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.mutable;MutableObject;false;setValue;;;Argument[0];SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];valueorg.apache.commons.lang3.mutable;MutableObject;false;MutableObject;;;Argument[0];SyntheticField[org.apache.commons.lang3.mutable.MutableObject.value] of Argument[-1];valuejava.util;Optional;false;filter;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;Optional;false;get;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;of;;;Argument[0];Element of ReturnValue;valuejava.util;Optional;false;ofNullable;;;Argument[0];Element of ReturnValue;valuejava.util;Optional;false;or;;;Element of Argument[-1];Element of ReturnValue;valuejava.util;Optional;false;orElse;;;Argument[0];ReturnValue;valuejava.util;Optional;false;orElse;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;orElseGet;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;orElseThrow;;;Element of Argument[-1];ReturnValue;valuejava.util;Optional;false;stream;;;Element of Argument[-1];Element of ReturnValue;valuejakarta.ws.rs.core;UriInfo;true;getPathParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getPathSegments;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getQueryParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getRequestUri;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriInfo;true;getRequestUriBuilder;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getPathParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getPathSegments;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getQueryParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getRequestUri;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriInfo;true;getRequestUriBuilder;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Form;false;Form;;;Argument[0..1];Argument[-1];taintjakarta.ws.rs.core;Form;false;Form;;;Element of MapValue of Argument[0];Argument[-1];taintjakarta.ws.rs.core;Form;false;Form;;;MapKey of Argument[0];Argument[-1];taintjakarta.ws.rs.core;Form;true;asMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Form;true;param;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Form;true;param;;;Argument[0..1];Argument[-1];taintjavax.ws.rs.core;Form;false;Form;;;Argument[0..1];Argument[-1];taintjavax.ws.rs.core;Form;false;Form;;;Element of MapValue of Argument[0];Argument[-1];taintjavax.ws.rs.core;Form;false;Form;;;MapKey of Argument[0];Argument[-1];taintjavax.ws.rs.core;Form;true;asMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Form;true;param;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Form;true;param;;;Argument[0..1];Argument[-1];taintjakarta.ws.rs.core;NewCookie;false;NewCookie;;;Argument[0..9];Argument[-1];taintjakarta.ws.rs.core;NewCookie;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getComment;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getExpiry;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;getMaxAge;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;NewCookie;true;toCookie;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;false;NewCookie;;;Argument[0..9];Argument[-1];taintjavax.ws.rs.core;NewCookie;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;getComment;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;getExpiry;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;getMaxAge;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;NewCookie;true;toCookie;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;false;MediaType;;;Argument[0..2];Argument[-1];taintjakarta.ws.rs.core;MediaType;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;getParameters;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;getSubtype;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;getType;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MediaType;true;withCharset;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;false;MediaType;;;Argument[0..2];Argument[-1];taintjavax.ws.rs.core;MediaType;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;MediaType;true;getParameters;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;true;getSubtype;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;true;getType;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;MediaType;true;withCharset;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;false;Cookie;;;Argument[0..4];Argument[-1];taintjakarta.ws.rs.core;Cookie;false;valueOf;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getDomain;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getName;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getPath;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getValue;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;getVersion;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Cookie;true;toString;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;false;Cookie;;;Argument[0..4];Argument[-1];taintjavax.ws.rs.core;Cookie;false;valueOf;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getDomain;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getName;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getPath;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getValue;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;getVersion;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Cookie;true;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3;ObjectUtils;false;CONST;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;CONST_BYTE;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;CONST_SHORT;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;clone;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;cloneIfPossible;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;defaultIfNull;;;Argument[0..1];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;firstNonNull;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;getIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;max;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;median;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;min;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;mode;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;requireNonEmpty;;;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ObjectUtils;false;toString;(Object,String);;Argument[1];ReturnValue;valueorg.springframework.validation;Errors;true;addAllErrors;;;Argument[0];Argument[-1];taintorg.springframework.validation;Errors;true;getAllErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getFieldError;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getFieldErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getGlobalError;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;getGlobalErrors;;;Argument[-1];ReturnValue;taintorg.springframework.validation;Errors;true;reject;;;Argument[0];Argument[-1];taintorg.springframework.validation;Errors;true;reject;;;Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;reject;;;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;(java.lang.String,java.lang.String,java.lang.Object[],java.lang.String);;ArrayElement of Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;(java.lang.String,java.lang.String,java.lang.String);;Argument[2];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;;;Argument[1];Argument[-1];taintorg.springframework.validation;Errors;true;rejectValue;;;Argument[3];Argument[-1];taintorg.springframework.cache;Cache$ValueRetrievalException;false;ValueRetrievalException;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache$ValueRetrievalException;false;getKey;;;MapKey of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache$ValueWrapper;true;get;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object);;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object,Callable);;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;get;(Object,Class);;MapValue of Argument[-1];ReturnValue;valueorg.springframework.cache;Cache;true;getNativeCache;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.cache;Cache;true;getNativeCache;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.cache;Cache;true;put;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache;true;put;;;Argument[1];MapValue of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;Argument[1];MapValue of Argument[-1];valueorg.springframework.cache;Cache;true;putIfAbsent;;;MapValue of Argument[-1];MapValue of ReturnValue;valuejakarta.ws.rs.core;HttpHeaders;true;getAcceptableLanguages;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getAcceptableMediaTypes;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getCookies;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getHeaderString;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getLanguage;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getMediaType;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getRequestHeader;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;HttpHeaders;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getAcceptableLanguages;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getAcceptableMediaTypes;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getCookies;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getHeaderString;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getLanguage;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getMediaType;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getRequestHeader;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;HttpHeaders;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getBytes;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getInputStream;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getName;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getOriginalFilename;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartFile;true;getResource;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartHttpServletRequest;true;getMultipartHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartHttpServletRequest;true;getRequestHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFile;;;Argument[-1];ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFileMap;;;Argument[-1];MapValue of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFileNames;;;Argument[-1];Element of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getFiles;;;Argument[-1];Element of ReturnValue;taintorg.springframework.web.multipart;MultipartRequest;true;getMultiFileMap;;;Argument[-1];MapValue of ReturnValue;taintorg.springframework.web.multipart;MultipartResolver;true;resolveMultipart;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,boolean);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object);;Argument[0..1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[],boolean);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;(java.lang.String,java.lang.Object[],boolean);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendAsObjectToString;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendSuper;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendSuper;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;appendToString;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.builder;ToStringBuilder;false;appendToString;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.builder;ToStringBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.builder;ToStringBuilder;false;getStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.builder;ToStringBuilder;false;toString;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;MultivaluedMap;true;add;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;(Object,List);;Element of Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;(Object,Object[]);;ArrayElement of Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addAll;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[1];Element of MapValue of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valuejakarta.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[0];MapKey of Argument[-1];valuejakarta.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;add;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;(Object,List);;Element of Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;(Object,Object[]);;ArrayElement of Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addAll;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;addFirst;;;Argument[1];Element of MapValue of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valuejavax.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[0];MapKey of Argument[-1];valuejavax.ws.rs.core;MultivaluedMap;true;putSingle;;;Argument[1];Element of MapValue of Argument[-1];valueorg.apache.commons.lang3.text;WordUtils;false;capitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalizeFully;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;capitalizeFully;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;initials;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;initials;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;uncapitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;uncapitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean);;Argument[2];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3.text;WordUtils;false;wrap;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;abbreviate;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;abbreviate;;;Argument[3];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalizeFully;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;capitalizeFully;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;initials;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;initials;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;uncapitalize;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;uncapitalize;(java.lang.String,char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean);;Argument[2];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;(java.lang.String,int,java.lang.String,boolean,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.text;WordUtils;false;wrap;;;Argument[0];ReturnValue;taintorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;add;(String,Object);;Argument[1];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(PropertyValue);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(PropertyValue);;Argument[0];Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(String,Object);;Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValue;(String,Object);;Argument[1];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;MapKey of Argument[0];MapKey of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(Map);;MapValue of Argument[0];MapValue of Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(PropertyValues);;Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;addPropertyValues;(PropertyValues);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.beans;MutablePropertyValues;true;get;;;MapValue of Element of Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValue;;;Element of Argument[-1];ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValueList;;;Element of Argument[-1];Element of ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;getPropertyValues;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.springframework.beans;MutablePropertyValues;true;setPropertyValueAt;;;Argument[0];Element of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue);;Argument[0];Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(PropertyValue,Object);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.beans;PropertyValue;false;PropertyValue;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.beans;PropertyValue;false;getName;;;MapKey of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValue;false;getValue;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValues;true;getPropertyValue;;;Element of Argument[-1];ReturnValue;valueorg.springframework.beans;PropertyValues;true;getPropertyValues;;;Element of Argument[-1];ArrayElement of ReturnValue;valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ConcurrentModel;false;ConcurrentModel;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Collection);;Element of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAllAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;addAttribute;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;Model;true;addAttribute;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;asMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.ui;Model;true;asMap;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.ui;Model;true;getAttribute;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;mergeAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;Model;true;mergeAttributes;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;Model;true;mergeAttributes;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;ModelMap;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Collection);;Element of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;(Map);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAllAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;addAttribute;(Object);;Argument[0];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;(String,Object);;Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;(String,Object);;Argument[1];MapValue of Argument[-1];valueorg.springframework.ui;ModelMap;false;addAttribute;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;getAttribute;;;MapValue of Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;Argument[-1];ReturnValue;valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.ui;ModelMap;false;mergeAttributes;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutablePair;false;ImmutablePair;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutablePair;false;ImmutablePair;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutablePair;false;getLeft;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;getRight;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;left;;;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutablePair;false;right;;;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;MutablePair;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;MutablePair;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;getLeft;;;Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;getRight;;;Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutablePair;false;setLeft;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;setRight;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutablePair;false;setValue;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;Pair;false;getKey;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getKey;;;Field[org.apache.commons.lang3.tuple.MutablePair.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getValue;;;Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;getValue;;;Field[org.apache.commons.lang3.tuple.MutablePair.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;of;(java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutablePair.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;Pair;false;of;(java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutablePair.right] of ReturnValue;valueorg.apache.commons.lang3.text;StrTokenizer;false;StrTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrTokenizer;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;StrTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StrTokenizer;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;StringTokenizer;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringTokenizer;false;clone;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getCSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getContent;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTSVInstance;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTokenArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;getTokenList;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;next;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;previous;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;previousToken;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;reset;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringTokenizer;false;reset;;;Argument[0];ReturnValue;taintorg.apache.commons.text;StringTokenizer;false;toString;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;allow;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;build;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;cacheControl;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;clone;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;Response$ResponseBuilder;true;contentLocation;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;cookie;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;encoding;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[0];Argument[-1];taintjakarta.ws.rs.core;Response$ResponseBuilder;true;expires;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;header;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;language;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;lastModified;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;link;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;links;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;location;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;replaceAll;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;status;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;tag;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;type;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;variant;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;Response$ResponseBuilder;true;variants;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;allow;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;build;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response$ResponseBuilder;true;cacheControl;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;clone;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;Response$ResponseBuilder;true;contentLocation;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;cookie;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;encoding;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;entity;;;Argument[0];Argument[-1];taintjavax.ws.rs.core;Response$ResponseBuilder;true;expires;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;header;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;language;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;lastModified;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;link;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;links;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;location;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;replaceAll;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;status;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;tag;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;type;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;variant;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;Response$ResponseBuilder;true;variants;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(boolean[],boolean);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(byte[],byte);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(char[],char);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(double[],double);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(float[],float);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(int[],int);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(java.lang.Object[],java.lang.Object);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(long[],long);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;(short[],short);;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;;;Argument[2];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;add;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addAll;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addFirst;;;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;addFirst;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;clone;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;get;(java.lang.Object[],int,java.lang.Object);;Argument[2];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;get;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;insert;;;ArrayElement of Argument[1..2];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;nullToEmpty;(java.lang.Object[],java.lang.Class);;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;nullToEmpty;(java.lang.String[]);;Argument[0];ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;remove;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAll;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAllOccurences;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeAllOccurrences;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeElement;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;removeElements;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;subarray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;ArrayElement of ArrayElement of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;ArrayElement of ArrayElement of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;MapKey of ArrayElement of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toMap;;;MapValue of ArrayElement of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toObject;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toPrimitive;;;Argument[1];ArrayElement of ReturnValue;valueorg.apache.commons.lang3;ArrayUtils;false;toPrimitive;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;ImmutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getLeft;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getMiddle;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;getRight;;;Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;ImmutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;MutableTriple;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;getLeft;;;Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;getMiddle;;;Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;getRight;;;Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of ReturnValue;valueorg.apache.commons.lang3.tuple;MutableTriple;false;setLeft;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.left] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;setMiddle;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.middle] of Argument[-1];valueorg.apache.commons.lang3.tuple;MutableTriple;false;setRight;;;Argument[0];Field[org.apache.commons.lang3.tuple.MutableTriple.right] of Argument[-1];valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[0];Field[org.apache.commons.lang3.tuple.ImmutableTriple.left] of ReturnValue;valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[1];Field[org.apache.commons.lang3.tuple.ImmutableTriple.middle] of ReturnValue;valueorg.apache.commons.lang3.tuple;Triple;false;of;(java.lang.Object,java.lang.Object,java.lang.Object);;Argument[2];Field[org.apache.commons.lang3.tuple.ImmutableTriple.right] of ReturnValue;valueandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String);;Argument[0];ReturnValue;taintandroid.content;ContentProvider;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[0];ReturnValue;taintandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String);;Argument[0];ReturnValue;taintandroid.content;ContentResolver;true;query;(Uri,String[],String,String[],String,CancellationSignal);;Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendColumns;(StringBuilder,String[]);;ArrayElement of Argument[1];Argument[0];taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendWhere;(CharSequence);;Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;appendWhereStandalone;(CharSequence);;Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;Argument[1..5];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String,String,String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;Argument[3..6];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQuery;(String[],String,String[],String,String,String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;Argument[3..7];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildQueryString;(boolean,String,String[],String,String,String,String,String);;ArrayElement of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;Argument[-1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;Argument[1..2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionQuery;(String[],String,String);;ArrayElement of Argument[0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Argument[-1..0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Argument[4..7];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;ArrayElement of Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String,String);;Element of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[-1..0];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[4..5];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Argument[7..8];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;ArrayElement of Argument[1];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;buildUnionSubQuery;(String,String[],Set,int,String,String,String[],String,String);;Element of Argument[2];ReturnValue;taintandroid.database.sqlite;SQLiteQueryBuilder;true;setProjectionMap;(Map);;MapKey of Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;setProjectionMap;(Map);;MapValue of Argument[0];Argument[-1];taintandroid.database.sqlite;SQLiteQueryBuilder;true;setTables;(String);;Argument[0];Argument[-1];taintandroid.database;DatabaseUtils;false;appendSelectionArgs;(String[],String[]);;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;taintandroid.database;DatabaseUtils;false;concatenateWhere;(String,String);;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;StrSubstitutor;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrSubstitutor;false;StrSubstitutor;;;MapValue of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(char[]);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(char[],int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.CharSequence,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.String,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.StringBuffer);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(java.lang.StringBuffer,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;(org.apache.commons.lang3.text.StrBuilder,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuffer);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuffer,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(java.lang.StringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(org.apache.commons.lang3.text.StrBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;replaceIn;(org.apache.commons.lang3.text.StrBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrSubstitutor;false;setVariableResolver;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;StringSubstitutor;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;StringSubstitutor;;;MapValue of Argument[0];Argument[-1];taintorg.apache.commons.text;StringSubstitutor;false;replace;(char[]);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(char[],int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.CharSequence);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.CharSequence,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Map,java.lang.String,java.lang.String);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.Object,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.String,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.StringBuffer);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(java.lang.StringBuffer,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(org.apache.commons.text.TextStringBuilder);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;(org.apache.commons.text.TextStringBuilder,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuffer);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuffer,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(java.lang.StringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(org.apache.commons.text.TextStringBuilder);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;replaceIn;(org.apache.commons.text.TextStringBuilder,int,int);;Argument[-1];Argument[0];taintorg.apache.commons.text;StringSubstitutor;false;setVariableResolver;;;Argument[0];Argument[-1];taintcom.esotericsoftware.kryo.io;Input;false;Input;;;Argument[0];Argument[-1];taintcom.esotericsoftware.kryo5.io;Input;false;Input;;;Argument[0];Argument[-1];taintjava.beans;XMLDecoder;false;XMLDecoder;;;Argument[0];Argument[-1];taintjava.io;BufferedInputStream;false;BufferedInputStream;;;Argument[0];Argument[-1];taintjava.io;BufferedReader;false;BufferedReader;;;Argument[0];Argument[-1];taintjava.io;BufferedReader;true;readLine;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayInputStream;false;ByteArrayInputStream;;;Argument[0];Argument[-1];taintjava.io;ByteArrayOutputStream;false;toByteArray;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayOutputStream;false;toString;;;Argument[-1];ReturnValue;taintjava.io;ByteArrayOutputStream;false;writeTo;;;Argument[-1];Argument[0];taintjava.io;CharArrayReader;false;CharArrayReader;;;Argument[0];Argument[-1];taintjava.io;DataInputStream;false;DataInputStream;;;Argument[0];Argument[-1];taintjava.io;File;false;File;;;Argument[0];Argument[-1];taintjava.io;File;false;File;;;Argument[1];Argument[-1];taintjava.io;File;false;toPath;;;Argument[-1];ReturnValue;taintjava.io;File;false;toURI;;;Argument[-1];ReturnValue;taintjava.io;InputStream;true;read;(byte[]);;Argument[-1];Argument[0];taintjava.io;InputStream;true;read;(byte[],int,int);;Argument[-1];Argument[0];taintjava.io;InputStreamReader;false;InputStreamReader;;;Argument[0];Argument[-1];taintjava.io;ObjectInputStream;false;ObjectInputStream;;;Argument[0];Argument[-1];taintjava.io;Reader;true;read;();;Argument[-1];ReturnValue;taintjava.io;Reader;true;read;;;Argument[-1];Argument[0];taintjava.io;StringReader;false;StringReader;;;Argument[0];Argument[-1];taintjava.lang;System;false;arraycopy;;;Argument[0];Argument[2];taintjava.net;URI;false;URI;(String);;Argument[0];Argument[-1];taintjava.net;URI;false;create;;;Argument[0];ReturnValue;taintjava.net;URI;false;toAsciiString;;;Argument[-1];ReturnValue;taintjava.net;URI;false;toString;;;Argument[-1];ReturnValue;taintjava.net;URI;false;toURL;;;Argument[-1];ReturnValue;taintjava.net;URL;false;URL;(String);;Argument[0];Argument[-1];taintjava.net;URLDecoder;false;decode;;;Argument[0];ReturnValue;taintjava.nio.file;Path;false;toFile;;;Argument[-1];ReturnValue;taintjava.nio;ByteBuffer;false;get;;;Argument[-1];ReturnValue;taintjava.util.zip;GZIPInputStream;false;GZIPInputStream;;;Argument[0];Argument[-1];taintjava.util.zip;ZipInputStream;false;ZipInputStream;;;Argument[0];Argument[-1];taintjava.util;Base64$Decoder;false;decode;(ByteBuffer);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;decode;(String);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;decode;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Decoder;false;wrap;(InputStream);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encode;(ByteBuffer);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encode;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;encodeToString;(byte[]);;Argument[0];ReturnValue;taintjava.util;Base64$Encoder;false;wrap;(OutputStream);;Argument[0];ReturnValue;taintjava.util;StringTokenizer;false;StringTokenizer;;;Argument[0];Argument[-1];taintjava.util;StringTokenizer;false;nextElement;();;Argument[-1];ReturnValue;taintjava.util;StringTokenizer;false;nextToken;;;Argument[-1];ReturnValue;taintjavax.servlet.http;Cookie;false;Cookie;;;Argument[0];Argument[-1];taintjavax.servlet.http;Cookie;false;Cookie;;;Argument[1];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;SAXSource;(InputSource);;Argument[0];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;SAXSource;(XMLReader,InputSource);;Argument[1];Argument[-1];taintjavax.xml.transform.sax;SAXSource;false;getInputSource;;;Argument[-1];ReturnValue;taintjavax.xml.transform.sax;SAXSource;false;sourceToInputSource;;;Argument[0];ReturnValue;taintjavax.xml.transform.stream;StreamSource;false;StreamSource;;;Argument[0];Argument[-1];taintjavax.xml.transform.stream;StreamSource;false;getInputStream;;;Argument[-1];ReturnValue;taintorg.apache.commons.codec;BinaryDecoder;true;decode;(byte[]);;Argument[0];ReturnValue;taintorg.apache.commons.codec;BinaryEncoder;true;encode;(byte[]);;Argument[0];ReturnValue;taintorg.apache.commons.codec;Decoder;true;decode;(Object);;Argument[0];ReturnValue;taintorg.apache.commons.codec;Encoder;true;encode;(Object);;Argument[0];ReturnValue;taintorg.apache.commons.codec;StringDecoder;true;decode;(String);;Argument[0];ReturnValue;taintorg.apache.commons.codec;StringEncoder;true;encode;(String);;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;buffer;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;copy;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;copyLarge;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;read;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,ByteBuffer);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,byte[]);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(InputStream,int);;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;readFully;(ReadableByteChannel,ByteBuffer);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(Reader,char[]);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readFully;(Reader,char[],int,int);;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;readLines;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toBufferedInputStream;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toBufferedReader;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toByteArray;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toCharArray;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toInputStream;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;toString;;;Argument[0];ReturnValue;taintorg.apache.commons.io;IOUtils;false;write;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;writeChunked;;;Argument[0];Argument[1];taintorg.apache.commons.io;IOUtils;false;writeLines;;;Argument[0];Argument[2];taintorg.apache.commons.io;IOUtils;false;writeLines;;;Argument[1];Argument[2];taintorg.xml.sax;InputSource;false;InputSource;;;Argument[0];Argument[-1];taintcom.google.common.io;BaseEncoding;true;decode;(CharSequence);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decode;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingSource;(CharSource);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingSource;(CharSource);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingStream;(Reader);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;decodingStream;(Reader);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[]);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[],int,int);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;encode;(byte[],int,int);;Argument[0];ReturnValue;taintcom.google.common.io;BaseEncoding;true;lowerCase;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;omitPadding;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;upperCase;();;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;withPadChar;(char);;Argument[-1];ReturnValue;taintcom.google.common.io;BaseEncoding;true;withSeparator;(String,int);;Argument[0];ReturnValue;taintcom.google.common.io;ByteArrayDataOutput;true;toByteArray;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteArrayDataOutput;true;write;(byte[]);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;write;(byte[],int,int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;write;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeByte;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeBytes;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeChar;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeChars;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeDouble;(double);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeFloat;(float);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeInt;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeLong;(long);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeShort;(int);;Argument[0];Argument[-1];taintcom.google.common.io;ByteArrayDataOutput;true;writeUTF;(String);;Argument[0];Argument[-1];taintcom.google.common.io;ByteSource;true;asCharSource;(Charset);;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(ByteSource[]);;ArrayElement of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(Iterable);;Element of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;concat;(Iterator);;Element of Argument[0];ReturnValue;taintcom.google.common.io;ByteSource;true;copyTo;(OutputStream);;Argument[-1];Argument[0];taintcom.google.common.io;ByteSource;true;openBufferedStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;openStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;read;();;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;slice;(long,long);;Argument[-1];ReturnValue;taintcom.google.common.io;ByteSource;true;wrap;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;copy;(InputStream,OutputStream);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;copy;(ReadablyByteChannel,WritableByteChannel);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;limit;(InputStream,long);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(ByteArrayInputStream);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(byte[]);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataInput;(byte[],int);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;newDataOutput;(ByteArrayOutputStream);;Argument[0];ReturnValue;taintcom.google.common.io;ByteStreams;false;read;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;readFully;(InputStream,byte[]);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;readFully;(InputStream,byte[],int,int);;Argument[0];Argument[1];taintcom.google.common.io;ByteStreams;false;toByteArray;(InputStream);;Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;asByteSource;(Charset);;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(CharSource[]);;ArrayElement of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(Iterable);;Element of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;concat;(Iterator);;Element of Argument[0];ReturnValue;taintcom.google.common.io;CharSource;true;copyTo;(Appendable);;Argument[-1];Argument[0];taintcom.google.common.io;CharSource;true;lines;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;openBufferedStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;openStream;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;read;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;readFirstLine;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;readLines;();;Argument[-1];ReturnValue;taintcom.google.common.io;CharSource;true;wrap;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.io;CharStreams;false;copy;(Readable,Appendable);;Argument[0];Argument[1];taintcom.google.common.io;CharStreams;false;readLines;(Readable);;Argument[0];ReturnValue;taintcom.google.common.io;CharStreams;false;toString;(Readable);;Argument[0];ReturnValue;taintcom.google.common.io;Closer;true;register;;;Argument[0];ReturnValue;valuecom.google.common.io;Files;false;getFileExtension;(String);;Argument[0];ReturnValue;taintcom.google.common.io;Files;false;getNameWithoutExtension;(String);;Argument[0];ReturnValue;taintcom.google.common.io;Files;false;simplifyPath;(String);;Argument[0];ReturnValue;taintcom.google.common.io;LineReader;false;LineReader;(Readable);;Argument[0];Argument[-1];taintcom.google.common.io;LineReader;true;readLine;();;Argument[-1];ReturnValue;taintcom.google.common.io;MoreFiles;false;getFileExtension;(Path);;Argument[0];ReturnValue;taintcom.google.common.io;MoreFiles;false;getNameWithoutExtension;(Path);;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.lang3.text;StrBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;StrBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;append;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendNewLine;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendNull;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendPadding;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;appendln;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;delete;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;deleteFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;ensureCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;insert;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;minimizeCapacity;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replace;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replaceAll;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;reverse;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setCharAt;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setLength;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setNewLineText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;setNullText;;;Argument[-1];ReturnValue;valueorg.apache.commons.text;TextStringBuilder;false;trim;;;Argument[-1];ReturnValue;valueorg.springframework.http;HttpEntity;true;HttpEntity;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object);;Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;Argument[0];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;HttpEntity;true;HttpEntity;(Object,MultiValueMap);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;HttpEntity;true;getBody;;;Argument[-1];ReturnValue;taintorg.springframework.http;HttpEntity;true;getHeaders;;;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;HttpHeaders;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;HttpHeaders;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;add;(String,String);;Argument[0..1];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(MultiValueMap);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(MultiValueMap);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(String,List);;Argument[0];Argument[-1];taintorg.springframework.http;HttpHeaders;true;addAll;(String,List);;Element of Argument[1];Argument[-1];taintorg.springframework.http;HttpHeaders;true;encodeBasicAuth;(String,String,Charset);;Argument[0..1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;formatHeaders;(MultiValueMap);;Element of MapValue of Argument[0];ReturnValue;taintorg.springframework.http;HttpHeaders;true;formatHeaders;(MultiValueMap);;MapKey of Argument[0];ReturnValue;taintorg.springframework.http;HttpHeaders;true;get;(Object);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlAllowHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlAllowOrigin;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlExposeHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getAccessControlRequestHeaders;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getCacheControl;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getConnection;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getETag;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getETagValuesAsList;(String);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getFieldValues;(String);;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getFirst;(String);;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getHost;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getIfMatch;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getIfNoneMatch;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getLocation;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getOrEmpty;(Object);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getOrigin;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getPragma;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getUpgrade;();;Argument[-1];ReturnValue;taintorg.springframework.http;HttpHeaders;true;getValuesAsList;(String);;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;getVary;();;Argument[-1];Element of ReturnValue;taintorg.springframework.http;HttpHeaders;true;set;(String,String);;Argument[0..1];Argument[-1];taintorg.springframework.http;RequestEntity;true;getUrl;();;Argument[-1];ReturnValue;taintorg.springframework.http;ResponseEntity$BodyBuilder;true;body;(Object);;Argument[-1..0];ReturnValue;taintorg.springframework.http;ResponseEntity$BodyBuilder;true;contentLength;(long);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$BodyBuilder;true;contentType;(MediaType);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;allow;(HttpMethod[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;build;();;Argument[-1];ReturnValue;taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;eTag;(String);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;eTag;(String);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;header;(String,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(Consumer);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(HttpHeaders);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;headers;(HttpHeaders);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;lastModified;;;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;location;(URI);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity$HeadersBuilder;true;location;(URI);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity$HeadersBuilder;true;varyBy;(String[]);;Argument[-1];ReturnValue;valueorg.springframework.http;ResponseEntity;true;ResponseEntity;(MultiValueMap,HttpStatus);;Element of MapValue of Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(MultiValueMap,HttpStatus);;MapKey of Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,HttpStatus);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,HttpStatus);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;Argument[0];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;Element of MapValue of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;ResponseEntity;(Object,MultiValueMap,int);;MapKey of Argument[1];Argument[-1];taintorg.springframework.http;ResponseEntity;true;created;(URI);;Argument[0];ReturnValue;taintorg.springframework.http;ResponseEntity;true;of;(Optional);;Element of Argument[0];ReturnValue;taintorg.springframework.http;ResponseEntity;true;ok;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toLowerCase;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toLowerCase;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toUpperCase;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;toUpperCase;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;truncate;(CharSequence,int,String);;Argument[0];ReturnValue;taintcom.google.common.base;Ascii;false;truncate;(CharSequence,int,String);;Argument[2];ReturnValue;taintcom.google.common.base;CaseFormat;true;to;(CaseFormat,String);;Argument[1];ReturnValue;taintcom.google.common.base;Converter;true;apply;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Converter;true;convert;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Converter;true;convertAll;(Iterable);;Element of Argument[0];Element of ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;appendTo;;;Argument[0];ReturnValue;valuecom.google.common.base;Joiner$MapJoiner;false;appendTo;;;Argument[1];Argument[0];taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterable);;MapKey of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterable);;MapValue of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterator);;MapKey of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Iterator);;MapValue of Element of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Map);;MapKey of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;(Map);;MapValue of Argument[0];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;join;;;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;useForNull;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner$MapJoiner;false;useForNull;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Iterable);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Iterator);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object,Object,Object[]);;Argument[1..2];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object,Object,Object[]);;ArrayElement of Argument[3];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(Appendable,Object[]);;ArrayElement of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Iterable);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Iterator);;Element of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object,Object,Object[]);;Argument[1..2];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object,Object,Object[]);;ArrayElement of Argument[3];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;(StringBuilder,Object[]);;ArrayElement of Argument[1];Argument[-1];taintcom.google.common.base;Joiner;false;appendTo;;;Argument[-1];Argument[0];taintcom.google.common.base;Joiner;false;appendTo;;;Argument[0];ReturnValue;valuecom.google.common.base;Joiner;false;join;;;Argument[-1..2];ReturnValue;taintcom.google.common.base;Joiner;false;on;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;skipNulls;();;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;useForNull;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;useForNull;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(String);;Argument[-1];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Joiner;false;withKeyValueSeparator;(char);;Argument[-1];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;(String,Object);;Argument[1];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;(String,Object);;Argument[1];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[0];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;add;;;Argument[0];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;(Object);;Argument[0];Argument[-1];taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;MoreObjects$ToStringHelper;false;addValue;;;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;omitNullValues;();;Argument[-1];ReturnValue;valuecom.google.common.base;MoreObjects$ToStringHelper;false;toString;();;Argument[-1];ReturnValue;taintcom.google.common.base;MoreObjects;false;firstNonNull;(Object,Object);;Argument[0..1];ReturnValue;valuecom.google.common.base;MoreObjects;false;toStringHelper;(String);;Argument[0];ReturnValue;taintcom.google.common.base;Optional;true;asSet;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.base;Optional;true;fromJavaUtil;(Optional);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;fromNullable;(Object);;Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;get;();;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;of;(Object);;Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;or;(Object);;Argument[0];ReturnValue;valuecom.google.common.base;Optional;true;or;(Object);;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;or;(Optional);;Element of Argument[-1..0];Element of ReturnValue;valuecom.google.common.base;Optional;true;or;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Optional;true;or;(Supplier);;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;orNull;();;Element of Argument[-1];ReturnValue;valuecom.google.common.base;Optional;true;presentInstances;(Iterable);;Element of Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Optional;true;toJavaUtil;();;Element of Argument[-1];Element of ReturnValue;valuecom.google.common.base;Optional;true;toJavaUtil;(Optional);;Element of Argument[0];Element of ReturnValue;valuecom.google.common.base;Preconditions;false;checkNotNull;;;Argument[0];ReturnValue;valuecom.google.common.base;Splitter$MapSplitter;false;split;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;split;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;splitToList;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Splitter;false;splitToStream;(CharSequence);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;emptyToNull;(String);;Argument[0];ReturnValue;valuecom.google.common.base;Strings;false;lenientFormat;(String,Object[]);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;lenientFormat;(String,Object[]);;ArrayElement of Argument[1];ReturnValue;taintcom.google.common.base;Strings;false;nullToEmpty;(String);;Argument[0];ReturnValue;valuecom.google.common.base;Strings;false;padEnd;(String,int,char);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;padStart;(String,int,char);;Argument[0];ReturnValue;taintcom.google.common.base;Strings;false;repeat;(String,int);;Argument[0];ReturnValue;taintcom.google.common.base;Supplier;true;get;();;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;memoize;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;memoizeWithExpiration;(Supplier,long,TimeUnit);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;ofInstance;(Object);;Argument[0];ReturnValue;taintcom.google.common.base;Suppliers;false;synchronizedSupplier;(Supplier);;Argument[0];ReturnValue;taintcom.google.common.base;Verify;false;verifyNotNull;;;Argument[0];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;false;fromLink;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;false;fromPath;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;false;fromUri;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;build;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;build;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncoded;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncoded;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;buildFromMap;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;clone;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;fragment;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;fragment;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;host;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;host;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;matrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;path;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;path;;;Argument[0..1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;queryParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;queryParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;queryParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replacePath;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replacePath;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;replaceQueryParam;;;ArrayElement of Argument[1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[0..2];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[0..1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapKey of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapValue of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;scheme;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;scheme;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;segment;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;segment;;;ArrayElement of Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;toTemplate;;;Argument[-1];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;uri;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;uri;;;Argument[0];ReturnValue;taintjakarta.ws.rs.core;UriBuilder;true;userInfo;;;Argument[-1];ReturnValue;valuejakarta.ws.rs.core;UriBuilder;true;userInfo;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;false;fromLink;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;false;fromPath;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;false;fromUri;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;build;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;build;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncoded;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncoded;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromEncodedMap;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;buildFromMap;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;clone;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;fragment;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;fragment;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;host;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;host;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;matrixParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;matrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;path;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;path;;;Argument[0..1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;queryParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;queryParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;queryParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceMatrix;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceMatrixParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replacePath;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replacePath;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceQuery;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;replaceQueryParam;;;ArrayElement of Argument[1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplate;;;Argument[0..2];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplateFromEncoded;;;Argument[0..1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplates;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapKey of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;resolveTemplatesFromEncoded;;;MapValue of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;scheme;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;scheme;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;schemeSpecificPart;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;segment;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;segment;;;ArrayElement of Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;toTemplate;;;Argument[-1];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;uri;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;uri;;;Argument[0];ReturnValue;taintjavax.ws.rs.core;UriBuilder;true;userInfo;;;Argument[-1];ReturnValue;valuejavax.ws.rs.core;UriBuilder;true;userInfo;;;Argument[0];ReturnValue;taintorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setKey;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;toString;;;MapKey of Argument[-1];ReturnValue;taintorg.apache.commons.collections.keyvalue;AbstractKeyValue;true;toString;;;MapValue of Argument[-1];ReturnValue;taintorg.apache.commons.collections.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapKey of Argument[-1];ReturnValue;taintorg.apache.commons.collections.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapValue of Argument[-1];ReturnValue;taintorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;AbstractKeyValue;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setKey;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;setValue;;;MapValue of Argument[-1];ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;toString;;;MapKey of Argument[-1];ReturnValue;taintorg.apache.commons.collections4.keyvalue;AbstractKeyValue;true;toString;;;MapValue of Argument[-1];ReturnValue;taintorg.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntry;true;AbstractMapEntry;;;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;AbstractMapEntryDecorator;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;getMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapKey of Argument[-1];ReturnValue;taintorg.apache.commons.collections4.keyvalue;AbstractMapEntryDecorator;true;toString;;;MapValue of Argument[-1];ReturnValue;taintorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;DefaultKeyValue;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.apache.commons.collections4.keyvalue;DefaultKeyValue;true;toMapEntry;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;DefaultMapEntry;true;DefaultMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;Argument[1];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;TiedMapEntry;true;TiedMapEntry;;;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Entry);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(KeyValue);;MapValue of Argument[0];MapValue of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[0];MapKey of Argument[-1];valueorg.apache.commons.collections4.keyvalue;UnmodifiableMapEntry;true;UnmodifiableMapEntry;(Object,Object);;Argument[1];MapValue of Argument[-1];valueorg.apache.hc.core5.function;Supplier;true;get;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.io.entity;BasicHttpEntity;true;BasicHttpEntity;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;BufferedHttpEntity;true;BufferedHttpEntity;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;ByteArrayEntity;true;ByteArrayEntity;;;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;parse;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;toByteArray;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;EntityUtils;true;toString;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;create;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;createGzipped;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;createUrlEncoded;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;gzip;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntities;true;withTrailers;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;HttpEntityWrapper;true;HttpEntityWrapper;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;InputStreamEntity;true;InputStreamEntity;;;Argument[0];ReturnValue;taintorg.apache.hc.core5.http.io.entity;StringEntity;true;StringEntity;;;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;RequestLine;(HttpRequest);;Argument[0];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;RequestLine;(String,String,ProtocolVersion);;Argument[1];Argument[-1];taintorg.apache.hc.core5.http.message;RequestLine;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.message;RequestLine;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http.message;RequestLine;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getContentEncoding;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getContentType;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;EntityDetails;true;getTrailerNames;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntity;true;getContent;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntity;true;getTrailers;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpEntityContainer;true;getEntity;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getAuthority;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getPath;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getRequestUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;HttpRequest;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getFirstHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeaders;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getHeaders;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;getLastHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;headerIterator;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;MessageHeaders;true;headerIterator;(String);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;NameValuePair;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.http;NameValuePair;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.net;URIAuthority;true;getHostName;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.net;URIAuthority;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;Args;true;containsNoBlanks;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notBlank;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(Collection,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notEmpty;(Object,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;Args;true;notNull;(Object,String);;Argument[0];ReturnValue;valueorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;ByteArrayBuffer;true;array;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;ByteArrayBuffer;true;toByteArray;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(ByteArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(CharArrayBuffer);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(Object);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(String);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.hc.core5.util;CharArrayBuffer;true;array;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;subSequence;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;substring;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;substringTrimmed;(int,int);;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;toCharArray;();;Argument[-1];ReturnValue;taintorg.apache.hc.core5.util;CharArrayBuffer;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.http.entity;BasicHttpEntity;true;setContent;(InputStream);;Argument[0];Argument[-1];taintorg.apache.http.entity;BufferedHttpEntity;true;BufferedHttpEntity;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.entity;ByteArrayEntity;true;ByteArrayEntity;;;Argument[0];Argument[-1];taintorg.apache.http.entity;HttpEntityWrapper;true;HttpEntityWrapper;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.entity;InputStreamEntity;true;InputStreamEntity;;;Argument[0];ReturnValue;taintorg.apache.http.entity;StringEntity;true;StringEntity;;;Argument[0];Argument[-1];taintorg.apache.http.message;BasicRequestLine;false;BasicRequestLine;;;Argument[1];Argument[-1];taintorg.apache.http.params;HttpParams;true;getDoubleParameter;(String,double);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getDoubleParameter;(String,double);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getIntParameter;(String,int);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getIntParameter;(String,int);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getLongParameter;(String,long);;Argument[-1];ReturnValue;taintorg.apache.http.params;HttpParams;true;getLongParameter;(String,long);;Argument[1];ReturnValue;valueorg.apache.http.params;HttpParams;true;getParameter;(String);;Argument[-1];ReturnValue;taintorg.apache.http.util;Args;true;containsNoBlanks;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notBlank;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notEmpty;(CharSequence,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notEmpty;(Collection,String);;Argument[0];ReturnValue;valueorg.apache.http.util;Args;true;notNull;(Object,String);;Argument[0];ReturnValue;valueorg.apache.http.util;ByteArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;ByteArrayBuffer;true;buffer;();;Argument[-1];ReturnValue;taintorg.apache.http.util;ByteArrayBuffer;true;toByteArray;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;append;(ByteArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(CharArrayBuffer);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(CharArrayBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(Object);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(String);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(byte[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.http.util;CharArrayBuffer;true;buffer;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;subSequence;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;substring;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;substringTrimmed;(int,int);;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;toCharArray;();;Argument[-1];ReturnValue;taintorg.apache.http.util;CharArrayBuffer;true;toString;();;Argument[-1];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getAsciiBytes;(String);;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getAsciiString;;;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getBytes;(String,String);;Argument[0];ReturnValue;taintorg.apache.http.util;EncodingUtils;true;getString;;;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;getContentCharSet;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;getContentMimeType;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;toByteArray;(HttpEntity);;Argument[0];ReturnValue;taintorg.apache.http.util;EntityUtils;true;toString;;;Argument[0];ReturnValue;taintorg.apache.http;Header;true;getElements;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameter;(int);;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameterByName;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getParameters;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderElement;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.http;HeaderIterator;true;nextHeader;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContent;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContentEncoding;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntity;true;getContentType;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpEntityEnclosingRequest;true;getEntity;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getAllHeaders;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getFirstHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getHeaders;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getLastHeader;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;getParams;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;headerIterator;();;Argument[-1];ReturnValue;taintorg.apache.http;HttpMessage;true;headerIterator;(String);;Argument[-1];ReturnValue;taintorg.apache.http;HttpRequest;true;getRequestLine;();;Argument[-1];ReturnValue;taintorg.apache.http;NameValuePair;true;getName;();;Argument[-1];ReturnValue;taintorg.apache.http;NameValuePair;true;getValue;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getMethod;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getUri;();;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;getUri;;;Argument[-1];ReturnValue;taintorg.apache.http;RequestLine;true;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.collections4;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getMap;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getObject;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getString;;;Argument[2];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];valueorg.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections4;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;emptyIfNull;;;Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;fixedSizeSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getMap;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getMap;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getObject;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getObject;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getString;;;Argument[2];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;getString;;;MapValue of Argument[0];ReturnValue;valueorg.apache.commons.collections;MapUtils;true;invertMap;;;MapKey of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;invertMap;;;MapValue of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;iterableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazyMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazyMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazySortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;lazySortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;multiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;multiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;orderedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;orderedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;populateMap;(Map,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;populateMap;(MultiMap,Iterable,Transformer);;Element of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;predicatedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;predicatedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;ArrayElement of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapKey of ArrayElement of Argument[1];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;putAll;;;MapValue of ArrayElement of Argument[1];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;safeAddToMap;;;Argument[1];MapKey of Argument[0];valueorg.apache.commons.collections;MapUtils;true;safeAddToMap;;;Argument[2];MapValue of Argument[0];valueorg.apache.commons.collections;MapUtils;true;synchronizedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;synchronizedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;toMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;toMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;transformedSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableSortedMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.apache.commons.collections;MapUtils;true;unmodifiableSortedMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.apache.commons.lang3;StringUtils;false;abbreviate;(java.lang.String,java.lang.String,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviate;(java.lang.String,java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviateMiddle;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;abbreviateMiddle;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissing;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissing;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissingIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;appendIfMissingIgnoreCase;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;capitalize;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;center;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;center;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chomp;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chomp;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;chop;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultIfBlank;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultIfEmpty;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;defaultString;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;deleteWhitespace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;difference;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;firstNonBlank;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;StringUtils;false;firstNonEmpty;;;ArrayElement of Argument[0];ReturnValue;valueorg.apache.commons.lang3;StringUtils;false;getBytes;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getCommonPrefix;;;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getDigits;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getIfBlank;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;getIfEmpty;;;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(char[],char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(char[],char,int,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,char);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Iterable,java.lang.String);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[]);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],char);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],char,int,int);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.lang.Object[],java.lang.String,int,int);;ArrayElement of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,char);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,java.lang.String);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.Iterator,java.lang.String);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,char,int,int);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,java.lang.String,int,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;join;(java.util.List,java.lang.String,int,int);;Element of Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;joinWith;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;joinWith;;;ArrayElement of Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;left;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;leftPad;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;leftPad;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;lowerCase;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;lowerCase;(java.lang.String,java.util.Locale);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;mid;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;normalizeSpace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;overlay;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;overlay;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissing;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissing;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissingIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;prependIfMissingIgnoreCase;;;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;remove;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeEnd;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeEndIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeStart;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;removeStartIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;repeat;(java.lang.String,java.lang.String,int);;Argument[1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;repeat;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replace;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replace;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceAll;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceAll;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceChars;(java.lang.String,java.lang.String,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceChars;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEach;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEach;;;ArrayElement of Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEachRepeatedly;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceEachRepeatedly;;;ArrayElement of Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceFirst;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceFirst;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceIgnoreCase;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnce;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnce;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnceIgnoreCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replaceOnceIgnoreCase;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replacePattern;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;replacePattern;;;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;reverse;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;reverseDelimited;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;right;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rightPad;(java.lang.String,int,java.lang.String);;Argument[2];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rightPad;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;rotate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;split;(java.lang.String,java.lang.String,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByCharacterType;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByCharacterTypeCamelCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByWholeSeparator;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitByWholeSeparatorPreserveAllTokens;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;splitPreserveAllTokens;(java.lang.String,java.lang.String,int);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;strip;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;strip;(java.lang.String,java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripAccents;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripAll;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripEnd;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripStart;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripToEmpty;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;stripToNull;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substring;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringAfter;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringAfterLast;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBefore;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBeforeLast;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringBetween;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;substringsBetween;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;swapCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toCodePoints;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toEncodedString;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toRootLowerCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toRootUpperCase;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;toString;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trim;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trimToEmpty;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;trimToNull;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;truncate;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;uncapitalize;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;unwrap;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;upperCase;(java.lang.String);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;upperCase;(java.lang.String,java.util.Locale);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;valueOf;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrap;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrap;(java.lang.String,java.lang.String);;Argument[0..1];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrapIfMissing;(java.lang.String,char);;Argument[0];ReturnValue;taintorg.apache.commons.lang3;StringUtils;false;wrapIfMissing;(java.lang.String,java.lang.String);;Argument[0..1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;combine;;;Argument[0..1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;doMatch;;;Argument[1];MapValue of Argument[3];taintorg.springframework.util;AntPathMatcher;false;extractPathWithinPattern;;;Argument[1];ReturnValue;taintorg.springframework.util;AntPathMatcher;false;extractUriTemplateVariables;;;Argument[1];MapValue of ReturnValue;taintorg.springframework.util;AntPathMatcher;false;tokenizePath;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;AntPathMatcher;false;tokenizePattern;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;AutoPopulatingList;false;AutoPopulatingList;(java.util.List,java.lang.Class);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;AutoPopulatingList;false;AutoPopulatingList;(java.util.List,org.springframework.util.AutoPopulatingList.ElementFactory);;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;Base64Utils;false;decode;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeFromString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeFromUrlSafeString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;decodeUrlSafe;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encode;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeToString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeToUrlSafeString;;;Argument[0];ReturnValue;taintorg.springframework.util;Base64Utils;false;encodeUrlSafe;;;Argument[0];ReturnValue;taintorg.springframework.util;CollectionUtils;false;arrayToList;;;ArrayElement of Argument[0];Element of ReturnValue;valueorg.springframework.util;CollectionUtils;false;findFirstMatch;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;findValueOfType;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;firstElement;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;lastElement;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;CollectionUtils;false;mergeArrayIntoCollection;;;ArrayElement of Argument[0];Element of Argument[1];valueorg.springframework.util;CollectionUtils;false;mergePropertiesIntoMap;;;MapKey of Argument[0];MapKey of Argument[1];valueorg.springframework.util;CollectionUtils;false;mergePropertiesIntoMap;;;MapValue of Argument[0];MapValue of Argument[1];valueorg.springframework.util;CollectionUtils;false;toArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toIterator;;;Element of Argument[0];Element of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toMultiValueMap;;;Element of MapValue of Argument[0];Element of MapValue of ReturnValue;valueorg.springframework.util;CollectionUtils;false;toMultiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.springframework.util;CollectionUtils;false;unmodifiableMultiValueMap;;;MapKey of Argument[0];MapKey of ReturnValue;valueorg.springframework.util;CollectionUtils;false;unmodifiableMultiValueMap;;;MapValue of Argument[0];MapValue of ReturnValue;valueorg.springframework.util;CompositeIterator;false;add;;;Element of Argument[0];Element of Argument[-1];valueorg.springframework.util;ConcurrentReferenceHashMap;false;getReference;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getReference;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getSegment;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;ConcurrentReferenceHashMap;false;getSegment;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;FastByteArrayOutputStream;false;getInputStream;;;Argument[-1];ReturnValue;taintorg.springframework.util;FastByteArrayOutputStream;false;toByteArray;;;Argument[-1];ReturnValue;taintorg.springframework.util;FastByteArrayOutputStream;false;write;;;Argument[0];Argument[-1];taintorg.springframework.util;FastByteArrayOutputStream;false;writeTo;;;Argument[-1];Argument[0];taintorg.springframework.util;FileCopyUtils;false;copy;;;Argument[0];Argument[1];taintorg.springframework.util;FileCopyUtils;false;copyToByteArray;;;Argument[0];ReturnValue;taintorg.springframework.util;FileCopyUtils;false;copyToString;;;Argument[0];ReturnValue;taintorg.springframework.util;FileSystemUtils;false;copyRecursively;(java.io.File,java.io.File);;Argument[0];Argument[1];taintorg.springframework.util;LinkedMultiValueMap;false;LinkedMultiValueMap;(java.util.Map);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;LinkedMultiValueMap;false;LinkedMultiValueMap;(java.util.Map);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;LinkedMultiValueMap;false;deepCopy;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;LinkedMultiValueMap;false;deepCopy;;;MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;MultiValueMap;true;add;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;add;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(java.lang.Object,java.util.List);;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(java.lang.Object,java.util.List);;Element of Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(org.springframework.util.MultiValueMap);;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addAll;(org.springframework.util.MultiValueMap);;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addIfAbsent;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;addIfAbsent;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;getFirst;;;Element of MapValue of Argument[-1];ReturnValue;valueorg.springframework.util;MultiValueMap;true;set;;;Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;set;;;Argument[1];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;setAll;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;MultiValueMap;true;setAll;;;MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMap;true;toSingleValueMap;;;Element of MapValue of Argument[-1];MapValue of ReturnValue;valueorg.springframework.util;MultiValueMap;true;toSingleValueMap;;;MapKey of Argument[-1];MapKey of ReturnValue;valueorg.springframework.util;MultiValueMapAdapter;false;MultiValueMapAdapter;;;Element of MapValue of Argument[0];Element of MapValue of Argument[-1];valueorg.springframework.util;MultiValueMapAdapter;false;MultiValueMapAdapter;;;MapKey of Argument[0];MapKey of Argument[-1];valueorg.springframework.util;ObjectUtils;false;addObjectToArray;;;Argument[1];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;addObjectToArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;toObjectArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;ObjectUtils;false;unwrapOptional;;;Element of Argument[0];ReturnValue;valueorg.springframework.util;PropertiesPersister;true;load;;;Argument[1];Argument[0];taintorg.springframework.util;PropertiesPersister;true;loadFromXml;;;Argument[1];Argument[0];taintorg.springframework.util;PropertiesPersister;true;store;;;Argument[0];Argument[1];taintorg.springframework.util;PropertiesPersister;true;store;;;Argument[2];Argument[1];taintorg.springframework.util;PropertiesPersister;true;storeToXml;;;Argument[0];Argument[1];taintorg.springframework.util;PropertiesPersister;true;storeToXml;;;Argument[2];Argument[1];taintorg.springframework.util;PropertyPlaceholderHelper;false;PropertyPlaceholderHelper;;;Argument[0..1];Argument[-1];taintorg.springframework.util;PropertyPlaceholderHelper;false;parseStringValue;;;Argument[0];ReturnValue;taintorg.springframework.util;PropertyPlaceholderHelper;false;replacePlaceholders;(java.lang.String,java.util.Properties);;MapValue of Argument[1];ReturnValue;taintorg.springframework.util;PropertyPlaceholderHelper;false;replacePlaceholders;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;extractArchiveURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;extractJarFileURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;getFile;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;getURL;;;Argument[0];ReturnValue;taintorg.springframework.util;ResourceUtils;false;toURI;;;Argument[0];ReturnValue;taintorg.springframework.util;RouteMatcher;true;combine;;;Argument[0..1];ReturnValue;taintorg.springframework.util;RouteMatcher;true;matchAndExtract;;;Argument[0];MapKey of ReturnValue;taintorg.springframework.util;RouteMatcher;true;matchAndExtract;;;Argument[1];MapValue of ReturnValue;taintorg.springframework.util;RouteMatcher;true;parseRoute;;;Argument[0];ReturnValue;taintorg.springframework.util;SerializationUtils;false;deserialize;;;Argument[0];ReturnValue;taintorg.springframework.util;SerializationUtils;false;serialize;;;Argument[0];ReturnValue;taintorg.springframework.util;StreamUtils;false;copy;(byte[],java.io.OutputStream);;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copy;(java.io.InputStream,java.io.OutputStream);;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copy;(java.lang.String,java.nio.charset.Charset,java.io.OutputStream);;Argument[0];Argument[2];taintorg.springframework.util;StreamUtils;false;copyRange;;;Argument[0];Argument[1];taintorg.springframework.util;StreamUtils;false;copyToByteArray;;;Argument[0];ReturnValue;taintorg.springframework.util;StreamUtils;false;copyToString;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;addStringToArray;;;Argument[1];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;addStringToArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;applyRelativePath;;;Argument[0..1];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToCommaDelimitedString;;;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToDelimitedString;;;Argument[1];ReturnValue;taintorg.springframework.util;StringUtils;false;arrayToDelimitedString;;;ArrayElement of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;capitalize;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;cleanPath;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToCommaDelimitedString;;;Element of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToDelimitedString;;;Argument[1..3];ReturnValue;taintorg.springframework.util;StringUtils;false;collectionToDelimitedString;;;Element of Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;commaDelimitedListToSet;;;Argument[0];Element of ReturnValue;taintorg.springframework.util;StringUtils;false;commaDelimitedListToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;concatenateStringArrays;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;delete;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;deleteAny;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;delimitedListToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;getFilename;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;getFilenameExtension;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;mergeStringArrays;;;ArrayElement of Argument[0..1];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;quote;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;quoteIfString;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;removeDuplicateStrings;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;replace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;replace;;;Argument[2];ReturnValue;taintorg.springframework.util;StringUtils;false;sortStringArray;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;split;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;splitArrayElementsIntoProperties;;;ArrayElement of Argument[0];MapKey of ReturnValue;taintorg.springframework.util;StringUtils;false;splitArrayElementsIntoProperties;;;ArrayElement of Argument[0];MapValue of ReturnValue;taintorg.springframework.util;StringUtils;false;stripFilenameExtension;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;toStringArray;;;Element of Argument[0];ArrayElement of ReturnValue;valueorg.springframework.util;StringUtils;false;tokenizeToStringArray;;;Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;trimAllWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimArrayElements;;;ArrayElement of Argument[0];ArrayElement of ReturnValue;taintorg.springframework.util;StringUtils;false;trimLeadingCharacter;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimLeadingWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimTrailingCharacter;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimTrailingWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;trimWhitespace;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;uncapitalize;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;unqualify;;;Argument[0];ReturnValue;taintorg.springframework.util;StringUtils;false;uriDecode;;;Argument[0];ReturnValue;taintorg.springframework.util;StringValueResolver;false;resolveStringValue;;;Argument[0];ReturnValue;taintorg.springframework.util;SystemPropertyUtils;false;resolvePlaceholders;;;Argument[0];ReturnValue;taintorg.json;CDL;false;rowToJSONArray;;;Argument[0];ReturnValue;taintorg.json;CDL;false;rowToJSONObject;;;Argument[0..1];ReturnValue;taintorg.json;CDL;false;rowToString;;;Argument[0];ReturnValue;taintorg.json;CDL;false;toJSONArray;;;Argument[0..1];ReturnValue;taintorg.json;CDL;false;toString;;;Argument[0..1];ReturnValue;taintorg.json;Cookie;false;escape;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;toString;;;Argument[0];ReturnValue;taintorg.json;Cookie;false;unescape;;;Argument[0];ReturnValue;taintorg.json;CookieList;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;CookieList;false;toString;;;Argument[0];ReturnValue;taintorg.json;HTTP;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;HTTP;false;toString;;;Argument[0];ReturnValue;taintorg.json;HTTPTokener;false;HTTPTokener;;;Argument[0];Argument[-1];taintorg.json;HTTPTokener;false;nextToken;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;JSONArray;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(Iterable);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(JSONArray);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(JSONTokener);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(Object);;ArrayElement of Argument[0];Argument[-1];taintorg.json;JSONArray;false;JSONArray;(String);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;get;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getInt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getLong;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;getString;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;iterator;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONArray;false;join;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;join;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;opt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigDecimal;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBigInteger;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optBoolean;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optDouble;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optEnum;;;Argument[2];ReturnValue;valueorg.json;JSONArray;false;optFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optFloat;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optInt;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optInt;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optLong;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optLong;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optNumber;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;optQuery;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optString;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;optString;;;Argument[1];ReturnValue;valueorg.json;JSONArray;false;put;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Map);;MapKey of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Map);;MapValue of Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(Object);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(boolean);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(double);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(float);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(int);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;(int,Collection);;Element of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Map);;MapKey of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Map);;MapValue of Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,Object);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,boolean);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,double);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,float);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,int);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(int,long);;Argument[1];Argument[-1];taintorg.json;JSONArray;false;put;(long);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;put;;;Argument[-1];ReturnValue;valueorg.json;JSONArray;false;putAll;(Collection);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(JSONArray);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;(Object);;Argument[0];Argument[-1];taintorg.json;JSONArray;false;putAll;;;Argument[-1];ReturnValue;valueorg.json;JSONArray;false;query;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;remove;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;toJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONArray;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;toList;;;Argument[0];Element of ReturnValue;taintorg.json;JSONArray;false;toString;;;Argument[0];ReturnValue;taintorg.json;JSONArray;false;write;;;Argument[-1];Argument[0];taintorg.json;JSONArray;false;write;;;Argument[0];ReturnValue;valueorg.json;JSONML;false;toJSONArray;;;Argument[0];ReturnValue;taintorg.json;JSONML;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;JSONML;false;toString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;JSONObject;(JSONObject,String[]);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(JSONObject,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(JSONTokener);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Map);;MapKey of Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Map);;MapValue of Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object,String[]);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(Object,String[]);;ArrayElement of Argument[1];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(String);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;JSONObject;(String,Locale);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;accumulate;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;accumulate;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;append;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;append;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;doubleToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;get;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getInt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getLong;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getNames;;;Argument[0];ArrayElement of ReturnValue;taintorg.json;JSONObject;false;getNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;getString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;increment;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;increment;;;Argument[0];Argument[-1];taintorg.json;JSONObject;false;keySet;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONObject;false;keys;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONObject;false;names;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;numberToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;opt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigDecimal;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigDecimal;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optBigInteger;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBigInteger;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optBoolean;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optBoolean;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optDouble;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optDouble;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optEnum;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optEnum;;;Argument[2];ReturnValue;valueorg.json;JSONObject;false;optFloat;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optFloat;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optInt;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optInt;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optJSONObject;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optLong;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optLong;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optNumber;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optNumber;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;optQuery;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;optString;;;Argument[1];ReturnValue;valueorg.json;JSONObject;false;put;(String,Collection);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Collection);;Element of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;MapKey of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Map);;MapValue of Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,Object);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,Object);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,boolean);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,boolean);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,double);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,double);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,float);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,float);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,int);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,int);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;(String,long);;Argument[0];Argument[-1];taintorg.json;JSONObject;false;put;(String,long);;Argument[1];Argument[-1];taintorg.json;JSONObject;false;put;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOnce;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOnce;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;putOpt;;;Argument[-1];ReturnValue;valueorg.json;JSONObject;false;putOpt;;;Argument[0..1];Argument[-1];taintorg.json;JSONObject;false;query;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;quote;(String);;Argument[0];ReturnValue;taintorg.json;JSONObject;false;quote;(String,Writer);;Argument[0];Argument[1];taintorg.json;JSONObject;false;quote;(String,Writer);;Argument[1];ReturnValue;valueorg.json;JSONObject;false;remove;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;stringToValue;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;toJSONArray;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;toMap;;;Argument[-1];MapKey of ReturnValue;taintorg.json;JSONObject;false;toMap;;;Argument[-1];MapValue of ReturnValue;taintorg.json;JSONObject;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONObject;false;valueToString;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;wrap;;;Argument[0];ReturnValue;taintorg.json;JSONObject;false;write;;;Argument[-1];Argument[0];taintorg.json;JSONObject;false;write;;;Argument[0];ReturnValue;valueorg.json;JSONObject;true;entrySet;;;Argument[-1];Element of ReturnValue;taintorg.json;JSONPointer$Builder;false;append;;;Argument[-1];ReturnValue;valueorg.json;JSONPointer$Builder;false;append;;;Argument[0];Argument[-1];taintorg.json;JSONPointer$Builder;false;build;;;Argument[-1];ReturnValue;taintorg.json;JSONPointer;false;JSONPointer;(List);;Element of Argument[0];Argument[-1];taintorg.json;JSONPointer;false;JSONPointer;(String);;Argument[0];Argument[-1];taintorg.json;JSONPointer;false;queryFrom;;;Argument[0];ReturnValue;taintorg.json;JSONPointer;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONPointer;false;toURIFragment;;;Argument[-1];ReturnValue;taintorg.json;JSONString;true;toJSONString;;;Argument[-1];ReturnValue;taintorg.json;JSONStringer;false;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;JSONTokener;;;Argument[0];Argument[-1];taintorg.json;JSONTokener;true;next;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextClean;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextString;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextTo;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;nextValue;;;Argument[-1];ReturnValue;taintorg.json;JSONTokener;true;syntaxError;;;Argument[0..1];ReturnValue;taintorg.json;JSONTokener;true;toString;;;Argument[-1];ReturnValue;taintorg.json;JSONWriter;true;JSONWriter;;;Argument[-1];Argument[0];taintorg.json;JSONWriter;true;array;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;endArray;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;endObject;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;key;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;key;;;Argument[0];Argument[-1];taintorg.json;JSONWriter;true;object;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;value;;;Argument[-1];ReturnValue;valueorg.json;JSONWriter;true;value;;;Argument[0];Argument[-1];taintorg.json;JSONWriter;true;valueToString;;;Argument[0];ReturnValue;taintorg.json;Property;false;toJSONObject;;;MapKey of Argument[0];ReturnValue;taintorg.json;Property;false;toJSONObject;;;MapValue of Argument[0];ReturnValue;taintorg.json;Property;false;toProperties;;;Argument[0];MapKey of ReturnValue;taintorg.json;Property;false;toProperties;;;Argument[0];MapValue of ReturnValue;taintorg.json;XML;false;escape;;;Argument[0];ReturnValue;taintorg.json;XML;false;stringToValue;;;Argument[0];ReturnValue;taintorg.json;XML;false;toJSONObject;;;Argument[0];ReturnValue;taintorg.json;XML;false;toString;;;Argument[0..1];ReturnValue;taintorg.json;XML;false;unescape;;;Argument[0];ReturnValue;taintorg.json;XMLTokener;false;XMLTokener;;;Argument[0];Argument[-1];taintorg.json;XMLTokener;false;nextCDATA;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextContent;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextEntity;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextMeta;;;Argument[-1];ReturnValue;taintorg.json;XMLTokener;false;nextToken;;;Argument[-1];ReturnValue;taintorg.json;XMLXsiTypeConverter;true;convert;;;Argument[0];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;StrBuilder;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.CharSequence,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.nio.CharBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(java.nio.CharBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Iterator);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;(Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;(java.lang.String,java.lang.String);;Argument[0..1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendSeparator;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendTo;;;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Iterable,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Iterator,String);;Element of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;(Object[],String);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;appendWithSeparators;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;(org.apache.commons.lang3.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;appendln;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;asReader;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;asTokenizer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;build;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(char[]);;Argument[-1];Argument[0];taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(char[]);;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;getChars;(int,int,char[],int);;Argument[-1];Argument[2];taintorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;insert;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;leftString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;midString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;readFrom;;;Argument[0];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;(int,int,java.lang.String);;Argument[2];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int);;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replace;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceAll;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;replaceFirst;;;Argument[1];Argument[-1];taintorg.apache.commons.lang3.text;StrBuilder;false;rightString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;subSequence;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;substring;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toCharArray;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toString;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toStringBuffer;;;Argument[-1];ReturnValue;taintorg.apache.commons.lang3.text;StrBuilder;false;toStringBuilder;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;StrBuilder;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(char[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(char[],int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.CharSequence);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.CharSequence,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.Object);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.String,java.lang.Object[]);;ArrayElement of Argument[1];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.lang.StringBuilder,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.nio.CharBuffer);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(java.nio.CharBuffer,int,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;(org.apache.commons.text.StrBuilder);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;append;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendAll;(Iterable);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;(Iterator);;Element of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;(Object[]);;ArrayElement of Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendAll;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadLeft;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[-1];ReturnValue;taintorg.apache.commons.text;StrBuilder;false;appendFixedWidthPadRight;;;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;(java.lang.String);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendSeparator;(java.lang.String,int);;Argument[0];Argument[-1];taintorg.apache.commons.text;StrBuilder;false;appendS                